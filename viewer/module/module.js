import * as $crsDQ$vexflow from "vexflow";

var $a63366291e3889d2$exports = {};
// Generated by purs bundle 0.14.5
var $a63366291e3889d2$var$PS = {
};
(function(exports) {
    exports.arrayApply = function(fs) {
        return function(xs) {
            var l = fs.length;
            var k = xs.length;
            var result = new Array(l * k);
            var n = 0;
            for(var i = 0; i < l; i++){
                var f = fs[i];
                for(var j = 0; j < k; j++)result[n++] = f(xs[j]);
            }
            return result;
        };
    };
})($a63366291e3889d2$var$PS["Control.Apply"] = $a63366291e3889d2$var$PS["Control.Apply"] || {
});
(function($PS) {
    $PS["Control.Semigroupoid"] = $PS["Control.Semigroupoid"] || {
    };
    var exports = $PS["Control.Semigroupoid"];
    var semigroupoidFn = {
        compose: function(f) {
            return function(g) {
                return function(x) {
                    return f(g(x));
                };
            };
        }
    };
    var compose = function(dict) {
        return dict.compose;
    };
    exports["compose"] = compose;
    exports["semigroupoidFn"] = semigroupoidFn;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Control.Category"] = $PS["Control.Category"] || {
    };
    var exports = $PS["Control.Category"];
    var Control_Semigroupoid = $PS["Control.Semigroupoid"];
    var identity = function(dict) {
        return dict.identity;
    };
    var categoryFn = {
        identity: function(x) {
            return x;
        },
        Semigroupoid0: function() {
            return Control_Semigroupoid.semigroupoidFn;
        }
    };
    exports["identity"] = identity;
    exports["categoryFn"] = categoryFn;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.Function"] = $PS["Data.Function"] || {
    };
    var exports = $PS["Data.Function"];
    var flip = function(f) {
        return function(b) {
            return function(a) {
                return f(a)(b);
            };
        };
    };
    var $$const = function(a) {
        return function(v) {
            return a;
        };
    };
    exports["flip"] = flip;
    exports["const"] = $$const;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports.arrayMap = function(f) {
        return function(arr) {
            var l = arr.length;
            var result = new Array(l);
            for(var i = 0; i < l; i++)result[i] = f(arr[i]);
            return result;
        };
    };
})($a63366291e3889d2$var$PS["Data.Functor"] = $a63366291e3889d2$var$PS["Data.Functor"] || {
});
(function(exports) {
    exports.unit = {
    };
})($a63366291e3889d2$var$PS["Data.Unit"] = $a63366291e3889d2$var$PS["Data.Unit"] || {
});
(function($PS) {
    $PS["Data.Unit"] = $PS["Data.Unit"] || {
    };
    var exports = $PS["Data.Unit"];
    var $foreign = $PS["Data.Unit"];
    exports["unit"] = $foreign.unit;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.Functor"] = $PS["Data.Functor"] || {
    };
    var exports = $PS["Data.Functor"];
    var $foreign = $PS["Data.Functor"];
    var Control_Semigroupoid = $PS["Control.Semigroupoid"];
    var Data_Function = $PS["Data.Function"];
    var Data_Unit = $PS["Data.Unit"];
    var map = function(dict) {
        return dict.map;
    };
    var $$void = function(dictFunctor) {
        return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
    };
    var voidLeft = function(dictFunctor) {
        return function(f) {
            return function(x) {
                return map(dictFunctor)(Data_Function["const"](x))(f);
            };
        };
    };
    var functorFn = {
        map: Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn)
    };
    var functorArray = {
        map: $foreign.arrayMap
    };
    exports["map"] = map;
    exports["void"] = $$void;
    exports["voidLeft"] = voidLeft;
    exports["functorFn"] = functorFn;
    exports["functorArray"] = functorArray;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Control.Apply"] = $PS["Control.Apply"] || {
    };
    var exports = $PS["Control.Apply"];
    var $foreign = $PS["Control.Apply"];
    var Control_Category = $PS["Control.Category"];
    var Data_Function = $PS["Data.Function"];
    var Data_Functor = $PS["Data.Functor"];
    var applyArray = {
        apply: $foreign.arrayApply,
        Functor0: function() {
            return Data_Functor.functorArray;
        }
    };
    var apply = function(dict) {
        return dict.apply;
    };
    var applySecond = function(dictApply) {
        return function(a) {
            return function(b) {
                return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)))(a))(b);
            };
        };
    };
    exports["apply"] = apply;
    exports["applySecond"] = applySecond;
    exports["applyArray"] = applyArray;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Control.Applicative"] = $PS["Control.Applicative"] || {
    };
    var exports = $PS["Control.Applicative"];
    var Control_Apply = $PS["Control.Apply"];
    var Data_Unit = $PS["Data.Unit"];
    var pure = function(dict) {
        return dict.pure;
    };
    var unless = function(dictApplicative) {
        return function(v) {
            return function(v1) {
                if (!v) return v1;
                if (v) return pure(dictApplicative)(Data_Unit.unit);
                throw new Error("Failed pattern match at Control.Applicative (line 66, column 1 - line 66, column 65): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            };
        };
    };
    var when = function(dictApplicative) {
        return function(v) {
            return function(v1) {
                if (v) return v1;
                if (!v) return pure(dictApplicative)(Data_Unit.unit);
                throw new Error("Failed pattern match at Control.Applicative (line 61, column 1 - line 61, column 63): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            };
        };
    };
    var liftA1 = function(dictApplicative) {
        return function(f) {
            return function(a) {
                return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
            };
        };
    };
    var applicativeArray = {
        pure: function(x) {
            return [
                x
            ];
        },
        Apply0: function() {
            return Control_Apply.applyArray;
        }
    };
    exports["pure"] = pure;
    exports["liftA1"] = liftA1;
    exports["unless"] = unless;
    exports["when"] = when;
    exports["applicativeArray"] = applicativeArray;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports.arrayBind = function(arr) {
        return function(f) {
            var result = [];
            for(var i = 0, l = arr.length; i < l; i++)Array.prototype.push.apply(result, f(arr[i]));
            return result;
        };
    };
})($a63366291e3889d2$var$PS["Control.Bind"] = $a63366291e3889d2$var$PS["Control.Bind"] || {
});
(function($PS) {
    $PS["Control.Bind"] = $PS["Control.Bind"] || {
    };
    var exports = $PS["Control.Bind"];
    var $foreign = $PS["Control.Bind"];
    var Control_Apply = $PS["Control.Apply"];
    var Data_Function = $PS["Data.Function"];
    var discard = function(dict) {
        return dict.discard;
    };
    var bindArray = {
        bind: $foreign.arrayBind,
        Apply0: function() {
            return Control_Apply.applyArray;
        }
    };
    var bind = function(dict) {
        return dict.bind;
    };
    var bindFlipped = function(dictBind) {
        return Data_Function.flip(bind(dictBind));
    };
    var composeKleisliFlipped = function(dictBind) {
        return function(f) {
            return function(g) {
                return function(a) {
                    return bindFlipped(dictBind)(f)(g(a));
                };
            };
        };
    };
    var composeKleisli = function(dictBind) {
        return function(f) {
            return function(g) {
                return function(a) {
                    return bind(dictBind)(f(a))(g);
                };
            };
        };
    };
    var discardUnit = {
        discard: function(dictBind) {
            return bind(dictBind);
        }
    };
    exports["bind"] = bind;
    exports["bindFlipped"] = bindFlipped;
    exports["discard"] = discard;
    exports["composeKleisli"] = composeKleisli;
    exports["composeKleisliFlipped"] = composeKleisliFlipped;
    exports["bindArray"] = bindArray;
    exports["discardUnit"] = discardUnit;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Control.Monad"] = $PS["Control.Monad"] || {
    };
    var exports = $PS["Control.Monad"];
    var Control_Applicative = $PS["Control.Applicative"];
    var Control_Bind = $PS["Control.Bind"];
    var unlessM = function(dictMonad) {
        return function(mb) {
            return function(m) {
                return Control_Bind.bind(dictMonad.Bind1())(mb)(function(b) {
                    return Control_Applicative.unless(dictMonad.Applicative0())(b)(m);
                });
            };
        };
    };
    var ap = function(dictMonad) {
        return function(f) {
            return function(a) {
                return Control_Bind.bind(dictMonad.Bind1())(f)(function(f$prime) {
                    return Control_Bind.bind(dictMonad.Bind1())(a)(function(a$prime) {
                        return Control_Applicative.pure(dictMonad.Applicative0())(f$prime(a$prime));
                    });
                });
            };
        };
    };
    exports["unlessM"] = unlessM;
    exports["ap"] = ap;
})($a63366291e3889d2$var$PS);
(function(exports) {
    var refEq = function(r1) {
        return function(r2) {
            return r1 === r2;
        };
    };
    exports.eqBooleanImpl = refEq;
    exports.eqIntImpl = refEq;
    exports.eqNumberImpl = refEq;
    exports.eqCharImpl = refEq;
    exports.eqStringImpl = refEq;
    exports.eqArrayImpl = function(f) {
        return function(xs) {
            return function(ys) {
                if (xs.length !== ys.length) return false;
                for(var i = 0; i < xs.length; i++){
                    if (!f(xs[i])(ys[i])) return false;
                }
                return true;
            };
        };
    };
})($a63366291e3889d2$var$PS["Data.Eq"] = $a63366291e3889d2$var$PS["Data.Eq"] || {
});
(function($PS) {
    $PS["Data.Symbol"] = $PS["Data.Symbol"] || {
    };
    var exports = $PS["Data.Symbol"];
    var SProxy1 = function() {
        function SProxy() {
        }
        SProxy.value = new SProxy();
        return SProxy;
    }();
    var reflectSymbol = function(dict) {
        return dict.reflectSymbol;
    };
    exports["reflectSymbol"] = reflectSymbol;
    exports["SProxy"] = SProxy1;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports.unsafeGet = function(label) {
        return function(rec) {
            return rec[label];
        };
    };
    exports.unsafeSet = function(label) {
        return function(value) {
            return function(rec) {
                var copy = {
                };
                for(var key in rec)if (({
                }).hasOwnProperty.call(rec, key)) copy[key] = rec[key];
                copy[label] = value;
                return copy;
            };
        };
    };
})($a63366291e3889d2$var$PS["Record.Unsafe"] = $a63366291e3889d2$var$PS["Record.Unsafe"] || {
});
(function($PS) {
    $PS["Record.Unsafe"] = $PS["Record.Unsafe"] || {
    };
    var exports = $PS["Record.Unsafe"];
    var $foreign = $PS["Record.Unsafe"];
    exports["unsafeGet"] = $foreign.unsafeGet;
    exports["unsafeSet"] = $foreign.unsafeSet;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Type.Proxy"] = $PS["Type.Proxy"] || {
    };
    var exports = $PS["Type.Proxy"];
    var $$Proxy1 = function() {
        function $$Proxy() {
        }
        $$Proxy.value = new $$Proxy();
        return $$Proxy;
    }();
    exports["Proxy"] = $$Proxy1;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.Eq"] = $PS["Data.Eq"] || {
    };
    var exports = $PS["Data.Eq"];
    var $foreign = $PS["Data.Eq"];
    var Data_Symbol = $PS["Data.Symbol"];
    var Record_Unsafe = $PS["Record.Unsafe"];
    var Type_Proxy = $PS["Type.Proxy"];
    var eqString = {
        eq: $foreign.eqStringImpl
    };
    var eqRowNil = {
        eqRecord: function(v) {
            return function(v1) {
                return function(v2) {
                    return true;
                };
            };
        }
    };
    var eqRecord = function(dict) {
        return dict.eqRecord;
    };
    var eqRec = function(dictRowToList) {
        return function(dictEqRecord) {
            return {
                eq: eqRecord(dictEqRecord)(Type_Proxy["Proxy"].value)
            };
        };
    };
    var eqNumber = {
        eq: $foreign.eqNumberImpl
    };
    var eqInt = {
        eq: $foreign.eqIntImpl
    };
    var eqChar = {
        eq: $foreign.eqCharImpl
    };
    var eqBoolean = {
        eq: $foreign.eqBooleanImpl
    };
    var eq = function(dict) {
        return dict.eq;
    };
    var eqArray = function(dictEq) {
        return {
            eq: $foreign.eqArrayImpl(eq(dictEq))
        };
    };
    var eqRowCons = function(dictEqRecord) {
        return function(dictCons) {
            return function(dictIsSymbol) {
                return function(dictEq) {
                    return {
                        eqRecord: function(v) {
                            return function(ra) {
                                return function(rb) {
                                    var tail = eqRecord(dictEqRecord)(Type_Proxy["Proxy"].value)(ra)(rb);
                                    var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                                    var get = Record_Unsafe.unsafeGet(key);
                                    return eq(dictEq)(get(ra))(get(rb)) && tail;
                                };
                            };
                        }
                    };
                };
            };
        };
    };
    var notEq = function(dictEq) {
        return function(x) {
            return function(y) {
                return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
            };
        };
    };
    exports["eq"] = eq;
    exports["notEq"] = notEq;
    exports["eqInt"] = eqInt;
    exports["eqNumber"] = eqNumber;
    exports["eqChar"] = eqChar;
    exports["eqString"] = eqString;
    exports["eqArray"] = eqArray;
    exports["eqRec"] = eqRec;
    exports["eqRowNil"] = eqRowNil;
    exports["eqRowCons"] = eqRowCons;
})($a63366291e3889d2$var$PS);
(function(exports) {
    var unsafeCompareImpl = function(lt) {
        return function(eq) {
            return function(gt) {
                return function(x) {
                    return function(y) {
                        return x < y ? lt : x === y ? eq : gt;
                    };
                };
            };
        };
    };
    exports.ordIntImpl = unsafeCompareImpl;
    exports.ordNumberImpl = unsafeCompareImpl;
    exports.ordStringImpl = unsafeCompareImpl;
    exports.ordCharImpl = unsafeCompareImpl;
    exports.ordArrayImpl = function(f) {
        return function(xs) {
            return function(ys) {
                var i = 0;
                var xlen = xs.length;
                var ylen = ys.length;
                while(i < xlen && i < ylen){
                    var x = xs[i];
                    var y = ys[i];
                    var o = f(x)(y);
                    if (o !== 0) return o;
                    i++;
                }
                if (xlen === ylen) return 0;
                else if (xlen > ylen) return -1;
                else return 1;
            };
        };
    };
})($a63366291e3889d2$var$PS["Data.Ord"] = $a63366291e3889d2$var$PS["Data.Ord"] || {
});
(function($PS) {
    $PS["Data.Ordering"] = $PS["Data.Ordering"] || {
    };
    var exports = $PS["Data.Ordering"];
    var LT1 = function() {
        function LT() {
        }
        LT.value = new LT();
        return LT;
    }();
    var GT1 = function() {
        function GT() {
        }
        GT.value = new GT();
        return GT;
    }();
    var EQ1 = function() {
        function EQ() {
        }
        EQ.value = new EQ();
        return EQ;
    }();
    var invert = function(v) {
        if (v instanceof GT1) return LT1.value;
        if (v instanceof EQ1) return EQ1.value;
        if (v instanceof LT1) return GT1.value;
        throw new Error("Failed pattern match at Data.Ordering (line 33, column 1 - line 33, column 31): " + [
            v.constructor.name
        ]);
    };
    var eqOrdering = {
        eq: function(v) {
            return function(v1) {
                if (v instanceof LT1 && v1 instanceof LT1) return true;
                if (v instanceof GT1 && v1 instanceof GT1) return true;
                if (v instanceof EQ1 && v1 instanceof EQ1) return true;
                return false;
            };
        }
    };
    exports["LT"] = LT1;
    exports["GT"] = GT1;
    exports["EQ"] = EQ1;
    exports["invert"] = invert;
    exports["eqOrdering"] = eqOrdering;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports.intSub = function(x) {
        return function(y) {
            /* jshint bitwise: false */ return x - y | 0;
        };
    };
})($a63366291e3889d2$var$PS["Data.Ring"] = $a63366291e3889d2$var$PS["Data.Ring"] || {
});
(function(exports) {
    exports.intAdd = function(x) {
        return function(y) {
            /* jshint bitwise: false */ return x + y | 0;
        };
    };
    exports.intMul = function(x) {
        return function(y) {
            /* jshint bitwise: false */ return x * y | 0;
        };
    };
})($a63366291e3889d2$var$PS["Data.Semiring"] = $a63366291e3889d2$var$PS["Data.Semiring"] || {
});
(function($PS) {
    $PS["Data.Semiring"] = $PS["Data.Semiring"] || {
    };
    var exports = $PS["Data.Semiring"];
    var $foreign = $PS["Data.Semiring"];
    var zero = function(dict) {
        return dict.zero;
    };
    var semiringInt = {
        add: $foreign.intAdd,
        zero: 0,
        mul: $foreign.intMul,
        one: 1
    };
    var one = function(dict) {
        return dict.one;
    };
    var mul = function(dict) {
        return dict.mul;
    };
    exports["zero"] = zero;
    exports["mul"] = mul;
    exports["one"] = one;
    exports["semiringInt"] = semiringInt;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.Ring"] = $PS["Data.Ring"] || {
    };
    var exports = $PS["Data.Ring"];
    var $foreign = $PS["Data.Ring"];
    var Data_Semiring = $PS["Data.Semiring"];
    var sub = function(dict) {
        return dict.sub;
    };
    var ringInt = {
        sub: $foreign.intSub,
        Semiring0: function() {
            return Data_Semiring.semiringInt;
        }
    };
    var negate = function(dictRing) {
        return function(a) {
            return sub(dictRing)(Data_Semiring.zero(dictRing.Semiring0()))(a);
        };
    };
    exports["negate"] = negate;
    exports["ringInt"] = ringInt;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.Ord"] = $PS["Data.Ord"] || {
    };
    var exports = $PS["Data.Ord"];
    var $foreign = $PS["Data.Ord"];
    var Data_Eq = $PS["Data.Eq"];
    var Data_Ordering = $PS["Data.Ordering"];
    var Data_Ring = $PS["Data.Ring"];
    var Data_Semiring = $PS["Data.Semiring"];
    var Data_Symbol = $PS["Data.Symbol"];
    var Record_Unsafe = $PS["Record.Unsafe"];
    var Type_Proxy = $PS["Type.Proxy"];
    var ordString = {
        compare: $foreign.ordStringImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),
        Eq0: function() {
            return Data_Eq.eqString;
        }
    };
    var ordRecordNil = {
        compareRecord: function(v) {
            return function(v1) {
                return function(v2) {
                    return Data_Ordering.EQ.value;
                };
            };
        },
        EqRecord0: function() {
            return Data_Eq.eqRowNil;
        }
    };
    var ordNumber = {
        compare: $foreign.ordNumberImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),
        Eq0: function() {
            return Data_Eq.eqNumber;
        }
    };
    var ordInt = {
        compare: $foreign.ordIntImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),
        Eq0: function() {
            return Data_Eq.eqInt;
        }
    };
    var ordChar = {
        compare: $foreign.ordCharImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value),
        Eq0: function() {
            return Data_Eq.eqChar;
        }
    };
    var compareRecord = function(dict) {
        return dict.compareRecord;
    };
    var ordRecord = function(dictRowToList) {
        return function(dictOrdRecord) {
            return {
                compare: compareRecord(dictOrdRecord)(Type_Proxy["Proxy"].value),
                Eq0: function() {
                    return Data_Eq.eqRec()(dictOrdRecord.EqRecord0());
                }
            };
        };
    };
    var compare = function(dict) {
        return dict.compare;
    };
    var greaterThanOrEq = function(dictOrd) {
        return function(a1) {
            return function(a2) {
                var v = compare(dictOrd)(a1)(a2);
                if (v instanceof Data_Ordering.LT) return false;
                return true;
            };
        };
    };
    var signum = function(dictOrd) {
        return function(dictRing) {
            return function(x) {
                var $52 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));
                if ($52) return Data_Semiring.one(dictRing.Semiring0());
                return Data_Ring.negate(dictRing)(Data_Semiring.one(dictRing.Semiring0()));
            };
        };
    };
    var max = function(dictOrd) {
        return function(x) {
            return function(y) {
                var v = compare(dictOrd)(x)(y);
                if (v instanceof Data_Ordering.LT) return y;
                if (v instanceof Data_Ordering.EQ) return x;
                if (v instanceof Data_Ordering.GT) return x;
                throw new Error("Failed pattern match at Data.Ord (line 176, column 3 - line 179, column 12): " + [
                    v.constructor.name
                ]);
            };
        };
    };
    var min = function(dictOrd) {
        return function(x) {
            return function(y) {
                var v = compare(dictOrd)(x)(y);
                if (v instanceof Data_Ordering.LT) return x;
                if (v instanceof Data_Ordering.EQ) return x;
                if (v instanceof Data_Ordering.GT) return y;
                throw new Error("Failed pattern match at Data.Ord (line 167, column 3 - line 170, column 12): " + [
                    v.constructor.name
                ]);
            };
        };
    };
    var ordArray = function(dictOrd) {
        return {
            compare: (function() {
                var toDelta = function(x) {
                    return function(y) {
                        var v = compare(dictOrd)(x)(y);
                        if (v instanceof Data_Ordering.EQ) return 0;
                        if (v instanceof Data_Ordering.LT) return 1;
                        if (v instanceof Data_Ordering.GT) return -1;
                        throw new Error("Failed pattern match at Data.Ord (line 74, column 7 - line 77, column 17): " + [
                            v.constructor.name
                        ]);
                    };
                };
                return function(xs) {
                    return function(ys) {
                        return compare(ordInt)(0)($foreign.ordArrayImpl(toDelta)(xs)(ys));
                    };
                };
            })(),
            Eq0: function() {
                return Data_Eq.eqArray(dictOrd.Eq0());
            }
        };
    };
    var ordRecordCons = function(dictOrdRecord) {
        return function(dictCons) {
            return function(dictIsSymbol) {
                return function(dictOrd) {
                    return {
                        compareRecord: function(v) {
                            return function(ra) {
                                return function(rb) {
                                    var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                                    var left = compare(dictOrd)(Record_Unsafe.unsafeGet(key)(ra))(Record_Unsafe.unsafeGet(key)(rb));
                                    var $58 = Data_Eq.notEq(Data_Ordering.eqOrdering)(left)(Data_Ordering.EQ.value);
                                    if ($58) return left;
                                    return compareRecord(dictOrdRecord)(Type_Proxy["Proxy"].value)(ra)(rb);
                                };
                            };
                        },
                        EqRecord0: function() {
                            return Data_Eq.eqRowCons(dictOrdRecord.EqRecord0())()(dictIsSymbol)(dictOrd.Eq0());
                        }
                    };
                };
            };
        };
    };
    var abs = function(dictOrd) {
        return function(dictRing) {
            return function(x) {
                var $62 = greaterThanOrEq(dictOrd)(x)(Data_Semiring.zero(dictRing.Semiring0()));
                if ($62) return x;
                return Data_Ring.negate(dictRing)(x);
            };
        };
    };
    exports["compare"] = compare;
    exports["min"] = min;
    exports["max"] = max;
    exports["abs"] = abs;
    exports["signum"] = signum;
    exports["ordInt"] = ordInt;
    exports["ordNumber"] = ordNumber;
    exports["ordString"] = ordString;
    exports["ordChar"] = ordChar;
    exports["ordArray"] = ordArray;
    exports["ordRecordNil"] = ordRecordNil;
    exports["ordRecordCons"] = ordRecordCons;
    exports["ordRecord"] = ordRecord;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports.showIntImpl = function(n) {
        return n.toString();
    };
    exports.showNumberImpl = function(n) {
        var str = n.toString();
        return isNaN(str + ".0") ? str : str + ".0";
    };
    exports.showCharImpl = function(c) {
        var code = c.charCodeAt(0);
        if (code < 32 || code === 127) {
            switch(c){
                case "\x07":
                    return "'\\a'";
                case "\b":
                    return "'\\b'";
                case "\f":
                    return "'\\f'";
                case "\n":
                    return "'\\n'";
                case "\r":
                    return "'\\r'";
                case "\t":
                    return "'\\t'";
                case "\v":
                    return "'\\v'";
            }
            return "'\\" + code.toString(10) + "'";
        }
        return c === "'" || c === "\\" ? "'\\" + c + "'" : "'" + c + "'";
    };
    exports.showStringImpl = function(s) {
        var l = s.length;
        return "\"" + s.replace(/[\0-\x1F\x7F"\\]/g, function(c, i) {
            switch(c){
                case "\"":
                case "\\":
                    return "\\" + c;
                case "\x07":
                    return "\\a";
                case "\b":
                    return "\\b";
                case "\f":
                    return "\\f";
                case "\n":
                    return "\\n";
                case "\r":
                    return "\\r";
                case "\t":
                    return "\\t";
                case "\v":
                    return "\\v";
            }
            var k = i + 1;
            var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
            return "\\" + c.charCodeAt(0).toString(10) + empty;
        }) + "\"";
    };
    exports.showArrayImpl = function(f) {
        return function(xs) {
            var ss = [];
            for(var i = 0, l = xs.length; i < l; i++)ss[i] = f(xs[i]);
            return "[" + ss.join(",") + "]";
        };
    };
    exports.cons = function(head) {
        return function(tail) {
            return [
                head
            ].concat(tail);
        };
    };
    exports.join = function(separator) {
        return function(xs) {
            return xs.join(separator);
        };
    };
})($a63366291e3889d2$var$PS["Data.Show"] = $a63366291e3889d2$var$PS["Data.Show"] || {
});
(function($PS) {
    $PS["Data.Show"] = $PS["Data.Show"] || {
    };
    var exports = $PS["Data.Show"];
    var $foreign = $PS["Data.Show"];
    var Data_Symbol = $PS["Data.Symbol"];
    var Record_Unsafe = $PS["Record.Unsafe"];
    var Type_Proxy = $PS["Type.Proxy"];
    var showString = {
        show: $foreign.showStringImpl
    };
    var showRecordFieldsNil = {
        showRecordFields: function(v) {
            return function(v1) {
                return [];
            };
        }
    };
    var showRecordFields = function(dict) {
        return dict.showRecordFields;
    };
    var showRecord = function(dictRowToList) {
        return function(dictShowRecordFields) {
            return {
                show: function(record) {
                    var v = showRecordFields(dictShowRecordFields)(Type_Proxy["Proxy"].value)(record);
                    if (v.length === 0) return "{}";
                    return $foreign.join(" ")([
                        "{",
                        $foreign.join(", ")(v),
                        "}"
                    ]);
                }
            };
        };
    };
    var showNumber = {
        show: $foreign.showNumberImpl
    };
    var showInt = {
        show: $foreign.showIntImpl
    };
    var showChar = {
        show: $foreign.showCharImpl
    };
    var show = function(dict) {
        return dict.show;
    };
    var showArray = function(dictShow) {
        return {
            show: $foreign.showArrayImpl(show(dictShow))
        };
    };
    var showRecordFieldsCons = function(dictIsSymbol) {
        return function(dictShowRecordFields) {
            return function(dictShow) {
                return {
                    showRecordFields: function(v) {
                        return function(record) {
                            var tail = showRecordFields(dictShowRecordFields)(Type_Proxy["Proxy"].value)(record);
                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                            var focus = Record_Unsafe.unsafeGet(key)(record);
                            return $foreign.cons($foreign.join(": ")([
                                key,
                                show(dictShow)(focus)
                            ]))(tail);
                        };
                    }
                };
            };
        };
    };
    exports["show"] = show;
    exports["showInt"] = showInt;
    exports["showNumber"] = showNumber;
    exports["showChar"] = showChar;
    exports["showString"] = showString;
    exports["showArray"] = showArray;
    exports["showRecord"] = showRecord;
    exports["showRecordFieldsNil"] = showRecordFieldsNil;
    exports["showRecordFieldsCons"] = showRecordFieldsCons;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.Maybe"] = $PS["Data.Maybe"] || {
    };
    var exports = $PS["Data.Maybe"];
    var Control_Category = $PS["Control.Category"];
    var Data_Eq = $PS["Data.Eq"];
    var Data_Function = $PS["Data.Function"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_Ord = $PS["Data.Ord"];
    var Data_Ordering = $PS["Data.Ordering"];
    var Data_Show = $PS["Data.Show"];
    var Nothing1 = function() {
        function Nothing() {
        }
        Nothing.value = new Nothing();
        return Nothing;
    }();
    var Just1 = function() {
        function Just(value0) {
            this.value0 = value0;
        }
        Just.create = function(value0) {
            return new Just(value0);
        };
        return Just;
    }();
    var showMaybe = function(dictShow) {
        return {
            show: function(v) {
                if (v instanceof Just1) return "(Just " + (Data_Show.show(dictShow)(v.value0) + ")");
                if (v instanceof Nothing1) return "Nothing";
                throw new Error("Failed pattern match at Data.Maybe (line 216, column 1 - line 218, column 28): " + [
                    v.constructor.name
                ]);
            }
        };
    };
    var maybe = function(v) {
        return function(v1) {
            return function(v2) {
                if (v2 instanceof Nothing1) return v;
                if (v2 instanceof Just1) return v1(v2.value0);
                throw new Error("Failed pattern match at Data.Maybe (line 230, column 1 - line 230, column 51): " + [
                    v.constructor.name,
                    v1.constructor.name,
                    v2.constructor.name
                ]);
            };
        };
    };
    var isNothing = maybe(true)(Data_Function["const"](false));
    var isJust = maybe(false)(Data_Function["const"](true));
    var functorMaybe = {
        map: function(v) {
            return function(v1) {
                if (v1 instanceof Just1) return new Just1(v(v1.value0));
                return Nothing1.value;
            };
        }
    };
    var fromMaybe = function(a) {
        return maybe(a)(Control_Category.identity(Control_Category.categoryFn));
    };
    var fromJust = function(dictPartial) {
        return function(v) {
            if (v instanceof Just1) return v.value0;
            throw new Error("Failed pattern match at Data.Maybe (line 281, column 1 - line 281, column 46): " + [
                v.constructor.name
            ]);
        };
    };
    var eqMaybe = function(dictEq) {
        return {
            eq: function(x) {
                return function(y) {
                    if (x instanceof Nothing1 && y instanceof Nothing1) return true;
                    if (x instanceof Just1 && y instanceof Just1) return Data_Eq.eq(dictEq)(x.value0)(y.value0);
                    return false;
                };
            }
        };
    };
    var ordMaybe = function(dictOrd) {
        return {
            compare: function(x) {
                return function(y) {
                    if (x instanceof Nothing1 && y instanceof Nothing1) return Data_Ordering.EQ.value;
                    if (x instanceof Nothing1) return Data_Ordering.LT.value;
                    if (y instanceof Nothing1) return Data_Ordering.GT.value;
                    if (x instanceof Just1 && y instanceof Just1) return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
                    throw new Error("Failed pattern match at Data.Maybe (line 205, column 1 - line 205, column 51): " + [
                        x.constructor.name,
                        y.constructor.name
                    ]);
                };
            },
            Eq0: function() {
                return eqMaybe(dictOrd.Eq0());
            }
        };
    };
    var applyMaybe = {
        apply: function(v) {
            return function(v1) {
                if (v instanceof Just1) return Data_Functor.map(functorMaybe)(v.value0)(v1);
                if (v instanceof Nothing1) return Nothing1.value;
                throw new Error("Failed pattern match at Data.Maybe (line 68, column 1 - line 70, column 30): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            };
        },
        Functor0: function() {
            return functorMaybe;
        }
    };
    var bindMaybe = {
        bind: function(v) {
            return function(v1) {
                if (v instanceof Just1) return v1(v.value0);
                if (v instanceof Nothing1) return Nothing1.value;
                throw new Error("Failed pattern match at Data.Maybe (line 126, column 1 - line 128, column 28): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            };
        },
        Apply0: function() {
            return applyMaybe;
        }
    };
    var applicativeMaybe = {
        pure: Just1.create,
        Apply0: function() {
            return applyMaybe;
        }
    };
    exports["Nothing"] = Nothing1;
    exports["Just"] = Just1;
    exports["maybe"] = maybe;
    exports["fromMaybe"] = fromMaybe;
    exports["isJust"] = isJust;
    exports["isNothing"] = isNothing;
    exports["fromJust"] = fromJust;
    exports["functorMaybe"] = functorMaybe;
    exports["applicativeMaybe"] = applicativeMaybe;
    exports["bindMaybe"] = bindMaybe;
    exports["eqMaybe"] = eqMaybe;
    exports["ordMaybe"] = ordMaybe;
    exports["showMaybe"] = showMaybe;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.Either"] = $PS["Data.Either"] || {
    };
    var exports = $PS["Data.Either"];
    var Data_Function = $PS["Data.Function"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Left1 = function() {
        function Left(value0) {
            this.value0 = value0;
        }
        Left.create = function(value0) {
            return new Left(value0);
        };
        return Left;
    }();
    var Right1 = function() {
        function Right(value0) {
            this.value0 = value0;
        }
        Right.create = function(value0) {
            return new Right(value0);
        };
        return Right;
    }();
    var functorEither = {
        map: function(f) {
            return function(m) {
                if (m instanceof Left1) return new Left1(m.value0);
                if (m instanceof Right1) return new Right1(f(m.value0));
                throw new Error("Failed pattern match at Data.Either (line 31, column 1 - line 31, column 52): " + [
                    m.constructor.name
                ]);
            };
        }
    };
    var fromRight = function(v) {
        return function(v1) {
            if (v1 instanceof Right1) return v1.value0;
            return v;
        };
    };
    var either = function(v) {
        return function(v1) {
            return function(v2) {
                if (v2 instanceof Left1) return v(v2.value0);
                if (v2 instanceof Right1) return v1(v2.value0);
                throw new Error("Failed pattern match at Data.Either (line 208, column 1 - line 208, column 64): " + [
                    v.constructor.name,
                    v1.constructor.name,
                    v2.constructor.name
                ]);
            };
        };
    };
    var hush = either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);
    var applyEither = {
        apply: function(v) {
            return function(v1) {
                if (v instanceof Left1) return new Left1(v.value0);
                if (v instanceof Right1) return Data_Functor.map(functorEither)(v.value0)(v1);
                throw new Error("Failed pattern match at Data.Either (line 70, column 1 - line 72, column 30): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            };
        },
        Functor0: function() {
            return functorEither;
        }
    };
    var bindEither = {
        bind: either(function(e) {
            return function(v) {
                return new Left1(e);
            };
        })(function(a) {
            return function(f) {
                return f(a);
            };
        }),
        Apply0: function() {
            return applyEither;
        }
    };
    var applicativeEither = {
        pure: Right1.create,
        Apply0: function() {
            return applyEither;
        }
    };
    var monadEither = {
        Applicative0: function() {
            return applicativeEither;
        },
        Bind1: function() {
            return bindEither;
        }
    };
    exports["Left"] = Left1;
    exports["Right"] = Right1;
    exports["either"] = either;
    exports["fromRight"] = fromRight;
    exports["hush"] = hush;
    exports["functorEither"] = functorEither;
    exports["applicativeEither"] = applicativeEither;
    exports["bindEither"] = bindEither;
    exports["monadEither"] = monadEither;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports.concatString = function(s1) {
        return function(s2) {
            return s1 + s2;
        };
    };
    exports.concatArray = function(xs) {
        return function(ys) {
            if (xs.length === 0) return ys;
            if (ys.length === 0) return xs;
            return xs.concat(ys);
        };
    };
})($a63366291e3889d2$var$PS["Data.Semigroup"] = $a63366291e3889d2$var$PS["Data.Semigroup"] || {
});
(function($PS) {
    $PS["Data.Semigroup"] = $PS["Data.Semigroup"] || {
    };
    var exports = $PS["Data.Semigroup"];
    var $foreign = $PS["Data.Semigroup"];
    var Data_Symbol = $PS["Data.Symbol"];
    var Record_Unsafe = $PS["Record.Unsafe"];
    var Type_Proxy = $PS["Type.Proxy"];
    var semigroupString = {
        append: $foreign.concatString
    };
    var semigroupRecordNil = {
        appendRecord: function(v) {
            return function(v1) {
                return function(v2) {
                    return {
                    };
                };
            };
        }
    };
    var semigroupArray = {
        append: $foreign.concatArray
    };
    var appendRecord = function(dict) {
        return dict.appendRecord;
    };
    var semigroupRecord = function(dictRowToList) {
        return function(dictSemigroupRecord) {
            return {
                append: appendRecord(dictSemigroupRecord)(Type_Proxy["Proxy"].value)
            };
        };
    };
    var append = function(dict) {
        return dict.append;
    };
    var semigroupRecordCons = function(dictIsSymbol) {
        return function(dictCons) {
            return function(dictSemigroupRecord) {
                return function(dictSemigroup) {
                    return {
                        appendRecord: function(v) {
                            return function(ra) {
                                return function(rb) {
                                    var tail = appendRecord(dictSemigroupRecord)(Type_Proxy["Proxy"].value)(ra)(rb);
                                    var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                                    var insert = Record_Unsafe.unsafeSet(key);
                                    var get = Record_Unsafe.unsafeGet(key);
                                    return insert(append(dictSemigroup)(get(ra))(get(rb)))(tail);
                                };
                            };
                        }
                    };
                };
            };
        };
    };
    exports["append"] = append;
    exports["semigroupString"] = semigroupString;
    exports["semigroupArray"] = semigroupArray;
    exports["semigroupRecord"] = semigroupRecord;
    exports["semigroupRecordNil"] = semigroupRecordNil;
    exports["semigroupRecordCons"] = semigroupRecordCons;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Control.Monad.Except.Trans"] = $PS["Control.Monad.Except.Trans"] || {
    };
    var exports = $PS["Control.Monad.Except.Trans"];
    var Control_Applicative = $PS["Control.Applicative"];
    var Control_Bind = $PS["Control.Bind"];
    var Control_Monad = $PS["Control.Monad"];
    var Data_Either = $PS["Data.Either"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_Semigroup = $PS["Data.Semigroup"];
    var ExceptT = function(x) {
        return x;
    };
    var withExceptT = function(dictFunctor) {
        return function(f) {
            return function(v) {
                var mapLeft = function(v1) {
                    return function(v2) {
                        if (v2 instanceof Data_Either.Right) return new Data_Either.Right(v2.value0);
                        if (v2 instanceof Data_Either.Left) return new Data_Either.Left(v1(v2.value0));
                        throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 43, column 3 - line 43, column 32): " + [
                            v1.constructor.name,
                            v2.constructor.name
                        ]);
                    };
                };
                return ExceptT(Data_Functor.map(dictFunctor)(mapLeft(f))(v));
            };
        };
    };
    var runExceptT = function(v) {
        return v;
    };
    var mapExceptT = function(f) {
        return function(v) {
            return f(v);
        };
    };
    var functorExceptT = function(dictFunctor) {
        return {
            map: function(f) {
                return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
            }
        };
    };
    var monadExceptT = function(dictMonad) {
        return {
            Applicative0: function() {
                return applicativeExceptT(dictMonad);
            },
            Bind1: function() {
                return bindExceptT(dictMonad);
            }
        };
    };
    var bindExceptT = function(dictMonad) {
        return {
            bind: function(v) {
                return function(k) {
                    return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function() {
                        var $91 = Control_Applicative.pure(dictMonad.Applicative0());
                        return function($92) {
                            return $91(Data_Either.Left.create($92));
                        };
                    }())(function(a) {
                        var v1 = k(a);
                        return v1;
                    }));
                };
            },
            Apply0: function() {
                return applyExceptT(dictMonad);
            }
        };
    };
    var applyExceptT = function(dictMonad) {
        return {
            apply: Control_Monad.ap(monadExceptT(dictMonad)),
            Functor0: function() {
                return functorExceptT(dictMonad.Bind1().Apply0().Functor0());
            }
        };
    };
    var applicativeExceptT = function(dictMonad) {
        return {
            pure: (function() {
                var $93 = Control_Applicative.pure(dictMonad.Applicative0());
                return function($94) {
                    return ExceptT($93(Data_Either.Right.create($94)));
                };
            })(),
            Apply0: function() {
                return applyExceptT(dictMonad);
            }
        };
    };
    var monadThrowExceptT = function(dictMonad) {
        return {
            throwError: (function() {
                var $103 = Control_Applicative.pure(dictMonad.Applicative0());
                return function($104) {
                    return ExceptT($103(Data_Either.Left.create($104)));
                };
            })(),
            Monad0: function() {
                return monadExceptT(dictMonad);
            }
        };
    };
    var altExceptT = function(dictSemigroup) {
        return function(dictMonad) {
            return {
                alt: function(v) {
                    return function(v1) {
                        return Control_Bind.bind(dictMonad.Bind1())(v)(function(rm) {
                            if (rm instanceof Data_Either.Right) return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(rm.value0));
                            if (rm instanceof Data_Either.Left) return Control_Bind.bind(dictMonad.Bind1())(v1)(function(rn) {
                                if (rn instanceof Data_Either.Right) return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(rn.value0));
                                if (rn instanceof Data_Either.Left) return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(Data_Semigroup.append(dictSemigroup)(rm.value0)(rn.value0)));
                                throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 87, column 9 - line 89, column 49): " + [
                                    rn.constructor.name
                                ]);
                            });
                            throw new Error("Failed pattern match at Control.Monad.Except.Trans (line 83, column 5 - line 89, column 49): " + [
                                rm.constructor.name
                            ]);
                        });
                    };
                },
                Functor0: function() {
                    return functorExceptT(dictMonad.Bind1().Apply0().Functor0());
                }
            };
        };
    };
    exports["ExceptT"] = ExceptT;
    exports["runExceptT"] = runExceptT;
    exports["withExceptT"] = withExceptT;
    exports["mapExceptT"] = mapExceptT;
    exports["functorExceptT"] = functorExceptT;
    exports["applicativeExceptT"] = applicativeExceptT;
    exports["bindExceptT"] = bindExceptT;
    exports["altExceptT"] = altExceptT;
    exports["monadThrowExceptT"] = monadThrowExceptT;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.Identity"] = $PS["Data.Identity"] || {
    };
    var exports = $PS["Data.Identity"];
    var Identity = function(x) {
        return x;
    };
    var functorIdentity = {
        map: function(f) {
            return function(m) {
                return f(m);
            };
        }
    };
    var applyIdentity = {
        apply: function(v) {
            return function(v1) {
                return v(v1);
            };
        },
        Functor0: function() {
            return functorIdentity;
        }
    };
    var bindIdentity = {
        bind: function(v) {
            return function(f) {
                return f(v);
            };
        },
        Apply0: function() {
            return applyIdentity;
        }
    };
    var applicativeIdentity = {
        pure: Identity,
        Apply0: function() {
            return applyIdentity;
        }
    };
    var monadIdentity = {
        Applicative0: function() {
            return applicativeIdentity;
        },
        Bind1: function() {
            return bindIdentity;
        }
    };
    exports["Identity"] = Identity;
    exports["functorIdentity"] = functorIdentity;
    exports["applicativeIdentity"] = applicativeIdentity;
    exports["monadIdentity"] = monadIdentity;
})($a63366291e3889d2$var$PS);
(function(exports) {
    // module Unsafe.Coerce
    exports.unsafeCoerce = function(x) {
        return x;
    };
})($a63366291e3889d2$var$PS["Unsafe.Coerce"] = $a63366291e3889d2$var$PS["Unsafe.Coerce"] || {
});
(function($PS) {
    $PS["Unsafe.Coerce"] = $PS["Unsafe.Coerce"] || {
    };
    var exports = $PS["Unsafe.Coerce"];
    var $foreign = $PS["Unsafe.Coerce"];
    exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Safe.Coerce"] = $PS["Safe.Coerce"] || {
    };
    var exports = $PS["Safe.Coerce"];
    var Unsafe_Coerce = $PS["Unsafe.Coerce"];
    var coerce = function(dictCoercible) {
        return Unsafe_Coerce.unsafeCoerce;
    };
    exports["coerce"] = coerce;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.Newtype"] = $PS["Data.Newtype"] || {
    };
    var exports = $PS["Data.Newtype"];
    var Safe_Coerce = $PS["Safe.Coerce"];
    var unwrap = function(dictNewtype) {
        return Safe_Coerce.coerce();
    };
    var alaF = function(dictCoercible) {
        return function(dictCoercible1) {
            return function(dictNewtype) {
                return function(dictNewtype1) {
                    return function(v) {
                        return Safe_Coerce.coerce();
                    };
                };
            };
        };
    };
    exports["unwrap"] = unwrap;
    exports["alaF"] = alaF;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Control.Monad.Except"] = $PS["Control.Monad.Except"] || {
    };
    var exports = $PS["Control.Monad.Except"];
    var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
    var Data_Identity = $PS["Data.Identity"];
    var Data_Newtype = $PS["Data.Newtype"];
    var withExcept = Control_Monad_Except_Trans.withExceptT(Data_Identity.functorIdentity);
    var runExcept = function() {
        var $0 = Data_Newtype.unwrap();
        return function($1) {
            return $0(Control_Monad_Except_Trans.runExceptT($1));
        };
    }();
    exports["runExcept"] = runExcept;
    exports["withExcept"] = withExcept;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Control.Monad.State"] = $PS["Control.Monad.State"] || {
    };
    var exports = $PS["Control.Monad.State"];
    var execState = function(v) {
        return function(s) {
            var v1 = v(s);
            return v1.value1;
        };
    };
    var evalState = function(v) {
        return function(s) {
            var v1 = v(s);
            return v1.value0;
        };
    };
    exports["evalState"] = evalState;
    exports["execState"] = execState;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.Tuple"] = $PS["Data.Tuple"] || {
    };
    var exports = $PS["Data.Tuple"];
    var Tuple1 = function() {
        function Tuple(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        }
        Tuple.create = function(value0) {
            return function(value1) {
                return new Tuple(value0, value1);
            };
        };
        return Tuple;
    }();
    var snd = function(v) {
        return v.value1;
    };
    var functorTuple = {
        map: function(f) {
            return function(m) {
                return new Tuple1(m.value0, f(m.value1));
            };
        }
    };
    var fst = function(v) {
        return v.value0;
    };
    exports["Tuple"] = Tuple1;
    exports["fst"] = fst;
    exports["snd"] = snd;
    exports["functorTuple"] = functorTuple;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Control.Monad.State.Class"] = $PS["Control.Monad.State.Class"] || {
    };
    var exports = $PS["Control.Monad.State.Class"];
    var Data_Tuple = $PS["Data.Tuple"];
    var Data_Unit = $PS["Data.Unit"];
    var state = function(dict) {
        return dict.state;
    };
    var put = function(dictMonadState) {
        return function(s) {
            return state(dictMonadState)(function(v) {
                return new Data_Tuple.Tuple(Data_Unit.unit, s);
            });
        };
    };
    var modify_ = function(dictMonadState) {
        return function(f) {
            return state(dictMonadState)(function(s) {
                return new Data_Tuple.Tuple(Data_Unit.unit, f(s));
            });
        };
    };
    var modify = function(dictMonadState) {
        return function(f) {
            return state(dictMonadState)(function(s) {
                var s$prime = f(s);
                return new Data_Tuple.Tuple(s$prime, s$prime);
            });
        };
    };
    var gets = function(dictMonadState) {
        return function(f) {
            return state(dictMonadState)(function(s) {
                return new Data_Tuple.Tuple(f(s), s);
            });
        };
    };
    var get = function(dictMonadState) {
        return state(dictMonadState)(function(s) {
            return new Data_Tuple.Tuple(s, s);
        });
    };
    exports["get"] = get;
    exports["gets"] = gets;
    exports["put"] = put;
    exports["modify"] = modify;
    exports["modify_"] = modify_;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Control.Monad.State.Trans"] = $PS["Control.Monad.State.Trans"] || {
    };
    var exports = $PS["Control.Monad.State.Trans"];
    var Control_Applicative = $PS["Control.Applicative"];
    var Control_Bind = $PS["Control.Bind"];
    var Control_Monad = $PS["Control.Monad"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_Tuple = $PS["Data.Tuple"];
    var StateT = function(x) {
        return x;
    };
    var runStateT = function(v) {
        return v;
    };
    var monadTransStateT = {
        lift: function(dictMonad) {
            return function(m) {
                return function(s) {
                    return Control_Bind.bind(dictMonad.Bind1())(m)(function(x) {
                        return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(x, s));
                    });
                };
            };
        }
    };
    var functorStateT = function(dictFunctor) {
        return {
            map: function(f) {
                return function(v) {
                    return function(s) {
                        return Data_Functor.map(dictFunctor)(function(v1) {
                            return new Data_Tuple.Tuple(f(v1.value0), v1.value1);
                        })(v(s));
                    };
                };
            }
        };
    };
    var evalStateT = function(dictFunctor) {
        return function(v) {
            return function(s) {
                return Data_Functor.map(dictFunctor)(Data_Tuple.fst)(v(s));
            };
        };
    };
    var monadStateT = function(dictMonad) {
        return {
            Applicative0: function() {
                return applicativeStateT(dictMonad);
            },
            Bind1: function() {
                return bindStateT(dictMonad);
            }
        };
    };
    var bindStateT = function(dictMonad) {
        return {
            bind: function(v) {
                return function(f) {
                    return function(s) {
                        return Control_Bind.bind(dictMonad.Bind1())(v(s))(function(v1) {
                            var v3 = f(v1.value0);
                            return v3(v1.value1);
                        });
                    };
                };
            },
            Apply0: function() {
                return applyStateT(dictMonad);
            }
        };
    };
    var applyStateT = function(dictMonad) {
        return {
            apply: Control_Monad.ap(monadStateT(dictMonad)),
            Functor0: function() {
                return functorStateT(dictMonad.Bind1().Apply0().Functor0());
            }
        };
    };
    var applicativeStateT = function(dictMonad) {
        return {
            pure: function(a) {
                return function(s) {
                    return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Tuple.Tuple(a, s));
                };
            },
            Apply0: function() {
                return applyStateT(dictMonad);
            }
        };
    };
    var monadStateStateT = function(dictMonad) {
        return {
            state: function(f) {
                return StateT(function() {
                    var $113 = Control_Applicative.pure(dictMonad.Applicative0());
                    return function($114) {
                        return $113(f($114));
                    };
                }());
            },
            Monad0: function() {
                return monadStateT(dictMonad);
            }
        };
    };
    exports["runStateT"] = runStateT;
    exports["evalStateT"] = evalStateT;
    exports["functorStateT"] = functorStateT;
    exports["applicativeStateT"] = applicativeStateT;
    exports["bindStateT"] = bindStateT;
    exports["monadTransStateT"] = monadTransStateT;
    exports["monadStateStateT"] = monadStateStateT;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports.foldrArray = function(f) {
        return function(init) {
            return function(xs) {
                var acc = init;
                var len = xs.length;
                for(var i = len - 1; i >= 0; i--)acc = f(xs[i])(acc);
                return acc;
            };
        };
    };
    exports.foldlArray = function(f) {
        return function(init) {
            return function(xs) {
                var acc = init;
                var len = xs.length;
                for(var i = 0; i < len; i++)acc = f(acc)(xs[i]);
                return acc;
            };
        };
    };
})($a63366291e3889d2$var$PS["Data.Foldable"] = $a63366291e3889d2$var$PS["Data.Foldable"] || {
});
(function(exports) {
    exports.boolConj = function(b1) {
        return function(b2) {
            return b1 && b2;
        };
    };
    exports.boolDisj = function(b1) {
        return function(b2) {
            return b1 || b2;
        };
    };
    exports.boolNot = function(b) {
        return !b;
    };
})($a63366291e3889d2$var$PS["Data.HeytingAlgebra"] = $a63366291e3889d2$var$PS["Data.HeytingAlgebra"] || {
});
(function($PS) {
    $PS["Data.HeytingAlgebra"] = $PS["Data.HeytingAlgebra"] || {
    };
    var exports = $PS["Data.HeytingAlgebra"];
    var $foreign = $PS["Data.HeytingAlgebra"];
    var tt = function(dict) {
        return dict.tt;
    };
    var not = function(dict) {
        return dict.not;
    };
    var implies = function(dict) {
        return dict.implies;
    };
    var ff = function(dict) {
        return dict.ff;
    };
    var disj = function(dict) {
        return dict.disj;
    };
    var heytingAlgebraBoolean = {
        ff: false,
        tt: true,
        implies: function(a) {
            return function(b) {
                return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
            };
        },
        conj: $foreign.boolConj,
        disj: $foreign.boolDisj,
        not: $foreign.boolNot
    };
    var conj = function(dict) {
        return dict.conj;
    };
    var heytingAlgebraFunction = function(dictHeytingAlgebra) {
        return {
            ff: function(v) {
                return ff(dictHeytingAlgebra);
            },
            tt: function(v) {
                return tt(dictHeytingAlgebra);
            },
            implies: function(f) {
                return function(g) {
                    return function(a) {
                        return implies(dictHeytingAlgebra)(f(a))(g(a));
                    };
                };
            },
            conj: function(f) {
                return function(g) {
                    return function(a) {
                        return conj(dictHeytingAlgebra)(f(a))(g(a));
                    };
                };
            },
            disj: function(f) {
                return function(g) {
                    return function(a) {
                        return disj(dictHeytingAlgebra)(f(a))(g(a));
                    };
                };
            },
            not: function(f) {
                return function(a) {
                    return not(dictHeytingAlgebra)(f(a));
                };
            }
        };
    };
    exports["ff"] = ff;
    exports["disj"] = disj;
    exports["not"] = not;
    exports["heytingAlgebraBoolean"] = heytingAlgebraBoolean;
    exports["heytingAlgebraFunction"] = heytingAlgebraFunction;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.Boolean"] = $PS["Data.Boolean"] || {
    };
    var exports = $PS["Data.Boolean"];
    var otherwise = true;
    exports["otherwise"] = otherwise;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports.intDegree = function(x) {
        return Math.min(Math.abs(x), 2147483647);
    };
    // See the Euclidean definition in
    // https://en.m.wikipedia.org/wiki/Modulo_operation.
    exports.intDiv = function(x) {
        return function(y) {
            if (y === 0) return 0;
            return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);
        };
    };
    exports.intMod = function(x) {
        return function(y) {
            if (y === 0) return 0;
            var yy = Math.abs(y);
            return (x % yy + yy) % yy;
        };
    };
})($a63366291e3889d2$var$PS["Data.EuclideanRing"] = $a63366291e3889d2$var$PS["Data.EuclideanRing"] || {
});
(function($PS) {
    $PS["Data.CommutativeRing"] = $PS["Data.CommutativeRing"] || {
    };
    var exports = $PS["Data.CommutativeRing"];
    var Data_Ring = $PS["Data.Ring"];
    var commutativeRingInt = {
        Ring0: function() {
            return Data_Ring.ringInt;
        }
    };
    exports["commutativeRingInt"] = commutativeRingInt;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.EuclideanRing"] = $PS["Data.EuclideanRing"] || {
    };
    var exports = $PS["Data.EuclideanRing"];
    var $foreign = $PS["Data.EuclideanRing"];
    var Data_CommutativeRing = $PS["Data.CommutativeRing"];
    var Data_Eq = $PS["Data.Eq"];
    var Data_Semiring = $PS["Data.Semiring"];
    var mod = function(dict) {
        return dict.mod;
    };
    var gcd = function($copy_dictEq) {
        return function($copy_dictEuclideanRing) {
            return function($copy_a) {
                return function($copy_b) {
                    var $tco_var_dictEq = $copy_dictEq;
                    var $tco_var_dictEuclideanRing = $copy_dictEuclideanRing;
                    var $tco_var_a = $copy_a;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(dictEq, dictEuclideanRing, a, b) {
                        var $8 = Data_Eq.eq(dictEq)(b)(Data_Semiring.zero(dictEuclideanRing.CommutativeRing0().Ring0().Semiring0()));
                        if ($8) {
                            $tco_done = true;
                            return a;
                        }
                        $tco_var_dictEq = dictEq;
                        $tco_var_dictEuclideanRing = dictEuclideanRing;
                        $tco_var_a = b;
                        $copy_b = mod(dictEuclideanRing)(a)(b);
                        return;
                    }
                    while(!$tco_done)$tco_result = $tco_loop($tco_var_dictEq, $tco_var_dictEuclideanRing, $tco_var_a, $copy_b);
                    return $tco_result;
                };
            };
        };
    };
    var euclideanRingInt = {
        degree: $foreign.intDegree,
        div: $foreign.intDiv,
        mod: $foreign.intMod,
        CommutativeRing0: function() {
            return Data_CommutativeRing.commutativeRingInt;
        }
    };
    var div = function(dict) {
        return dict.div;
    };
    exports["div"] = div;
    exports["mod"] = mod;
    exports["gcd"] = gcd;
    exports["euclideanRingInt"] = euclideanRingInt;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.Monoid"] = $PS["Data.Monoid"] || {
    };
    var exports = $PS["Data.Monoid"];
    var Data_Boolean = $PS["Data.Boolean"];
    var Data_EuclideanRing = $PS["Data.EuclideanRing"];
    var Data_Semigroup = $PS["Data.Semigroup"];
    var Data_Symbol = $PS["Data.Symbol"];
    var Record_Unsafe = $PS["Record.Unsafe"];
    var Type_Proxy = $PS["Type.Proxy"];
    var monoidString = {
        mempty: "",
        Semigroup0: function() {
            return Data_Semigroup.semigroupString;
        }
    };
    var monoidRecordNil = {
        memptyRecord: function(v) {
            return {
            };
        },
        SemigroupRecord0: function() {
            return Data_Semigroup.semigroupRecordNil;
        }
    };
    var monoidArray = {
        mempty: [],
        Semigroup0: function() {
            return Data_Semigroup.semigroupArray;
        }
    };
    var memptyRecord = function(dict) {
        return dict.memptyRecord;
    };
    var monoidRecord = function(dictRowToList) {
        return function(dictMonoidRecord) {
            return {
                mempty: memptyRecord(dictMonoidRecord)(Type_Proxy["Proxy"].value),
                Semigroup0: function() {
                    return Data_Semigroup.semigroupRecord()(dictMonoidRecord.SemigroupRecord0());
                }
            };
        };
    };
    var mempty = function(dict) {
        return dict.mempty;
    };
    var monoidRecordCons = function(dictIsSymbol) {
        return function(dictMonoid) {
            return function(dictCons) {
                return function(dictMonoidRecord) {
                    return {
                        memptyRecord: function(v) {
                            var tail = memptyRecord(dictMonoidRecord)(Type_Proxy["Proxy"].value);
                            var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                            var insert = Record_Unsafe.unsafeSet(key);
                            return insert(mempty(dictMonoid))(tail);
                        },
                        SemigroupRecord0: function() {
                            return Data_Semigroup.semigroupRecordCons(dictIsSymbol)()(dictMonoidRecord.SemigroupRecord0())(dictMonoid.Semigroup0());
                        }
                    };
                };
            };
        };
    };
    var power = function(dictMonoid) {
        return function(x) {
            var go = function(p) {
                if (p <= 0) return mempty(dictMonoid);
                if (p === 1) return x;
                if (Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(p)(2) === 0) {
                    var x$prime = go(Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(p)(2));
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(x$prime);
                }
                if (Data_Boolean.otherwise) {
                    var x$prime = go(Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(p)(2));
                    return Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(x));
                }
                throw new Error("Failed pattern match at Data.Monoid (line 86, column 3 - line 86, column 17): " + [
                    p.constructor.name
                ]);
            };
            return go;
        };
    };
    exports["mempty"] = mempty;
    exports["power"] = power;
    exports["monoidString"] = monoidString;
    exports["monoidArray"] = monoidArray;
    exports["monoidRecord"] = monoidRecord;
    exports["monoidRecordNil"] = monoidRecordNil;
    exports["monoidRecordCons"] = monoidRecordCons;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.Monoid.Disj"] = $PS["Data.Monoid.Disj"] || {
    };
    var exports = $PS["Data.Monoid.Disj"];
    var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
    var Disj = function(x) {
        return x;
    };
    var semigroupDisj = function(dictHeytingAlgebra) {
        return {
            append: function(v) {
                return function(v1) {
                    return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
                };
            }
        };
    };
    var monoidDisj = function(dictHeytingAlgebra) {
        return {
            mempty: Data_HeytingAlgebra.ff(dictHeytingAlgebra),
            Semigroup0: function() {
                return semigroupDisj(dictHeytingAlgebra);
            }
        };
    };
    exports["Disj"] = Disj;
    exports["monoidDisj"] = monoidDisj;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.Foldable"] = $PS["Data.Foldable"] || {
    };
    var exports = $PS["Data.Foldable"];
    var $foreign = $PS["Data.Foldable"];
    var Control_Applicative = $PS["Control.Applicative"];
    var Control_Apply = $PS["Control.Apply"];
    var Control_Category = $PS["Control.Category"];
    var Data_Eq = $PS["Data.Eq"];
    var Data_Function = $PS["Data.Function"];
    var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Data_Monoid = $PS["Data.Monoid"];
    var Data_Monoid_Disj = $PS["Data.Monoid.Disj"];
    var Data_Newtype = $PS["Data.Newtype"];
    var Data_Ord = $PS["Data.Ord"];
    var Data_Ordering = $PS["Data.Ordering"];
    var Data_Semigroup = $PS["Data.Semigroup"];
    var Data_Unit = $PS["Data.Unit"];
    var foldr = function(dict) {
        return dict.foldr;
    };
    var traverse_ = function(dictApplicative) {
        return function(dictFoldable) {
            return function(f) {
                return foldr(dictFoldable)(function() {
                    var $314 = Control_Apply.applySecond(dictApplicative.Apply0());
                    return function($315) {
                        return $314(f($315));
                    };
                }())(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
            };
        };
    };
    var for_ = function(dictApplicative) {
        return function(dictFoldable) {
            return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
        };
    };
    var foldl = function(dict) {
        return dict.foldl;
    };
    var maximumBy = function(dictFoldable) {
        return function(cmp) {
            var max$prime = function(v) {
                return function(v1) {
                    if (v instanceof Data_Maybe.Nothing) return new Data_Maybe.Just(v1);
                    if (v instanceof Data_Maybe.Just) return new Data_Maybe.Just(function() {
                        var $162 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.GT.value);
                        if ($162) return v.value0;
                        return v1;
                    }());
                    throw new Error("Failed pattern match at Data.Foldable (line 441, column 3 - line 441, column 27): " + [
                        v.constructor.name,
                        v1.constructor.name
                    ]);
                };
            };
            return foldl(dictFoldable)(max$prime)(Data_Maybe.Nothing.value);
        };
    };
    var maximum = function(dictOrd) {
        return function(dictFoldable) {
            return maximumBy(dictFoldable)(Data_Ord.compare(dictOrd));
        };
    };
    var minimumBy = function(dictFoldable) {
        return function(cmp) {
            var min$prime = function(v) {
                return function(v1) {
                    if (v instanceof Data_Maybe.Nothing) return new Data_Maybe.Just(v1);
                    if (v instanceof Data_Maybe.Just) return new Data_Maybe.Just(function() {
                        var $166 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.LT.value);
                        if ($166) return v.value0;
                        return v1;
                    }());
                    throw new Error("Failed pattern match at Data.Foldable (line 454, column 3 - line 454, column 27): " + [
                        v.constructor.name,
                        v1.constructor.name
                    ]);
                };
            };
            return foldl(dictFoldable)(min$prime)(Data_Maybe.Nothing.value);
        };
    };
    var minimum = function(dictOrd) {
        return function(dictFoldable) {
            return minimumBy(dictFoldable)(Data_Ord.compare(dictOrd));
        };
    };
    var foldableMaybe = {
        foldr: function(v) {
            return function(z) {
                return function(v1) {
                    if (v1 instanceof Data_Maybe.Nothing) return z;
                    if (v1 instanceof Data_Maybe.Just) return v(v1.value0)(z);
                    throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [
                        v.constructor.name,
                        z.constructor.name,
                        v1.constructor.name
                    ]);
                };
            };
        },
        foldl: function(v) {
            return function(z) {
                return function(v1) {
                    if (v1 instanceof Data_Maybe.Nothing) return z;
                    if (v1 instanceof Data_Maybe.Just) return v(z)(v1.value0);
                    throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [
                        v.constructor.name,
                        z.constructor.name,
                        v1.constructor.name
                    ]);
                };
            };
        },
        foldMap: function(dictMonoid) {
            return function(f) {
                return function(v) {
                    if (v instanceof Data_Maybe.Nothing) return Data_Monoid.mempty(dictMonoid);
                    if (v instanceof Data_Maybe.Just) return f(v.value0);
                    throw new Error("Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): " + [
                        f.constructor.name,
                        v.constructor.name
                    ]);
                };
            };
        }
    };
    var foldMapDefaultR = function(dictFoldable) {
        return function(dictMonoid) {
            return function(f) {
                return foldr(dictFoldable)(function(x) {
                    return function(acc) {
                        return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                    };
                })(Data_Monoid.mempty(dictMonoid));
            };
        };
    };
    var foldableArray = {
        foldr: $foreign.foldrArray,
        foldl: $foreign.foldlArray,
        foldMap: function(dictMonoid) {
            return foldMapDefaultR(foldableArray)(dictMonoid);
        }
    };
    var foldMap = function(dict) {
        return dict.foldMap;
    };
    var fold = function(dictFoldable) {
        return function(dictMonoid) {
            return foldMap(dictFoldable)(dictMonoid)(Control_Category.identity(Control_Category.categoryFn));
        };
    };
    var any = function(dictFoldable) {
        return function(dictHeytingAlgebra) {
            return Data_Newtype.alaF()()()()(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));
        };
    };
    var elem = function(dictFoldable) {
        return function(dictEq) {
            var $324 = any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean);
            var $325 = Data_Eq.eq(dictEq);
            return function($326) {
                return $324($325($326));
            };
        };
    };
    exports["foldr"] = foldr;
    exports["foldl"] = foldl;
    exports["foldMap"] = foldMap;
    exports["fold"] = fold;
    exports["traverse_"] = traverse_;
    exports["for_"] = for_;
    exports["elem"] = elem;
    exports["maximum"] = maximum;
    exports["minimum"] = minimum;
    exports["foldableArray"] = foldableArray;
    exports["foldableMaybe"] = foldableMaybe;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Control.Plus"] = $PS["Control.Plus"] || {
    };
    var exports = $PS["Control.Plus"];
    var empty = function(dict) {
        return dict.empty;
    };
    exports["empty"] = empty;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.NonEmpty"] = $PS["Data.NonEmpty"] || {
    };
    var exports = $PS["Data.NonEmpty"];
    var Control_Plus = $PS["Control.Plus"];
    var Data_Foldable = $PS["Data.Foldable"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_Semigroup = $PS["Data.Semigroup"];
    var NonEmpty1 = function() {
        function NonEmpty(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        }
        NonEmpty.create = function(value0) {
            return function(value1) {
                return new NonEmpty(value0, value1);
            };
        };
        return NonEmpty;
    }();
    var singleton = function(dictPlus) {
        return function(a) {
            return new NonEmpty1(a, Control_Plus.empty(dictPlus));
        };
    };
    var functorNonEmpty = function(dictFunctor) {
        return {
            map: function(f) {
                return function(m) {
                    return new NonEmpty1(f(m.value0), Data_Functor.map(dictFunctor)(f)(m.value1));
                };
            }
        };
    };
    var foldableNonEmpty = function(dictFoldable) {
        return {
            foldMap: function(dictMonoid) {
                return function(f) {
                    return function(v) {
                        return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(Data_Foldable.foldMap(dictFoldable)(dictMonoid)(f)(v.value1));
                    };
                };
            },
            foldl: function(f) {
                return function(b) {
                    return function(v) {
                        return Data_Foldable.foldl(dictFoldable)(f)(f(b)(v.value0))(v.value1);
                    };
                };
            },
            foldr: function(f) {
                return function(b) {
                    return function(v) {
                        return f(v.value0)(Data_Foldable.foldr(dictFoldable)(f)(b)(v.value1));
                    };
                };
            }
        };
    };
    exports["NonEmpty"] = NonEmpty1;
    exports["singleton"] = singleton;
    exports["functorNonEmpty"] = functorNonEmpty;
    exports["foldableNonEmpty"] = foldableNonEmpty;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.List.Types"] = $PS["Data.List.Types"] || {
    };
    var exports = $PS["Data.List.Types"];
    var Control_Apply = $PS["Control.Apply"];
    var Data_Foldable = $PS["Data.Foldable"];
    var Data_Function = $PS["Data.Function"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Data_Monoid = $PS["Data.Monoid"];
    var Data_NonEmpty = $PS["Data.NonEmpty"];
    var Data_Semigroup = $PS["Data.Semigroup"];
    var Nil1 = function() {
        function Nil() {
        }
        Nil.value = new Nil();
        return Nil;
    }();
    var Cons1 = function() {
        function Cons(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        }
        Cons.create = function(value0) {
            return function(value1) {
                return new Cons(value0, value1);
            };
        };
        return Cons;
    }();
    var NonEmptyList = function(x) {
        return x;
    };
    var toList = function(v) {
        return new Cons1(v.value0, v.value1);
    };
    var listMap = function(f) {
        var chunkedRevMap = function($copy_chunksAcc) {
            return function($copy_v) {
                var $tco_var_chunksAcc = $copy_chunksAcc;
                var $tco_done = false;
                var $tco_result1;
                function $tco_loop1(chunksAcc, v) {
                    if (v instanceof Cons1 && v.value1 instanceof Cons1 && v.value1.value1 instanceof Cons1) {
                        $tco_var_chunksAcc = new Cons1(v, chunksAcc);
                        $copy_v = v.value1.value1.value1;
                        return;
                    }
                    var unrolledMap = function(v1) {
                        if (v1 instanceof Cons1 && v1.value1 instanceof Cons1 && v1.value1.value1 instanceof Nil1) return new Cons1(f(v1.value0), new Cons1(f(v1.value1.value0), Nil1.value));
                        if (v1 instanceof Cons1 && v1.value1 instanceof Nil1) return new Cons1(f(v1.value0), Nil1.value);
                        return Nil1.value;
                    };
                    var reverseUnrolledMap = function($copy_v1) {
                        return function($copy_acc) {
                            var $tco_var_v1 = $copy_v1;
                            var $tco_done1 = false;
                            var $tco_result;
                            function $tco_loop(v1, acc) {
                                if (v1 instanceof Cons1 && v1.value0 instanceof Cons1 && v1.value0.value1 instanceof Cons1 && v1.value0.value1.value1 instanceof Cons1) {
                                    $tco_var_v1 = v1.value1;
                                    $copy_acc = new Cons1(f(v1.value0.value0), new Cons1(f(v1.value0.value1.value0), new Cons1(f(v1.value0.value1.value1.value0), acc)));
                                    return;
                                }
                                $tco_done1 = true;
                                return acc;
                            }
                            while(!$tco_done1)$tco_result = $tco_loop($tco_var_v1, $copy_acc);
                            return $tco_result;
                        };
                    };
                    $tco_done = true;
                    return reverseUnrolledMap(chunksAcc)(unrolledMap(v));
                }
                while(!$tco_done)$tco_result1 = $tco_loop1($tco_var_chunksAcc, $copy_v);
                return $tco_result1;
            };
        };
        return chunkedRevMap(Nil1.value);
    };
    var functorList = {
        map: listMap
    };
    var functorNonEmptyList = Data_NonEmpty.functorNonEmpty(functorList);
    var foldableList = {
        foldr: function(f) {
            return function(b) {
                var rev = function() {
                    var go = function($copy_acc) {
                        return function($copy_v) {
                            var $tco_var_acc = $copy_acc;
                            var $tco_done = false;
                            var $tco_result;
                            function $tco_loop(acc, v) {
                                if (v instanceof Nil1) {
                                    $tco_done = true;
                                    return acc;
                                }
                                if (v instanceof Cons1) {
                                    $tco_var_acc = new Cons1(v.value0, acc);
                                    $copy_v = v.value1;
                                    return;
                                }
                                throw new Error("Failed pattern match at Data.List.Types (line 108, column 7 - line 108, column 23): " + [
                                    acc.constructor.name,
                                    v.constructor.name
                                ]);
                            }
                            while(!$tco_done)$tco_result = $tco_loop($tco_var_acc, $copy_v);
                            return $tco_result;
                        };
                    };
                    return go(Nil1.value);
                }();
                var $204 = Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b);
                return function($205) {
                    return $204(rev($205));
                };
            };
        },
        foldl: function(f) {
            var go = function($copy_b) {
                return function($copy_v) {
                    var $tco_var_b = $copy_b;
                    var $tco_done1 = false;
                    var $tco_result;
                    function $tco_loop(b, v) {
                        if (v instanceof Nil1) {
                            $tco_done1 = true;
                            return b;
                        }
                        if (v instanceof Cons1) {
                            $tco_var_b = f(b)(v.value0);
                            $copy_v = v.value1;
                            return;
                        }
                        throw new Error("Failed pattern match at Data.List.Types (line 112, column 12 - line 114, column 30): " + [
                            v.constructor.name
                        ]);
                    }
                    while(!$tco_done1)$tco_result = $tco_loop($tco_var_b, $copy_v);
                    return $tco_result;
                };
            };
            return go;
        },
        foldMap: function(dictMonoid) {
            return function(f) {
                return Data_Foldable.foldl(foldableList)(function(acc) {
                    var $206 = Data_Semigroup.append(dictMonoid.Semigroup0())(acc);
                    return function($207) {
                        return $206(f($207));
                    };
                })(Data_Monoid.mempty(dictMonoid));
            };
        }
    };
    var foldableNonEmptyList = Data_NonEmpty.foldableNonEmpty(foldableList);
    var semigroupList = {
        append: function(xs) {
            return function(ys) {
                return Data_Foldable.foldr(foldableList)(Cons1.create)(ys)(xs);
            };
        }
    };
    var semigroupNonEmptyList = {
        append: function(v) {
            return function(as$prime) {
                return new Data_NonEmpty.NonEmpty(v.value0, Data_Semigroup.append(semigroupList)(v.value1)(toList(as$prime)));
            };
        }
    };
    var unfoldable1List = {
        unfoldr1: function(f) {
            return function(b) {
                var go = function($copy_source) {
                    return function($copy_memo) {
                        var $tco_var_source = $copy_source;
                        var $tco_done = false;
                        var $tco_result;
                        function $tco_loop(source, memo) {
                            var v = f(source);
                            if (v.value1 instanceof Data_Maybe.Just) {
                                $tco_var_source = v.value1.value0;
                                $copy_memo = new Cons1(v.value0, memo);
                                return;
                            }
                            if (v.value1 instanceof Data_Maybe.Nothing) {
                                $tco_done = true;
                                return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons1.create))(Nil1.value)(new Cons1(v.value0, memo));
                            }
                            throw new Error("Failed pattern match at Data.List.Types (line 136, column 22 - line 138, column 61): " + [
                                v.constructor.name
                            ]);
                        }
                        while(!$tco_done)$tco_result = $tco_loop($tco_var_source, $copy_memo);
                        return $tco_result;
                    };
                };
                return go(b)(Nil1.value);
            };
        }
    };
    var unfoldableList = {
        unfoldr: function(f) {
            return function(b) {
                var go = function($copy_source) {
                    return function($copy_memo) {
                        var $tco_var_source = $copy_source;
                        var $tco_done = false;
                        var $tco_result;
                        function $tco_loop(source, memo) {
                            var v = f(source);
                            if (v instanceof Data_Maybe.Nothing) {
                                $tco_done = true;
                                return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons1.create))(Nil1.value)(memo);
                            }
                            if (v instanceof Data_Maybe.Just) {
                                $tco_var_source = v.value0.value1;
                                $copy_memo = new Cons1(v.value0.value0, memo);
                                return;
                            }
                            throw new Error("Failed pattern match at Data.List.Types (line 143, column 22 - line 145, column 52): " + [
                                v.constructor.name
                            ]);
                        }
                        while(!$tco_done)$tco_result = $tco_loop($tco_var_source, $copy_memo);
                        return $tco_result;
                    };
                };
                return go(b)(Nil1.value);
            };
        },
        Unfoldable10: function() {
            return unfoldable1List;
        }
    };
    var applyList = {
        apply: function(v) {
            return function(v1) {
                if (v instanceof Nil1) return Nil1.value;
                if (v instanceof Cons1) return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
                throw new Error("Failed pattern match at Data.List.Types (line 158, column 1 - line 160, column 48): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            };
        },
        Functor0: function() {
            return functorList;
        }
    };
    var applyNonEmptyList = {
        apply: function(v) {
            return function(v1) {
                return new Data_NonEmpty.NonEmpty(v.value0(v1.value0), Data_Semigroup.append(semigroupList)(Control_Apply.apply(applyList)(v.value1)(new Cons1(v1.value0, Nil1.value)))(Control_Apply.apply(applyList)(new Cons1(v.value0, v.value1))(v1.value1)));
            };
        },
        Functor0: function() {
            return functorNonEmptyList;
        }
    };
    var applicativeList = {
        pure: function(a) {
            return new Cons1(a, Nil1.value);
        },
        Apply0: function() {
            return applyList;
        }
    };
    var altList = {
        alt: Data_Semigroup.append(semigroupList),
        Functor0: function() {
            return functorList;
        }
    };
    var plusList = {
        empty: Nil1.value,
        Alt0: function() {
            return altList;
        }
    };
    var applicativeNonEmptyList = {
        pure: function() {
            var $235 = Data_NonEmpty.singleton(plusList);
            return function($236) {
                return NonEmptyList($235($236));
            };
        }(),
        Apply0: function() {
            return applyNonEmptyList;
        }
    };
    exports["Nil"] = Nil1;
    exports["Cons"] = Cons1;
    exports["NonEmptyList"] = NonEmptyList;
    exports["semigroupList"] = semigroupList;
    exports["functorList"] = functorList;
    exports["foldableList"] = foldableList;
    exports["unfoldableList"] = unfoldableList;
    exports["applicativeList"] = applicativeList;
    exports["plusList"] = plusList;
    exports["functorNonEmptyList"] = functorNonEmptyList;
    exports["applicativeNonEmptyList"] = applicativeNonEmptyList;
    exports["semigroupNonEmptyList"] = semigroupNonEmptyList;
    exports["foldableNonEmptyList"] = foldableNonEmptyList;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports.unfoldrArrayImpl = function(isNothing) {
        return function(fromJust) {
            return function(fst) {
                return function(snd) {
                    return function(f) {
                        return function(b) {
                            var result = [];
                            var value = b;
                            while(true){
                                var maybe = f(value);
                                if (isNothing(maybe)) return result;
                                var tuple = fromJust(maybe);
                                result.push(fst(tuple));
                                value = snd(tuple);
                            }
                        };
                    };
                };
            };
        };
    };
})($a63366291e3889d2$var$PS["Data.Unfoldable"] = $a63366291e3889d2$var$PS["Data.Unfoldable"] || {
});
(function(exports) {
    exports.unfoldr1ArrayImpl = function(isNothing) {
        return function(fromJust) {
            return function(fst) {
                return function(snd) {
                    return function(f) {
                        return function(b) {
                            var result = [];
                            var value = b;
                            while(true){
                                var tuple = f(value);
                                result.push(fst(tuple));
                                var maybe = snd(tuple);
                                if (isNothing(maybe)) return result;
                                value = fromJust(maybe);
                            }
                        };
                    };
                };
            };
        };
    };
})($a63366291e3889d2$var$PS["Data.Unfoldable1"] = $a63366291e3889d2$var$PS["Data.Unfoldable1"] || {
});
(function($PS) {
    $PS["Data.Unfoldable1"] = $PS["Data.Unfoldable1"] || {
    };
    var exports = $PS["Data.Unfoldable1"];
    var $foreign = $PS["Data.Unfoldable1"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Data_Tuple = $PS["Data.Tuple"];
    var unfoldable1Array = {
        unfoldr1: $foreign.unfoldr1ArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd)
    };
    exports["unfoldable1Array"] = unfoldable1Array;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.Unfoldable"] = $PS["Data.Unfoldable"] || {
    };
    var exports = $PS["Data.Unfoldable"];
    var $foreign = $PS["Data.Unfoldable"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Data_Tuple = $PS["Data.Tuple"];
    var Data_Unfoldable1 = $PS["Data.Unfoldable1"];
    var unfoldr = function(dict) {
        return dict.unfoldr;
    };
    var unfoldableArray = {
        unfoldr: $foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd),
        Unfoldable10: function() {
            return Data_Unfoldable1.unfoldable1Array;
        }
    };
    exports["unfoldr"] = unfoldr;
    exports["unfoldableArray"] = unfoldableArray;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.Map.Internal"] = $PS["Data.Map.Internal"] || {
    };
    var exports = $PS["Data.Map.Internal"];
    var Control_Applicative = $PS["Control.Applicative"];
    var Data_Foldable = $PS["Data.Foldable"];
    var Data_Function = $PS["Data.Function"];
    var Data_List_Types = $PS["Data.List.Types"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Data_Ord = $PS["Data.Ord"];
    var Data_Ordering = $PS["Data.Ordering"];
    var Data_Semigroup = $PS["Data.Semigroup"];
    var Data_Tuple = $PS["Data.Tuple"];
    var Data_Unfoldable = $PS["Data.Unfoldable"];
    var Leaf1 = function() {
        function Leaf() {
        }
        Leaf.value = new Leaf();
        return Leaf;
    }();
    var Two1 = function() {
        function Two(value0, value1, value2, value3) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
        }
        Two.create = function(value0) {
            return function(value1) {
                return function(value2) {
                    return function(value3) {
                        return new Two(value0, value1, value2, value3);
                    };
                };
            };
        };
        return Two;
    }();
    var Three1 = function() {
        function Three(value0, value1, value2, value3, value4, value5, value6) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
            this.value4 = value4;
            this.value5 = value5;
            this.value6 = value6;
        }
        Three.create = function(value0) {
            return function(value1) {
                return function(value2) {
                    return function(value3) {
                        return function(value4) {
                            return function(value5) {
                                return function(value6) {
                                    return new Three(value0, value1, value2, value3, value4, value5, value6);
                                };
                            };
                        };
                    };
                };
            };
        };
        return Three;
    }();
    var TwoLeft1 = function() {
        function TwoLeft(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        }
        TwoLeft.create = function(value0) {
            return function(value1) {
                return function(value2) {
                    return new TwoLeft(value0, value1, value2);
                };
            };
        };
        return TwoLeft;
    }();
    var TwoRight1 = function() {
        function TwoRight(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        }
        TwoRight.create = function(value0) {
            return function(value1) {
                return function(value2) {
                    return new TwoRight(value0, value1, value2);
                };
            };
        };
        return TwoRight;
    }();
    var ThreeLeft1 = function() {
        function ThreeLeft(value0, value1, value2, value3, value4, value5) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
            this.value4 = value4;
            this.value5 = value5;
        }
        ThreeLeft.create = function(value0) {
            return function(value1) {
                return function(value2) {
                    return function(value3) {
                        return function(value4) {
                            return function(value5) {
                                return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                            };
                        };
                    };
                };
            };
        };
        return ThreeLeft;
    }();
    var ThreeMiddle1 = function() {
        function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
            this.value4 = value4;
            this.value5 = value5;
        }
        ThreeMiddle.create = function(value0) {
            return function(value1) {
                return function(value2) {
                    return function(value3) {
                        return function(value4) {
                            return function(value5) {
                                return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                            };
                        };
                    };
                };
            };
        };
        return ThreeMiddle;
    }();
    var ThreeRight1 = function() {
        function ThreeRight(value0, value1, value2, value3, value4, value5) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
            this.value4 = value4;
            this.value5 = value5;
        }
        ThreeRight.create = function(value0) {
            return function(value1) {
                return function(value2) {
                    return function(value3) {
                        return function(value4) {
                            return function(value5) {
                                return new ThreeRight(value0, value1, value2, value3, value4, value5);
                            };
                        };
                    };
                };
            };
        };
        return ThreeRight;
    }();
    var KickUp1 = function() {
        function KickUp(value0, value1, value2, value3) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
        }
        KickUp.create = function(value0) {
            return function(value1) {
                return function(value2) {
                    return function(value3) {
                        return new KickUp(value0, value1, value2, value3);
                    };
                };
            };
        };
        return KickUp;
    }();
    var values = function(v) {
        if (v instanceof Leaf1) return Data_List_Types.Nil.value;
        if (v instanceof Two1) return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(values(v.value3)));
        if (v instanceof Three1) return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value5))(values(v.value6)))));
        throw new Error("Failed pattern match at Data.Map.Internal (line 626, column 1 - line 626, column 40): " + [
            v.constructor.name
        ]);
    };
    var singleton = function(k) {
        return function(v) {
            return new Two1(Leaf1.value, k, v, Leaf1.value);
        };
    };
    var toUnfoldable = function(dictUnfoldable) {
        return function(m) {
            var go = function($copy_v) {
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(v) {
                    if (v instanceof Data_List_Types.Nil) {
                        $tco_done = true;
                        return Data_Maybe.Nothing.value;
                    }
                    if (v instanceof Data_List_Types.Cons) {
                        if (v.value0 instanceof Leaf1) {
                            $copy_v = v.value1;
                            return;
                        }
                        if (v.value0 instanceof Two1 && v.value0.value0 instanceof Leaf1 && v.value0.value3 instanceof Leaf1) {
                            $tco_done = true;
                            return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), v.value1));
                        }
                        if (v.value0 instanceof Two1 && v.value0.value0 instanceof Leaf1) {
                            $tco_done = true;
                            return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
                        }
                        if (v.value0 instanceof Two1) {
                            $copy_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
                            return;
                        }
                        if (v.value0 instanceof Three1) {
                            $copy_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, new Data_List_Types.Cons(singleton(v.value0.value4)(v.value0.value5), new Data_List_Types.Cons(v.value0.value6, v.value1)))));
                            return;
                        }
                        throw new Error("Failed pattern match at Data.Map.Internal (line 591, column 18 - line 600, column 71): " + [
                            v.value0.constructor.name
                        ]);
                    }
                    throw new Error("Failed pattern match at Data.Map.Internal (line 590, column 3 - line 590, column 19): " + [
                        v.constructor.name
                    ]);
                }
                while(!$tco_done)$tco_result = $tco_loop($copy_v);
                return $tco_result;
            };
            return Data_Unfoldable.unfoldr(dictUnfoldable)(go)(new Data_List_Types.Cons(m, Data_List_Types.Nil.value));
        };
    };
    var lookup = function(dictOrd) {
        return function(k) {
            var comp = Data_Ord.compare(dictOrd);
            var go = function($copy_v) {
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(v) {
                    if (v instanceof Leaf1) {
                        $tco_done = true;
                        return Data_Maybe.Nothing.value;
                    }
                    if (v instanceof Two1) {
                        var v2 = comp(k)(v.value1);
                        if (v2 instanceof Data_Ordering.EQ) {
                            $tco_done = true;
                            return new Data_Maybe.Just(v.value2);
                        }
                        if (v2 instanceof Data_Ordering.LT) {
                            $copy_v = v.value0;
                            return;
                        }
                        $copy_v = v.value3;
                        return;
                    }
                    if (v instanceof Three1) {
                        var v3 = comp(k)(v.value1);
                        if (v3 instanceof Data_Ordering.EQ) {
                            $tco_done = true;
                            return new Data_Maybe.Just(v.value2);
                        }
                        var v4 = comp(k)(v.value4);
                        if (v4 instanceof Data_Ordering.EQ) {
                            $tco_done = true;
                            return new Data_Maybe.Just(v.value5);
                        }
                        if (v3 instanceof Data_Ordering.LT) {
                            $copy_v = v.value0;
                            return;
                        }
                        if (v4 instanceof Data_Ordering.GT) {
                            $copy_v = v.value6;
                            return;
                        }
                        $copy_v = v.value3;
                        return;
                    }
                    throw new Error("Failed pattern match at Data.Map.Internal (line 211, column 5 - line 211, column 22): " + [
                        v.constructor.name
                    ]);
                }
                while(!$tco_done)$tco_result = $tco_loop($copy_v);
                return $tco_result;
            };
            return go;
        };
    };
    var member = function(dictOrd) {
        return function(k) {
            return function(m) {
                return Data_Maybe.isJust(lookup(dictOrd)(k)(m));
            };
        };
    };
    var keys = function(v) {
        if (v instanceof Leaf1) return Data_List_Types.Nil.value;
        if (v instanceof Two1) return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(keys(v.value3)));
        if (v instanceof Three1) return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value4))(keys(v.value6)))));
        throw new Error("Failed pattern match at Data.Map.Internal (line 620, column 1 - line 620, column 38): " + [
            v.constructor.name
        ]);
    };
    var fromZipper = function($copy_dictOrd) {
        return function($copy_v) {
            return function($copy_tree) {
                var $tco_var_dictOrd = $copy_dictOrd;
                var $tco_var_v = $copy_v;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(dictOrd, v, tree) {
                    if (v instanceof Data_List_Types.Nil) {
                        $tco_done = true;
                        return tree;
                    }
                    if (v instanceof Data_List_Types.Cons) {
                        if (v.value0 instanceof TwoLeft1) {
                            $tco_var_dictOrd = dictOrd;
                            $tco_var_v = v.value1;
                            $copy_tree = new Two1(tree, v.value0.value0, v.value0.value1, v.value0.value2);
                            return;
                        }
                        if (v.value0 instanceof TwoRight1) {
                            $tco_var_dictOrd = dictOrd;
                            $tco_var_v = v.value1;
                            $copy_tree = new Two1(v.value0.value0, v.value0.value1, v.value0.value2, tree);
                            return;
                        }
                        if (v.value0 instanceof ThreeLeft1) {
                            $tco_var_dictOrd = dictOrd;
                            $tco_var_v = v.value1;
                            $copy_tree = new Three1(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
                            return;
                        }
                        if (v.value0 instanceof ThreeMiddle1) {
                            $tco_var_dictOrd = dictOrd;
                            $tco_var_v = v.value1;
                            $copy_tree = new Three1(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);
                            return;
                        }
                        if (v.value0 instanceof ThreeRight1) {
                            $tco_var_dictOrd = dictOrd;
                            $tco_var_v = v.value1;
                            $copy_tree = new Three1(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);
                            return;
                        }
                        throw new Error("Failed pattern match at Data.Map.Internal (line 432, column 3 - line 437, column 88): " + [
                            v.value0.constructor.name
                        ]);
                    }
                    throw new Error("Failed pattern match at Data.Map.Internal (line 429, column 1 - line 429, column 80): " + [
                        v.constructor.name,
                        tree.constructor.name
                    ]);
                }
                while(!$tco_done)$tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_tree);
                return $tco_result;
            };
        };
    };
    var insert = function(dictOrd) {
        return function(k) {
            return function(v) {
                var up = function($copy_v1) {
                    return function($copy_v2) {
                        var $tco_var_v1 = $copy_v1;
                        var $tco_done = false;
                        var $tco_result;
                        function $tco_loop(v1, v2) {
                            if (v1 instanceof Data_List_Types.Nil) {
                                $tco_done = true;
                                return new Two1(v2.value0, v2.value1, v2.value2, v2.value3);
                            }
                            if (v1 instanceof Data_List_Types.Cons) {
                                if (v1.value0 instanceof TwoLeft1) {
                                    $tco_done = true;
                                    return fromZipper(dictOrd)(v1.value1)(new Three1(v2.value0, v2.value1, v2.value2, v2.value3, v1.value0.value0, v1.value0.value1, v1.value0.value2));
                                }
                                if (v1.value0 instanceof TwoRight1) {
                                    $tco_done = true;
                                    return fromZipper(dictOrd)(v1.value1)(new Three1(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0, v2.value1, v2.value2, v2.value3));
                                }
                                if (v1.value0 instanceof ThreeLeft1) {
                                    $tco_var_v1 = v1.value1;
                                    $copy_v2 = new KickUp1(new Two1(v2.value0, v2.value1, v2.value2, v2.value3), v1.value0.value0, v1.value0.value1, new Two1(v1.value0.value2, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                    return;
                                }
                                if (v1.value0 instanceof ThreeMiddle1) {
                                    $tco_var_v1 = v1.value1;
                                    $copy_v2 = new KickUp1(new Two1(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0), v2.value1, v2.value2, new Two1(v2.value3, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                    return;
                                }
                                if (v1.value0 instanceof ThreeRight1) {
                                    $tco_var_v1 = v1.value1;
                                    $copy_v2 = new KickUp1(new Two1(v1.value0.value0, v1.value0.value1, v1.value0.value2, v1.value0.value3), v1.value0.value4, v1.value0.value5, new Two1(v2.value0, v2.value1, v2.value2, v2.value3));
                                    return;
                                }
                                throw new Error("Failed pattern match at Data.Map.Internal (line 468, column 5 - line 473, column 108): " + [
                                    v1.value0.constructor.name,
                                    v2.constructor.name
                                ]);
                            }
                            throw new Error("Failed pattern match at Data.Map.Internal (line 465, column 3 - line 465, column 56): " + [
                                v1.constructor.name,
                                v2.constructor.name
                            ]);
                        }
                        while(!$tco_done)$tco_result = $tco_loop($tco_var_v1, $copy_v2);
                        return $tco_result;
                    };
                };
                var comp = Data_Ord.compare(dictOrd);
                var down = function($copy_ctx) {
                    return function($copy_v1) {
                        var $tco_var_ctx = $copy_ctx;
                        var $tco_done1 = false;
                        var $tco_result;
                        function $tco_loop(ctx, v1) {
                            if (v1 instanceof Leaf1) {
                                $tco_done1 = true;
                                return up(ctx)(new KickUp1(Leaf1.value, k, v, Leaf1.value));
                            }
                            if (v1 instanceof Two1) {
                                var v2 = comp(k)(v1.value1);
                                if (v2 instanceof Data_Ordering.EQ) {
                                    $tco_done1 = true;
                                    return fromZipper(dictOrd)(ctx)(new Two1(v1.value0, k, v, v1.value3));
                                }
                                if (v2 instanceof Data_Ordering.LT) {
                                    $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft1(v1.value1, v1.value2, v1.value3), ctx);
                                    $copy_v1 = v1.value0;
                                    return;
                                }
                                $tco_var_ctx = new Data_List_Types.Cons(new TwoRight1(v1.value0, v1.value1, v1.value2), ctx);
                                $copy_v1 = v1.value3;
                                return;
                            }
                            if (v1 instanceof Three1) {
                                var v3 = comp(k)(v1.value1);
                                if (v3 instanceof Data_Ordering.EQ) {
                                    $tco_done1 = true;
                                    return fromZipper(dictOrd)(ctx)(new Three1(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
                                }
                                var v4 = comp(k)(v1.value4);
                                if (v4 instanceof Data_Ordering.EQ) {
                                    $tco_done1 = true;
                                    return fromZipper(dictOrd)(ctx)(new Three1(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
                                }
                                if (v3 instanceof Data_Ordering.LT) {
                                    $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft1(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
                                    $copy_v1 = v1.value0;
                                    return;
                                }
                                if (v3 instanceof Data_Ordering.GT && v4 instanceof Data_Ordering.LT) {
                                    $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle1(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
                                    $copy_v1 = v1.value3;
                                    return;
                                }
                                $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight1(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
                                $copy_v1 = v1.value6;
                                return;
                            }
                            throw new Error("Failed pattern match at Data.Map.Internal (line 448, column 3 - line 448, column 55): " + [
                                ctx.constructor.name,
                                v1.constructor.name
                            ]);
                        }
                        while(!$tco_done1)$tco_result = $tco_loop($tco_var_ctx, $copy_v1);
                        return $tco_result;
                    };
                };
                return down(Data_List_Types.Nil.value);
            };
        };
    };
    var pop = function(dictOrd) {
        return function(k) {
            var up = function($copy_ctxs) {
                return function($copy_tree) {
                    var $tco_var_ctxs = $copy_ctxs;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(ctxs, tree) {
                        if (ctxs instanceof Data_List_Types.Nil) {
                            $tco_done = true;
                            return tree;
                        }
                        if (ctxs instanceof Data_List_Types.Cons) {
                            if (ctxs.value0 instanceof TwoLeft1 && ctxs.value0.value2 instanceof Leaf1 && tree instanceof Leaf1) {
                                $tco_done = true;
                                return fromZipper(dictOrd)(ctxs.value1)(new Two1(Leaf1.value, ctxs.value0.value0, ctxs.value0.value1, Leaf1.value));
                            }
                            if (ctxs.value0 instanceof TwoRight1 && ctxs.value0.value0 instanceof Leaf1 && tree instanceof Leaf1) {
                                $tco_done = true;
                                return fromZipper(dictOrd)(ctxs.value1)(new Two1(Leaf1.value, ctxs.value0.value1, ctxs.value0.value2, Leaf1.value));
                            }
                            if (ctxs.value0 instanceof TwoLeft1 && ctxs.value0.value2 instanceof Two1) {
                                $tco_var_ctxs = ctxs.value1;
                                $copy_tree = new Three1(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3);
                                return;
                            }
                            if (ctxs.value0 instanceof TwoRight1 && ctxs.value0.value0 instanceof Two1) {
                                $tco_var_ctxs = ctxs.value1;
                                $copy_tree = new Three1(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree);
                                return;
                            }
                            if (ctxs.value0 instanceof TwoLeft1 && ctxs.value0.value2 instanceof Three1) {
                                $tco_done = true;
                                return fromZipper(dictOrd)(ctxs.value1)(new Two1(new Two1(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two1(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));
                            }
                            if (ctxs.value0 instanceof TwoRight1 && ctxs.value0.value0 instanceof Three1) {
                                $tco_done = true;
                                return fromZipper(dictOrd)(ctxs.value1)(new Two1(new Two1(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two1(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree)));
                            }
                            if (ctxs.value0 instanceof ThreeLeft1 && ctxs.value0.value2 instanceof Leaf1 && ctxs.value0.value5 instanceof Leaf1 && tree instanceof Leaf1) {
                                $tco_done = true;
                                return fromZipper(dictOrd)(ctxs.value1)(new Three1(Leaf1.value, ctxs.value0.value0, ctxs.value0.value1, Leaf1.value, ctxs.value0.value3, ctxs.value0.value4, Leaf1.value));
                            }
                            if (ctxs.value0 instanceof ThreeMiddle1 && ctxs.value0.value0 instanceof Leaf1 && ctxs.value0.value5 instanceof Leaf1 && tree instanceof Leaf1) {
                                $tco_done = true;
                                return fromZipper(dictOrd)(ctxs.value1)(new Three1(Leaf1.value, ctxs.value0.value1, ctxs.value0.value2, Leaf1.value, ctxs.value0.value3, ctxs.value0.value4, Leaf1.value));
                            }
                            if (ctxs.value0 instanceof ThreeRight1 && ctxs.value0.value0 instanceof Leaf1 && ctxs.value0.value3 instanceof Leaf1 && tree instanceof Leaf1) {
                                $tco_done = true;
                                return fromZipper(dictOrd)(ctxs.value1)(new Three1(Leaf1.value, ctxs.value0.value1, ctxs.value0.value2, Leaf1.value, ctxs.value0.value4, ctxs.value0.value5, Leaf1.value));
                            }
                            if (ctxs.value0 instanceof ThreeLeft1 && ctxs.value0.value2 instanceof Two1) {
                                $tco_done = true;
                                return fromZipper(dictOrd)(ctxs.value1)(new Two1(new Three1(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                            }
                            if (ctxs.value0 instanceof ThreeMiddle1 && ctxs.value0.value0 instanceof Two1) {
                                $tco_done = true;
                                return fromZipper(dictOrd)(ctxs.value1)(new Two1(new Three1(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                            }
                            if (ctxs.value0 instanceof ThreeMiddle1 && ctxs.value0.value5 instanceof Two1) {
                                $tco_done = true;
                                return fromZipper(dictOrd)(ctxs.value1)(new Two1(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three1(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));
                            }
                            if (ctxs.value0 instanceof ThreeRight1 && ctxs.value0.value3 instanceof Two1) {
                                $tco_done = true;
                                return fromZipper(dictOrd)(ctxs.value1)(new Two1(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three1(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree)));
                            }
                            if (ctxs.value0 instanceof ThreeLeft1 && ctxs.value0.value2 instanceof Three1) {
                                $tco_done = true;
                                return fromZipper(dictOrd)(ctxs.value1)(new Three1(new Two1(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two1(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                            }
                            if (ctxs.value0 instanceof ThreeMiddle1 && ctxs.value0.value0 instanceof Three1) {
                                $tco_done = true;
                                return fromZipper(dictOrd)(ctxs.value1)(new Three1(new Two1(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two1(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                            }
                            if (ctxs.value0 instanceof ThreeMiddle1 && ctxs.value0.value5 instanceof Three1) {
                                $tco_done = true;
                                return fromZipper(dictOrd)(ctxs.value1)(new Three1(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two1(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two1(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));
                            }
                            if (ctxs.value0 instanceof ThreeRight1 && ctxs.value0.value3 instanceof Three1) {
                                $tco_done = true;
                                return fromZipper(dictOrd)(ctxs.value1)(new Three1(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two1(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two1(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree)));
                            }
                            throw new Error("Failed pattern match at Data.Map.Internal (line 525, column 9 - line 542, column 136): " + [
                                ctxs.value0.constructor.name,
                                tree.constructor.name
                            ]);
                        }
                        throw new Error("Failed pattern match at Data.Map.Internal (line 522, column 5 - line 542, column 136): " + [
                            ctxs.constructor.name
                        ]);
                    }
                    while(!$tco_done)$tco_result = $tco_loop($tco_var_ctxs, $copy_tree);
                    return $tco_result;
                };
            };
            var removeMaxNode = function($copy_ctx) {
                return function($copy_m) {
                    var $tco_var_ctx = $copy_ctx;
                    var $tco_done1 = false;
                    var $tco_result;
                    function $tco_loop(ctx, m) {
                        if (m instanceof Two1 && m.value0 instanceof Leaf1 && m.value3 instanceof Leaf1) {
                            $tco_done1 = true;
                            return up(ctx)(Leaf1.value);
                        }
                        if (m instanceof Two1) {
                            $tco_var_ctx = new Data_List_Types.Cons(new TwoRight1(m.value0, m.value1, m.value2), ctx);
                            $copy_m = m.value3;
                            return;
                        }
                        if (m instanceof Three1 && m.value0 instanceof Leaf1 && m.value3 instanceof Leaf1 && m.value6 instanceof Leaf1) {
                            $tco_done1 = true;
                            return up(new Data_List_Types.Cons(new TwoRight1(Leaf1.value, m.value1, m.value2), ctx))(Leaf1.value);
                        }
                        if (m instanceof Three1) {
                            $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight1(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
                            $copy_m = m.value6;
                            return;
                        }
                        throw new Error("Failed pattern match at Data.Map.Internal (line 554, column 5 - line 558, column 107): " + [
                            m.constructor.name
                        ]);
                    }
                    while(!$tco_done1)$tco_result = $tco_loop($tco_var_ctx, $copy_m);
                    return $tco_result;
                };
            };
            var maxNode = function($copy_m) {
                var $tco_done2 = false;
                var $tco_result;
                function $tco_loop(m) {
                    if (m instanceof Two1 && m.value3 instanceof Leaf1) {
                        $tco_done2 = true;
                        return {
                            key: m.value1,
                            value: m.value2
                        };
                    }
                    if (m instanceof Two1) {
                        $copy_m = m.value3;
                        return;
                    }
                    if (m instanceof Three1 && m.value6 instanceof Leaf1) {
                        $tco_done2 = true;
                        return {
                            key: m.value4,
                            value: m.value5
                        };
                    }
                    if (m instanceof Three1) {
                        $copy_m = m.value6;
                        return;
                    }
                    throw new Error("Failed pattern match at Data.Map.Internal (line 545, column 33 - line 549, column 45): " + [
                        m.constructor.name
                    ]);
                }
                while(!$tco_done2)$tco_result = $tco_loop($copy_m);
                return $tco_result;
            };
            var comp = Data_Ord.compare(dictOrd);
            var down = function($copy_ctx) {
                return function($copy_m) {
                    var $tco_var_ctx = $copy_ctx;
                    var $tco_done3 = false;
                    var $tco_result;
                    function $tco_loop(ctx, m) {
                        if (m instanceof Leaf1) {
                            $tco_done3 = true;
                            return Data_Maybe.Nothing.value;
                        }
                        if (m instanceof Two1) {
                            var v = comp(k)(m.value1);
                            if (m.value3 instanceof Leaf1 && v instanceof Data_Ordering.EQ) {
                                $tco_done3 = true;
                                return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, up(ctx)(Leaf1.value)));
                            }
                            if (v instanceof Data_Ordering.EQ) {
                                var max = maxNode(m.value0);
                                $tco_done3 = true;
                                return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new TwoLeft1(max.key, max.value, m.value3), ctx))(m.value0)));
                            }
                            if (v instanceof Data_Ordering.LT) {
                                $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft1(m.value1, m.value2, m.value3), ctx);
                                $copy_m = m.value0;
                                return;
                            }
                            $tco_var_ctx = new Data_List_Types.Cons(new TwoRight1(m.value0, m.value1, m.value2), ctx);
                            $copy_m = m.value3;
                            return;
                        }
                        if (m instanceof Three1) {
                            var leaves = function() {
                                if (m.value0 instanceof Leaf1 && m.value3 instanceof Leaf1 && m.value6 instanceof Leaf1) return true;
                                return false;
                            }();
                            var v = comp(k)(m.value4);
                            var v3 = comp(k)(m.value1);
                            if (leaves && v3 instanceof Data_Ordering.EQ) {
                                $tco_done3 = true;
                                return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, fromZipper(dictOrd)(ctx)(new Two1(Leaf1.value, m.value4, m.value5, Leaf1.value))));
                            }
                            if (leaves && v instanceof Data_Ordering.EQ) {
                                $tco_done3 = true;
                                return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, fromZipper(dictOrd)(ctx)(new Two1(Leaf1.value, m.value1, m.value2, Leaf1.value))));
                            }
                            if (v3 instanceof Data_Ordering.EQ) {
                                var max = maxNode(m.value0);
                                $tco_done3 = true;
                                return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new ThreeLeft1(max.key, max.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));
                            }
                            if (v instanceof Data_Ordering.EQ) {
                                var max = maxNode(m.value3);
                                $tco_done3 = true;
                                return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, removeMaxNode(new Data_List_Types.Cons(new ThreeMiddle1(m.value0, m.value1, m.value2, max.key, max.value, m.value6), ctx))(m.value3)));
                            }
                            if (v3 instanceof Data_Ordering.LT) {
                                $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft1(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx);
                                $copy_m = m.value0;
                                return;
                            }
                            if (v3 instanceof Data_Ordering.GT && v instanceof Data_Ordering.LT) {
                                $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle1(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx);
                                $copy_m = m.value3;
                                return;
                            }
                            $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight1(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
                            $copy_m = m.value6;
                            return;
                        }
                        throw new Error("Failed pattern match at Data.Map.Internal (line 495, column 34 - line 518, column 80): " + [
                            m.constructor.name
                        ]);
                    }
                    while(!$tco_done3)$tco_result = $tco_loop($tco_var_ctx, $copy_m);
                    return $tco_result;
                };
            };
            return down(Data_List_Types.Nil.value);
        };
    };
    var foldableMap = {
        foldl: function(f) {
            return function(z) {
                return function(m) {
                    return Data_Foldable.foldl(Data_List_Types.foldableList)(f)(z)(values(m));
                };
            };
        },
        foldr: function(f) {
            return function(z) {
                return function(m) {
                    return Data_Foldable.foldr(Data_List_Types.foldableList)(f)(z)(values(m));
                };
            };
        },
        foldMap: function(dictMonoid) {
            return function(f) {
                return function(m) {
                    return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f)(values(m));
                };
            };
        }
    };
    var empty = Leaf1.value;
    var fromFoldable = function(dictOrd) {
        return function(dictFoldable) {
            return Data_Foldable.foldl(dictFoldable)(function(m) {
                return function(v) {
                    return insert(dictOrd)(v.value0)(v.value1)(m);
                };
            })(empty);
        };
    };
    var $$delete = function(dictOrd) {
        return function(k) {
            return function(m) {
                return Data_Maybe.maybe(m)(Data_Tuple.snd)(pop(dictOrd)(k)(m));
            };
        };
    };
    var alter = function(dictOrd) {
        return function(f) {
            return function(k) {
                return function(m) {
                    var v = f(lookup(dictOrd)(k)(m));
                    if (v instanceof Data_Maybe.Nothing) return $$delete(dictOrd)(k)(m);
                    if (v instanceof Data_Maybe.Just) return insert(dictOrd)(k)(v.value0)(m);
                    throw new Error("Failed pattern match at Data.Map.Internal (line 563, column 15 - line 565, column 25): " + [
                        v.constructor.name
                    ]);
                };
            };
        };
    };
    var unionWith = function(dictOrd) {
        return function(f) {
            return function(m1) {
                return function(m2) {
                    var go = function(m) {
                        return function(v) {
                            return alter(dictOrd)(function() {
                                var $775 = Data_Maybe.maybe(v.value1)(f(v.value1));
                                return function($776) {
                                    return Data_Maybe.Just.create($775($776));
                                };
                            }())(v.value0)(m);
                        };
                    };
                    return Data_Foldable.foldl(Data_List_Types.foldableList)(go)(m2)(toUnfoldable(Data_List_Types.unfoldableList)(m1));
                };
            };
        };
    };
    var union = function(dictOrd) {
        return unionWith(dictOrd)(Data_Function["const"]);
    };
    var unions = function(dictOrd) {
        return function(dictFoldable) {
            return Data_Foldable.foldl(dictFoldable)(union(dictOrd))(empty);
        };
    };
    exports["empty"] = empty;
    exports["singleton"] = singleton;
    exports["insert"] = insert;
    exports["lookup"] = lookup;
    exports["fromFoldable"] = fromFoldable;
    exports["toUnfoldable"] = toUnfoldable;
    exports["delete"] = $$delete;
    exports["member"] = member;
    exports["alter"] = alter;
    exports["keys"] = keys;
    exports["values"] = values;
    exports["union"] = union;
    exports["unions"] = unions;
    exports["foldableMap"] = foldableMap;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.Group"] = $PS["Data.Group"] || {
    };
    var exports = $PS["Data.Group"];
    var ginverse = function(dict) {
        return dict.ginverse;
    };
    exports["ginverse"] = ginverse;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.Pitches.Class"] = $PS["Data.Pitches.Class"] || {
    };
    var exports = $PS["Data.Pitches.Class"];
    var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_Group = $PS["Data.Group"];
    var Data_Identity = $PS["Data.Identity"];
    var Pitch = function(x) {
        return x;
    };
    var toInterval = function(dictInterval) {
        return function(v) {
            return v;
        };
    };
    var showPitch = function(dict) {
        return dict.showPitch;
    };
    var showPitchInst = function(dictShowPitch) {
        return {
            show: function(v) {
                return showPitch(dictShowPitch)(v);
            }
        };
    };
    var readImplPitch = function(dict) {
        return dict.readImplPitch;
    };
    var readForeignPitch = function(dictReadForeignPitch) {
        return {
            readImpl: function(f) {
                return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Pitch)(readImplPitch(dictReadForeignPitch)(f));
            }
        };
    };
    var parsePitchNotation = function(dict) {
        return dict.parsePitchNotation;
    };
    var parsenotationPitch = function(dictParsePitchNotation) {
        return {
            parseNotation: parsePitchNotation(dictParsePitchNotation)
        };
    };
    var parseNotation = function(dict) {
        return dict.parseNotation;
    };
    var ordPitch = function(dictOrd) {
        return dictOrd;
    };
    var ic = function(dict) {
        return dict.ic;
    };
    var iabs = function(dict) {
        return dict.iabs;
    };
    var eqPitch = function(dictEq) {
        return dictEq;
    };
    var down = function(dictInterval) {
        return Data_Group.ginverse(dictInterval.Group0());
    };
    var direction = function(dict) {
        return dict.direction;
    };
    exports["direction"] = direction;
    exports["iabs"] = iabs;
    exports["down"] = down;
    exports["ic"] = ic;
    exports["parseNotation"] = parseNotation;
    exports["Pitch"] = Pitch;
    exports["toInterval"] = toInterval;
    exports["eqPitch"] = eqPitch;
    exports["ordPitch"] = ordPitch;
    exports["showPitchInst"] = showPitchInst;
    exports["parsenotationPitch"] = parsenotationPitch;
    exports["readForeignPitch"] = readForeignPitch;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Control.Alt"] = $PS["Control.Alt"] || {
    };
    var exports = $PS["Control.Alt"];
    var alt = function(dict) {
        return dict.alt;
    };
    exports["alt"] = alt;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports.toCharCode = function(c) {
        return c.charCodeAt(0);
    };
    exports.fromCharCode = function(c) {
        return String.fromCharCode(c);
    };
})($a63366291e3889d2$var$PS["Data.Enum"] = $a63366291e3889d2$var$PS["Data.Enum"] || {
});
(function(exports) {
    exports.topInt = 2147483647;
    exports.bottomInt = -2147483648;
    exports.topChar = String.fromCharCode(65535);
    exports.bottomChar = String.fromCharCode(0);
})($a63366291e3889d2$var$PS["Data.Bounded"] = $a63366291e3889d2$var$PS["Data.Bounded"] || {
});
(function($PS) {
    $PS["Data.Bounded"] = $PS["Data.Bounded"] || {
    };
    var exports = $PS["Data.Bounded"];
    var $foreign = $PS["Data.Bounded"];
    var Data_Ord = $PS["Data.Ord"];
    var top = function(dict) {
        return dict.top;
    };
    var boundedInt = {
        top: $foreign.topInt,
        bottom: $foreign.bottomInt,
        Ord0: function() {
            return Data_Ord.ordInt;
        }
    };
    var boundedChar = {
        top: $foreign.topChar,
        bottom: $foreign.bottomChar,
        Ord0: function() {
            return Data_Ord.ordChar;
        }
    };
    var bottom = function(dict) {
        return dict.bottom;
    };
    exports["bottom"] = bottom;
    exports["top"] = top;
    exports["boundedInt"] = boundedInt;
    exports["boundedChar"] = boundedChar;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.Enum"] = $PS["Data.Enum"] || {
    };
    var exports = $PS["Data.Enum"];
    var $foreign = $PS["Data.Enum"];
    var Data_Bounded = $PS["Data.Bounded"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Data_Ord = $PS["Data.Ord"];
    var toEnum = function(dict) {
        return dict.toEnum;
    };
    var fromEnum = function(dict) {
        return dict.fromEnum;
    };
    var toEnumWithDefaults = function(dictBoundedEnum) {
        return function(low) {
            return function(high) {
                return function(x) {
                    var v = toEnum(dictBoundedEnum)(x);
                    if (v instanceof Data_Maybe.Just) return v.value0;
                    if (v instanceof Data_Maybe.Nothing) {
                        var $55 = x < fromEnum(dictBoundedEnum)(Data_Bounded.bottom(dictBoundedEnum.Bounded0()));
                        if ($55) return low;
                        return high;
                    }
                    throw new Error("Failed pattern match at Data.Enum (line 158, column 33 - line 160, column 62): " + [
                        v.constructor.name
                    ]);
                };
            };
        };
    };
    var defaultSucc = function(toEnum$prime) {
        return function(fromEnum$prime) {
            return function(a) {
                return toEnum$prime(fromEnum$prime(a) + 1 | 0);
            };
        };
    };
    var defaultPred = function(toEnum$prime) {
        return function(fromEnum$prime) {
            return function(a) {
                return toEnum$prime(fromEnum$prime(a) - 1 | 0);
            };
        };
    };
    var charToEnum = function(v) {
        if (v >= Data_Bounded.bottom(Data_Bounded.boundedInt) && v <= Data_Bounded.top(Data_Bounded.boundedInt)) return new Data_Maybe.Just($foreign.fromCharCode(v));
        return Data_Maybe.Nothing.value;
    };
    var enumChar = {
        succ: defaultSucc(charToEnum)($foreign.toCharCode),
        pred: defaultPred(charToEnum)($foreign.toCharCode),
        Ord0: function() {
            return Data_Ord.ordChar;
        }
    };
    var boundedEnumChar = {
        cardinality: $foreign.toCharCode(Data_Bounded.top(Data_Bounded.boundedChar)) - $foreign.toCharCode(Data_Bounded.bottom(Data_Bounded.boundedChar)) | 0,
        toEnum: charToEnum,
        fromEnum: $foreign.toCharCode,
        Bounded0: function() {
            return Data_Bounded.boundedChar;
        },
        Enum1: function() {
            return enumChar;
        }
    };
    exports["toEnum"] = toEnum;
    exports["fromEnum"] = fromEnum;
    exports["toEnumWithDefaults"] = toEnumWithDefaults;
    exports["defaultSucc"] = defaultSucc;
    exports["defaultPred"] = defaultPred;
    exports["boundedEnumChar"] = boundedEnumChar;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.Char"] = $PS["Data.Char"] || {
    };
    var exports = $PS["Data.Char"];
    var Data_Enum = $PS["Data.Enum"];
    var toCharCode = Data_Enum.fromEnum(Data_Enum.boundedEnumChar);
    var fromCharCode = Data_Enum.toEnum(Data_Enum.boundedEnumChar);
    exports["toCharCode"] = toCharCode;
    exports["fromCharCode"] = fromCharCode;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports.pureE = function(a) {
        return function() {
            return a;
        };
    };
    exports.bindE = function(a) {
        return function(f) {
            return function() {
                return f(a())();
            };
        };
    };
})($a63366291e3889d2$var$PS["Effect"] = $a63366291e3889d2$var$PS["Effect"] || {
});
(function($PS) {
    $PS["Effect"] = $PS["Effect"] || {
    };
    var exports = $PS["Effect"];
    var $foreign = $PS["Effect"];
    var Control_Applicative = $PS["Control.Applicative"];
    var Control_Monad = $PS["Control.Monad"];
    var monadEffect = {
        Applicative0: function() {
            return applicativeEffect;
        },
        Bind1: function() {
            return bindEffect;
        }
    };
    var bindEffect = {
        bind: $foreign.bindE,
        Apply0: function() {
            return applyEffect;
        }
    };
    var applyEffect = {
        apply: Control_Monad.ap(monadEffect),
        Functor0: function() {
            return functorEffect;
        }
    };
    var applicativeEffect = {
        pure: $foreign.pureE,
        Apply0: function() {
            return applyEffect;
        }
    };
    var functorEffect = {
        map: Control_Applicative.liftA1(applicativeEffect)
    };
    exports["functorEffect"] = functorEffect;
    exports["applicativeEffect"] = applicativeEffect;
    exports["bindEffect"] = bindEffect;
    exports["monadEffect"] = monadEffect;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports.new = function(val) {
        return function() {
            return {
                value: val
            };
        };
    };
    exports.read = function(ref) {
        return function() {
            return ref.value;
        };
    };
    exports.modifyImpl = function(f) {
        return function(ref) {
            return function() {
                var t = f(ref.value);
                ref.value = t.state;
                return t.value;
            };
        };
    };
    exports.write = function(val) {
        return function(ref) {
            return function() {
                ref.value = val;
            };
        };
    };
})($a63366291e3889d2$var$PS["Effect.Ref"] = $a63366291e3889d2$var$PS["Effect.Ref"] || {
});
(function($PS) {
    $PS["Effect.Ref"] = $PS["Effect.Ref"] || {
    };
    var exports = $PS["Effect.Ref"];
    var $foreign = $PS["Effect.Ref"];
    var Data_Functor = $PS["Data.Functor"];
    var Effect = $PS["Effect"];
    var modify$prime = $foreign.modifyImpl;
    var modify = function(f) {
        return modify$prime(function(s) {
            var s$prime = f(s);
            return {
                state: s$prime,
                value: s$prime
            };
        });
    };
    var modify_ = function(f) {
        return function(s) {
            return Data_Functor["void"](Effect.functorEffect)(modify(f)(s));
        };
    };
    exports["modify'"] = modify$prime;
    exports["modify_"] = modify_;
    exports["new"] = $foreign["new"];
    exports["read"] = $foreign.read;
    exports["write"] = $foreign.write;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Control.Monad.Rec.Class"] = $PS["Control.Monad.Rec.Class"] || {
    };
    var exports = $PS["Control.Monad.Rec.Class"];
    var Control_Bind = $PS["Control.Bind"];
    var Data_Either = $PS["Data.Either"];
    var Data_Functor = $PS["Data.Functor"];
    var Effect = $PS["Effect"];
    var Effect_Ref = $PS["Effect.Ref"];
    var Loop1 = function() {
        function Loop(value0) {
            this.value0 = value0;
        }
        Loop.create = function(value0) {
            return new Loop(value0);
        };
        return Loop;
    }();
    var Done1 = function() {
        function Done(value0) {
            this.value0 = value0;
        }
        Done.create = function(value0) {
            return new Done(value0);
        };
        return Done;
    }();
    var tailRecM = function(dict) {
        return dict.tailRecM;
    };
    var tailRec = function(f) {
        var go = function($copy_v) {
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(v) {
                if (v instanceof Loop1) {
                    $copy_v = f(v.value0);
                    return;
                }
                if (v instanceof Done1) {
                    $tco_done = true;
                    return v.value0;
                }
                throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 93, column 3 - line 93, column 25): " + [
                    v.constructor.name
                ]);
            }
            while(!$tco_done)$tco_result = $tco_loop($copy_v);
            return $tco_result;
        };
        return function($59) {
            return go(f($59));
        };
    };
    var monadRecEither = {
        tailRecM: function(f) {
            return function(a0) {
                var g = function(v) {
                    if (v instanceof Data_Either.Left) return new Done1(new Data_Either.Left(v.value0));
                    if (v instanceof Data_Either.Right && v.value0 instanceof Loop1) return new Loop1(f(v.value0.value0));
                    if (v instanceof Data_Either.Right && v.value0 instanceof Done1) return new Done1(new Data_Either.Right(v.value0.value0));
                    throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 121, column 7 - line 121, column 33): " + [
                        v.constructor.name
                    ]);
                };
                return tailRec(g)(f(a0));
            };
        },
        Monad0: function() {
            return Data_Either.monadEither;
        }
    };
    var monadRecEffect = {
        tailRecM: function(f) {
            return function(a) {
                var fromDone = function(v) {
                    if (v instanceof Done1) return v.value0;
                    throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 113, column 30 - line 113, column 44): " + [
                        v.constructor.name
                    ]);
                };
                return function __do() {
                    var r = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref["new"])(f(a))();
                    (function() {
                        while(!function __do() {
                            var v = Effect_Ref.read(r)();
                            if (v instanceof Loop1) {
                                var e = f(v.value0)();
                                Effect_Ref.write(e)(r)();
                                return false;
                            }
                            if (v instanceof Done1) return true;
                            throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 104, column 22 - line 109, column 28): " + [
                                v.constructor.name
                            ]);
                        }());
                        return {
                        };
                    })();
                    return Data_Functor.map(Effect.functorEffect)(fromDone)(Effect_Ref.read(r))();
                };
            };
        },
        Monad0: function() {
            return Effect.monadEffect;
        }
    };
    var bifunctorStep = {
        bimap: function(v) {
            return function(v1) {
                return function(v2) {
                    if (v2 instanceof Loop1) return new Loop1(v(v2.value0));
                    if (v2 instanceof Done1) return new Done1(v1(v2.value0));
                    throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 29, column 1 - line 31, column 34): " + [
                        v.constructor.name,
                        v1.constructor.name,
                        v2.constructor.name
                    ]);
                };
            };
        }
    };
    exports["Loop"] = Loop1;
    exports["Done"] = Done1;
    exports["tailRecM"] = tailRecM;
    exports["bifunctorStep"] = bifunctorStep;
    exports["monadRecEffect"] = monadRecEffect;
    exports["monadRecEither"] = monadRecEither;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.Bifunctor"] = $PS["Data.Bifunctor"] || {
    };
    var exports = $PS["Data.Bifunctor"];
    var Control_Category = $PS["Control.Category"];
    var Data_Either = $PS["Data.Either"];
    var bimap = function(dict) {
        return dict.bimap;
    };
    var lmap = function(dictBifunctor) {
        return function(f) {
            return bimap(dictBifunctor)(f)(Control_Category.identity(Control_Category.categoryFn));
        };
    };
    var bifunctorEither = {
        bimap: function(v) {
            return function(v1) {
                return function(v2) {
                    if (v2 instanceof Data_Either.Left) return new Data_Either.Left(v(v2.value0));
                    if (v2 instanceof Data_Either.Right) return new Data_Either.Right(v1(v2.value0));
                    throw new Error("Failed pattern match at Data.Bifunctor (line 32, column 1 - line 34, column 36): " + [
                        v.constructor.name,
                        v1.constructor.name,
                        v2.constructor.name
                    ]);
                };
            };
        }
    };
    exports["bimap"] = bimap;
    exports["lmap"] = lmap;
    exports["bifunctorEither"] = bifunctorEither;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.List"] = $PS["Data.List"] || {
    };
    var exports = $PS["Data.List"];
    var Control_Alt = $PS["Control.Alt"];
    var Control_Applicative = $PS["Control.Applicative"];
    var Control_Bind = $PS["Control.Bind"];
    var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
    var Data_Bifunctor = $PS["Data.Bifunctor"];
    var Data_Boolean = $PS["Data.Boolean"];
    var Data_Foldable = $PS["Data.Foldable"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_List_Types = $PS["Data.List.Types"];
    var Data_Unit = $PS["Data.Unit"];
    var reverse = function() {
        var go = function($copy_acc) {
            return function($copy_v) {
                var $tco_var_acc = $copy_acc;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(acc, v) {
                    if (v instanceof Data_List_Types.Nil) {
                        $tco_done = true;
                        return acc;
                    }
                    if (v instanceof Data_List_Types.Cons) {
                        $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                        $copy_v = v.value1;
                        return;
                    }
                    throw new Error("Failed pattern match at Data.List (line 372, column 3 - line 372, column 19): " + [
                        acc.constructor.name,
                        v.constructor.name
                    ]);
                }
                while(!$tco_done)$tco_result = $tco_loop($tco_var_acc, $copy_v);
                return $tco_result;
            };
        };
        return go(Data_List_Types.Nil.value);
    }();
    var $$null = function(v) {
        if (v instanceof Data_List_Types.Nil) return true;
        return false;
    };
    var manyRec = function(dictMonadRec) {
        return function(dictAlternative) {
            return function(p) {
                var go = function(acc) {
                    return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(Control_Alt.alt(dictAlternative.Plus1().Alt0())(Data_Functor.map(dictAlternative.Plus1().Alt0().Functor0())(Control_Monad_Rec_Class.Loop.create)(p))(Control_Applicative.pure(dictAlternative.Applicative0())(new Control_Monad_Rec_Class.Done(Data_Unit.unit))))(function(aa) {
                        return Control_Applicative.pure(dictAlternative.Applicative0())(Data_Bifunctor.bimap(Control_Monad_Rec_Class.bifunctorStep)(function(v) {
                            return new Data_List_Types.Cons(v, acc);
                        })(function(v) {
                            return reverse(acc);
                        })(aa));
                    });
                };
                return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go)(Data_List_Types.Nil.value);
            };
        };
    };
    var length = Data_Foldable.foldl(Data_List_Types.foldableList)(function(acc) {
        return function(v) {
            return acc + 1 | 0;
        };
    })(0);
    var fromFoldable = function(dictFoldable) {
        return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
    };
    var filter = function(p) {
        var go = function($copy_acc) {
            return function($copy_v) {
                var $tco_var_acc = $copy_acc;
                var $tco_done = false;
                var $tco_result;
                function $tco_loop(acc, v) {
                    if (v instanceof Data_List_Types.Nil) {
                        $tco_done = true;
                        return reverse(acc);
                    }
                    if (v instanceof Data_List_Types.Cons) {
                        if (p(v.value0)) {
                            $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                            $copy_v = v.value1;
                            return;
                        }
                        if (Data_Boolean.otherwise) {
                            $tco_var_acc = acc;
                            $copy_v = v.value1;
                            return;
                        }
                    }
                    throw new Error("Failed pattern match at Data.List (line 394, column 3 - line 394, column 27): " + [
                        acc.constructor.name,
                        v.constructor.name
                    ]);
                }
                while(!$tco_done)$tco_result = $tco_loop($tco_var_acc, $copy_v);
                return $tco_result;
            };
        };
        return go(Data_List_Types.Nil.value);
    };
    exports["fromFoldable"] = fromFoldable;
    exports["manyRec"] = manyRec;
    exports["null"] = $$null;
    exports["length"] = length;
    exports["reverse"] = reverse;
    exports["filter"] = filter;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.List.NonEmpty"] = $PS["Data.List.NonEmpty"] || {
    };
    var exports = $PS["Data.List.NonEmpty"];
    var Data_List = $PS["Data.List"];
    var Data_List_Types = $PS["Data.List.Types"];
    var Data_NonEmpty = $PS["Data.NonEmpty"];
    var singleton = function() {
        var $172 = Data_NonEmpty.singleton(Data_List_Types.plusList);
        return function($173) {
            return Data_List_Types.NonEmptyList($172($173));
        };
    }();
    var length = function(v) {
        return 1 + Data_List.length(v.value1) | 0;
    };
    var cons = function(y) {
        return function(v) {
            return new Data_NonEmpty.NonEmpty(y, new Data_List_Types.Cons(v.value0, v.value1));
        };
    };
    exports["singleton"] = singleton;
    exports["length"] = length;
    exports["cons"] = cons;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports.typeOf = function(value) {
        return typeof value;
    };
    exports.tagOf = function(value) {
        return Object.prototype.toString.call(value).slice(8, -1);
    };
    exports.isNull = function(value) {
        return value === null;
    };
    exports.isUndefined = function(value) {
        return value === undefined;
    };
    exports.isArray = Array.isArray || function(value) {
        return Object.prototype.toString.call(value) === "[object Array]";
    };
})($a63366291e3889d2$var$PS["Foreign"] = $a63366291e3889d2$var$PS["Foreign"] || {
});
(function($PS) {
    $PS["Control.Monad.Error.Class"] = $PS["Control.Monad.Error.Class"] || {
    };
    var exports = $PS["Control.Monad.Error.Class"];
    var Control_Applicative = $PS["Control.Applicative"];
    var Data_Either = $PS["Data.Either"];
    var Data_Functor = $PS["Data.Functor"];
    var throwError = function(dict) {
        return dict.throwError;
    };
    var catchError = function(dict) {
        return dict.catchError;
    };
    var $$try = function(dictMonadError) {
        return function(a) {
            return catchError(dictMonadError)(Data_Functor.map(dictMonadError.MonadThrow0().Monad0().Bind1().Apply0().Functor0())(Data_Either.Right.create)(a))(function() {
                var $19 = Control_Applicative.pure(dictMonadError.MonadThrow0().Monad0().Applicative0());
                return function($20) {
                    return $19(Data_Either.Left.create($20));
                };
            }());
        };
    };
    exports["throwError"] = throwError;
    exports["try"] = $$try;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports.fromNumberImpl = function(just) {
        return function(nothing) {
            return function(n) {
                /* jshint bitwise: false */ return (n | 0) === n ? just(n) : nothing;
            };
        };
    };
    exports.toNumber = function(n) {
        return n;
    };
    exports.toStringAs = function(radix) {
        return function(i) {
            return i.toString(radix);
        };
    };
})($a63366291e3889d2$var$PS["Data.Int"] = $a63366291e3889d2$var$PS["Data.Int"] || {
});
(function($PS) {
    $PS["Data.Int"] = $PS["Data.Int"] || {
    };
    var exports = $PS["Data.Int"];
    var $foreign = $PS["Data.Int"];
    var Data_Maybe = $PS["Data.Maybe"];
    var hexadecimal = 16;
    var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
    exports["fromNumber"] = fromNumber;
    exports["hexadecimal"] = hexadecimal;
    exports["toNumber"] = $foreign.toNumber;
    exports["toStringAs"] = $foreign.toStringAs;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Foreign"] = $PS["Foreign"] || {
    };
    var exports = $PS["Foreign"];
    var $foreign = $PS["Foreign"];
    var Control_Applicative = $PS["Control.Applicative"];
    var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
    var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
    var Data_Boolean = $PS["Data.Boolean"];
    var Data_Either = $PS["Data.Either"];
    var Data_Function = $PS["Data.Function"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_Int = $PS["Data.Int"];
    var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Unsafe_Coerce = $PS["Unsafe.Coerce"];
    var ForeignError1 = function() {
        function ForeignError(value0) {
            this.value0 = value0;
        }
        ForeignError.create = function(value0) {
            return new ForeignError(value0);
        };
        return ForeignError;
    }();
    var TypeMismatch1 = function() {
        function TypeMismatch(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        }
        TypeMismatch.create = function(value0) {
            return function(value1) {
                return new TypeMismatch(value0, value1);
            };
        };
        return TypeMismatch;
    }();
    var ErrorAtIndex1 = function() {
        function ErrorAtIndex(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        }
        ErrorAtIndex.create = function(value0) {
            return function(value1) {
                return new ErrorAtIndex(value0, value1);
            };
        };
        return ErrorAtIndex;
    }();
    var ErrorAtProperty1 = function() {
        function ErrorAtProperty(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        }
        ErrorAtProperty.create = function(value0) {
            return function(value1) {
                return new ErrorAtProperty(value0, value1);
            };
        };
        return ErrorAtProperty;
    }();
    var unsafeToForeign = Unsafe_Coerce.unsafeCoerce;
    var unsafeFromForeign = Unsafe_Coerce.unsafeCoerce;
    var fail = function(dictMonad) {
        var $118 = Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(dictMonad));
        return function($119) {
            return $118(Data_List_NonEmpty.singleton($119));
        };
    };
    var readArray = function(dictMonad) {
        return function(value) {
            if ($foreign.isArray(value)) return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonad))(unsafeFromForeign(value));
            if (Data_Boolean.otherwise) return fail(dictMonad)(new TypeMismatch1("array", $foreign.tagOf(value)));
            throw new Error("Failed pattern match at Foreign (line 151, column 1 - line 151, column 66): " + [
                value.constructor.name
            ]);
        };
    };
    var unsafeReadTagged = function(dictMonad) {
        return function(tag) {
            return function(value) {
                if ($foreign.tagOf(value) === tag) return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonad))(unsafeFromForeign(value));
                if (Data_Boolean.otherwise) return fail(dictMonad)(new TypeMismatch1(tag, $foreign.tagOf(value)));
                throw new Error("Failed pattern match at Foreign (line 110, column 1 - line 110, column 71): " + [
                    tag.constructor.name,
                    value.constructor.name
                ]);
            };
        };
    };
    var readBoolean = function(dictMonad) {
        return unsafeReadTagged(dictMonad)("Boolean");
    };
    var readNumber = function(dictMonad) {
        return unsafeReadTagged(dictMonad)("Number");
    };
    var readInt = function(dictMonad) {
        return function(value) {
            var error = Data_Either.Left.create(Data_List_NonEmpty.singleton(new TypeMismatch1("Int", $foreign.tagOf(value))));
            var fromNumber = function() {
                var $120 = Data_Maybe.maybe(error)(Control_Applicative.pure(Data_Either.applicativeEither));
                return function($121) {
                    return $120(Data_Int.fromNumber($121));
                };
            }();
            return Control_Monad_Except_Trans.mapExceptT(Data_Functor.map(dictMonad.Bind1().Apply0().Functor0())(Data_Either.either(Data_Function["const"](error))(fromNumber)))(readNumber(dictMonad)(value));
        };
    };
    var readString = function(dictMonad) {
        return unsafeReadTagged(dictMonad)("String");
    };
    exports["ForeignError"] = ForeignError1;
    exports["TypeMismatch"] = TypeMismatch1;
    exports["ErrorAtIndex"] = ErrorAtIndex1;
    exports["ErrorAtProperty"] = ErrorAtProperty1;
    exports["unsafeToForeign"] = unsafeToForeign;
    exports["readString"] = readString;
    exports["readBoolean"] = readBoolean;
    exports["readNumber"] = readNumber;
    exports["readInt"] = readInt;
    exports["readArray"] = readArray;
    exports["fail"] = fail;
    exports["typeOf"] = $foreign.typeOf;
    exports["isNull"] = $foreign.isNull;
    exports["isUndefined"] = $foreign.isUndefined;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports._parseJSON = JSON.parse;
})($a63366291e3889d2$var$PS["Simple.JSON"] = $a63366291e3889d2$var$PS["Simple.JSON"] || {
});
(function(exports) {
    exports.mapWithIndexArray = function(f) {
        return function(xs) {
            var l = xs.length;
            var result = Array(l);
            for(var i = 0; i < l; i++)result[i] = f(i)(xs[i]);
            return result;
        };
    };
})($a63366291e3889d2$var$PS["Data.FunctorWithIndex"] = $a63366291e3889d2$var$PS["Data.FunctorWithIndex"] || {
});
(function($PS) {
    $PS["Data.FunctorWithIndex"] = $PS["Data.FunctorWithIndex"] || {
    };
    var exports = $PS["Data.FunctorWithIndex"];
    var $foreign = $PS["Data.FunctorWithIndex"];
    var Data_Functor = $PS["Data.Functor"];
    var mapWithIndex = function(dict) {
        return dict.mapWithIndex;
    };
    var functorWithIndexArray = {
        mapWithIndex: $foreign.mapWithIndexArray,
        Functor0: function() {
            return Data_Functor.functorArray;
        }
    };
    exports["mapWithIndex"] = mapWithIndex;
    exports["functorWithIndexArray"] = functorWithIndexArray;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.FoldableWithIndex"] = $PS["Data.FoldableWithIndex"] || {
    };
    var exports = $PS["Data.FoldableWithIndex"];
    var Data_Foldable = $PS["Data.Foldable"];
    var Data_FunctorWithIndex = $PS["Data.FunctorWithIndex"];
    var Data_Monoid = $PS["Data.Monoid"];
    var Data_Semigroup = $PS["Data.Semigroup"];
    var Data_Tuple = $PS["Data.Tuple"];
    var foldrWithIndex = function(dict) {
        return dict.foldrWithIndex;
    };
    var foldMapWithIndexDefaultR = function(dictFoldableWithIndex) {
        return function(dictMonoid) {
            return function(f) {
                return foldrWithIndex(dictFoldableWithIndex)(function(i) {
                    return function(x) {
                        return function(acc) {
                            return Data_Semigroup.append(dictMonoid.Semigroup0())(f(i)(x))(acc);
                        };
                    };
                })(Data_Monoid.mempty(dictMonoid));
            };
        };
    };
    var foldableWithIndexArray = {
        foldrWithIndex: function(f) {
            return function(z) {
                var $166 = Data_Foldable.foldr(Data_Foldable.foldableArray)(function(v) {
                    return function(y) {
                        return f(v.value0)(v.value1)(y);
                    };
                })(z);
                var $167 = Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Data_Tuple.Tuple.create);
                return function($168) {
                    return $166($167($168));
                };
            };
        },
        foldlWithIndex: function(f) {
            return function(z) {
                var $169 = Data_Foldable.foldl(Data_Foldable.foldableArray)(function(y) {
                    return function(v) {
                        return f(v.value0)(y)(v.value1);
                    };
                })(z);
                var $170 = Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray)(Data_Tuple.Tuple.create);
                return function($171) {
                    return $169($170($171));
                };
            };
        },
        foldMapWithIndex: function(dictMonoid) {
            return foldMapWithIndexDefaultR(foldableWithIndexArray)(dictMonoid);
        },
        Foldable0: function() {
            return Data_Foldable.foldableArray;
        }
    };
    exports["foldableWithIndexArray"] = foldableWithIndexArray;
})($a63366291e3889d2$var$PS);
(function(exports) {
    // jshint maxparams: 3
    exports.traverseArrayImpl = (function() {
        function array1(a) {
            return [
                a
            ];
        }
        function array2(a) {
            return function(b) {
                return [
                    a,
                    b
                ];
            };
        }
        function array3(a) {
            return function(b) {
                return function(c) {
                    return [
                        a,
                        b,
                        c
                    ];
                };
            };
        }
        function concat2(xs) {
            return function(ys) {
                return xs.concat(ys);
            };
        }
        return function(apply) {
            return function(map) {
                return function(pure) {
                    return function(f) {
                        return function(array) {
                            function go(bot, top) {
                                switch(top - bot){
                                    case 0:
                                        return pure([]);
                                    case 1:
                                        return map(array1)(f(array[bot]));
                                    case 2:
                                        return apply(map(array2)(f(array[bot])))(f(array[bot + 1]));
                                    case 3:
                                        return apply(apply(map(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));
                                    default:
                                        // This slightly tricky pivot selection aims to produce two
                                        // even-length partitions where possible.
                                        var pivot = bot + Math.floor((top - bot) / 4) * 2;
                                        return apply(map(concat2)(go(bot, pivot)))(go(pivot, top));
                                }
                            }
                            return go(0, array.length);
                        };
                    };
                };
            };
        };
    })();
})($a63366291e3889d2$var$PS["Data.Traversable"] = $a63366291e3889d2$var$PS["Data.Traversable"] || {
});
(function($PS) {
    $PS["Data.Traversable"] = $PS["Data.Traversable"] || {
    };
    var exports = $PS["Data.Traversable"];
    var $foreign = $PS["Data.Traversable"];
    var Control_Applicative = $PS["Control.Applicative"];
    var Control_Apply = $PS["Control.Apply"];
    var Control_Category = $PS["Control.Category"];
    var Data_Foldable = $PS["Data.Foldable"];
    var Data_Functor = $PS["Data.Functor"];
    var traverse = function(dict) {
        return dict.traverse;
    };
    var sequenceDefault = function(dictTraversable) {
        return function(dictApplicative) {
            return traverse(dictTraversable)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
        };
    };
    var traversableArray = {
        traverse: function(dictApplicative) {
            return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map(dictApplicative.Apply0().Functor0()))(Control_Applicative.pure(dictApplicative));
        },
        sequence: function(dictApplicative) {
            return sequenceDefault(traversableArray)(dictApplicative);
        },
        Functor0: function() {
            return Data_Functor.functorArray;
        },
        Foldable1: function() {
            return Data_Foldable.foldableArray;
        }
    };
    var sequence = function(dict) {
        return dict.sequence;
    };
    exports["sequence"] = sequence;
    exports["traversableArray"] = traversableArray;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.TraversableWithIndex"] = $PS["Data.TraversableWithIndex"] || {
    };
    var exports = $PS["Data.TraversableWithIndex"];
    var Data_FoldableWithIndex = $PS["Data.FoldableWithIndex"];
    var Data_FunctorWithIndex = $PS["Data.FunctorWithIndex"];
    var Data_Traversable = $PS["Data.Traversable"];
    var traverseWithIndexDefault = function(dictTraversableWithIndex) {
        return function(dictApplicative) {
            return function(f) {
                var $64 = Data_Traversable.sequence(dictTraversableWithIndex.Traversable2())(dictApplicative);
                var $65 = Data_FunctorWithIndex.mapWithIndex(dictTraversableWithIndex.FunctorWithIndex0())(f);
                return function($66) {
                    return $64($65($66));
                };
            };
        };
    };
    var traverseWithIndex = function(dict) {
        return dict.traverseWithIndex;
    };
    var traversableWithIndexArray = {
        traverseWithIndex: function(dictApplicative) {
            return traverseWithIndexDefault(traversableWithIndexArray)(dictApplicative);
        },
        FunctorWithIndex0: function() {
            return Data_FunctorWithIndex.functorWithIndexArray;
        },
        FoldableWithIndex1: function() {
            return Data_FoldableWithIndex.foldableWithIndexArray;
        },
        Traversable2: function() {
            return Data_Traversable.traversableArray;
        }
    };
    exports["traverseWithIndex"] = traverseWithIndex;
    exports["traversableWithIndexArray"] = traversableWithIndexArray;
})($a63366291e3889d2$var$PS);
(function(exports) {
    // module Partial.Unsafe
    exports._unsafePartial = function(f) {
        return f();
    };
})($a63366291e3889d2$var$PS["Partial.Unsafe"] = $a63366291e3889d2$var$PS["Partial.Unsafe"] || {
});
(function(exports) {
    // module Partial
    exports._crashWith = function(msg) {
        throw new Error(msg);
    };
})($a63366291e3889d2$var$PS["Partial"] = $a63366291e3889d2$var$PS["Partial"] || {
});
(function($PS) {
    $PS["Partial"] = $PS["Partial"] || {
    };
    var exports = $PS["Partial"];
    var $foreign = $PS["Partial"];
    var crashWith = function(dictPartial) {
        return $foreign["_crashWith"];
    };
    exports["crashWith"] = crashWith;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Partial.Unsafe"] = $PS["Partial.Unsafe"] || {
    };
    var exports = $PS["Partial.Unsafe"];
    var $foreign = $PS["Partial.Unsafe"];
    var Partial = $PS["Partial"];
    var unsafePartial = $foreign["_unsafePartial"];
    var unsafeCrashWith = function(msg) {
        return unsafePartial(function(dictPartial) {
            return Partial.crashWith()(msg);
        });
    };
    exports["unsafeCrashWith"] = unsafeCrashWith;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.Variant"] = $PS["Data.Variant"] || {
    };
    var exports = $PS["Data.Variant"];
    var Data_Symbol = $PS["Data.Symbol"];
    var Partial_Unsafe = $PS["Partial.Unsafe"];
    var on = function(dictCons) {
        return function(dictIsSymbol) {
            return function(p) {
                return function(f) {
                    return function(g) {
                        return function(r) {
                            if (r.type === Data_Symbol.reflectSymbol(dictIsSymbol)(p)) return f(r.value);
                            return g(r);
                        };
                    };
                };
            };
        };
    };
    var inj = function(dictCons) {
        return function(dictIsSymbol) {
            return function(p) {
                return function(value) {
                    return {
                        type: Data_Symbol.reflectSymbol(dictIsSymbol)(p),
                        value: value
                    };
                };
            };
        };
    };
    var case_ = function(r) {
        return Partial_Unsafe.unsafeCrashWith("Data.Variant: pattern match failure [" + (r.type + "]"));
    };
    exports["inj"] = inj;
    exports["on"] = on;
    exports["case_"] = case_;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports.error = function(msg) {
        return new Error(msg);
    };
    exports.message = function(e) {
        return e.message;
    };
    exports.throwException = function(e) {
        return function() {
            throw e;
        };
    };
    exports.catchException = function(c) {
        return function(t) {
            return function() {
                try {
                    return t();
                } catch (e) {
                    if (e instanceof Error || Object.prototype.toString.call(e) === "[object Error]") return c(e)();
                    else return c(new Error(e.toString()))();
                }
            };
        };
    };
})($a63366291e3889d2$var$PS["Effect.Exception"] = $a63366291e3889d2$var$PS["Effect.Exception"] || {
});
(function($PS) {
    $PS["Effect.Exception"] = $PS["Effect.Exception"] || {
    };
    var exports = $PS["Effect.Exception"];
    var $foreign = $PS["Effect.Exception"];
    var Control_Applicative = $PS["Control.Applicative"];
    var Data_Either = $PS["Data.Either"];
    var Data_Functor = $PS["Data.Functor"];
    var Effect = $PS["Effect"];
    var $$try = function(action) {
        return $foreign.catchException(function() {
            var $0 = Control_Applicative.pure(Effect.applicativeEffect);
            return function($1) {
                return $0(Data_Either.Left.create($1));
            };
        }())(Data_Functor.map(Effect.functorEffect)(Data_Either.Right.create)(action));
    };
    var $$throw = function($2) {
        return $foreign.throwException($foreign.error($2));
    };
    exports["throw"] = $$throw;
    exports["try"] = $$try;
    exports["error"] = $foreign.error;
    exports["message"] = $foreign.message;
    exports["throwException"] = $foreign.throwException;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports.mkEffectFn3 = function mkEffectFn3(fn) {
        return function(a, b, c) {
            return fn(a)(b)(c)();
        };
    };
    exports.runEffectFn1 = function runEffectFn1(fn) {
        return function(a) {
            return function() {
                return fn(a);
            };
        };
    };
})($a63366291e3889d2$var$PS["Effect.Uncurried"] = $a63366291e3889d2$var$PS["Effect.Uncurried"] || {
});
(function($PS) {
    $PS["Effect.Uncurried"] = $PS["Effect.Uncurried"] || {
    };
    var exports = $PS["Effect.Uncurried"];
    var $foreign = $PS["Effect.Uncurried"];
    exports["mkEffectFn3"] = $foreign.mkEffectFn3;
    exports["runEffectFn1"] = $foreign.runEffectFn1;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports.unsafePerformEffect = function(f) {
        return f();
    };
})($a63366291e3889d2$var$PS["Effect.Unsafe"] = $a63366291e3889d2$var$PS["Effect.Unsafe"] || {
});
(function($PS) {
    $PS["Effect.Unsafe"] = $PS["Effect.Unsafe"] || {
    };
    var exports = $PS["Effect.Unsafe"];
    var $foreign = $PS["Effect.Unsafe"];
    exports["unsafePerformEffect"] = $foreign.unsafePerformEffect;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports.unsafeReadPropImpl = function(f, s, key, value) {
        return value == null ? f : s(value[key]);
    };
    exports.unsafeHasOwnProperty = function(prop, value) {
        return Object.prototype.hasOwnProperty.call(value, prop);
    };
    exports.unsafeHasProperty = function(prop, value) {
        return prop in value;
    };
})($a63366291e3889d2$var$PS["Foreign.Index"] = $a63366291e3889d2$var$PS["Foreign.Index"] || {
});
(function($PS) {
    $PS["Foreign.Index"] = $PS["Foreign.Index"] || {
    };
    var exports = $PS["Foreign.Index"];
    var $foreign = $PS["Foreign.Index"];
    var Control_Applicative = $PS["Control.Applicative"];
    var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
    var Data_Function = $PS["Data.Function"];
    var Foreign = $PS["Foreign"];
    var unsafeReadProp = function(dictMonad) {
        return function(k) {
            return function(value) {
                return $foreign.unsafeReadPropImpl(Foreign.fail(dictMonad)(new Foreign.TypeMismatch("object", Foreign.typeOf(value))), Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonad)), k, value);
            };
        };
    };
    var readProp = function(dictMonad) {
        return unsafeReadProp(dictMonad);
    };
    var ix = function(dict) {
        return dict.ix;
    };
    var index = function(dict) {
        return dict.index;
    };
    var indexableForeign = function(dictMonad) {
        return {
            ix: function(dictIndex) {
                return index(dictIndex);
            }
        };
    };
    var hasPropertyImpl = function(v) {
        return function(value) {
            if (Foreign.isNull(value)) return false;
            if (Foreign.isUndefined(value)) return false;
            if (Foreign.typeOf(value) === "object" || Foreign.typeOf(value) === "function") return $foreign.unsafeHasProperty(v, value);
            return false;
        };
    };
    var hasOwnPropertyImpl = function(v) {
        return function(value) {
            if (Foreign.isNull(value)) return false;
            if (Foreign.isUndefined(value)) return false;
            if (Foreign.typeOf(value) === "object" || Foreign.typeOf(value) === "function") return $foreign.unsafeHasOwnProperty(v, value);
            return false;
        };
    };
    var indexString = function(dictMonad) {
        return {
            index: Data_Function.flip(readProp(dictMonad)),
            hasProperty: hasPropertyImpl,
            hasOwnProperty: hasOwnPropertyImpl,
            errorAt: Foreign.ErrorAtProperty.create
        };
    };
    exports["readProp"] = readProp;
    exports["ix"] = ix;
    exports["indexString"] = indexString;
    exports["indexableForeign"] = indexableForeign;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports.copyRecord = function(rec) {
        var copy = {
        };
        for(var key in rec)if (({
        }).hasOwnProperty.call(rec, key)) copy[key] = rec[key];
        return copy;
    };
    exports.unsafeInsert = function(l) {
        return function(a) {
            return function(rec) {
                rec[l] = a;
                return rec;
            };
        };
    };
})($a63366291e3889d2$var$PS["Record.Builder"] = $a63366291e3889d2$var$PS["Record.Builder"] || {
});
(function($PS) {
    $PS["Record.Builder"] = $PS["Record.Builder"] || {
    };
    var exports = $PS["Record.Builder"];
    var $foreign = $PS["Record.Builder"];
    var Control_Category = $PS["Control.Category"];
    var Control_Semigroupoid = $PS["Control.Semigroupoid"];
    var Data_Symbol = $PS["Data.Symbol"];
    var semigroupoidBuilder = Control_Semigroupoid.semigroupoidFn;
    var insert = function(dictCons) {
        return function(dictLacks) {
            return function(dictIsSymbol) {
                return function(l) {
                    return function(a) {
                        return function(r1) {
                            return $foreign.unsafeInsert(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(a)(r1);
                        };
                    };
                };
            };
        };
    };
    var categoryBuilder = Control_Category.categoryFn;
    var build = function(v) {
        return function(r1) {
            return v($foreign.copyRecord(r1));
        };
    };
    exports["build"] = build;
    exports["insert"] = insert;
    exports["semigroupoidBuilder"] = semigroupoidBuilder;
    exports["categoryBuilder"] = categoryBuilder;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Simple.JSON"] = $PS["Simple.JSON"] || {
    };
    var exports = $PS["Simple.JSON"];
    var $foreign = $PS["Simple.JSON"];
    var Control_Alt = $PS["Control.Alt"];
    var Control_Applicative = $PS["Control.Applicative"];
    var Control_Apply = $PS["Control.Apply"];
    var Control_Bind = $PS["Control.Bind"];
    var Control_Category = $PS["Control.Category"];
    var Control_Monad_Except = $PS["Control.Monad.Except"];
    var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
    var Control_Semigroupoid = $PS["Control.Semigroupoid"];
    var Data_Bifunctor = $PS["Data.Bifunctor"];
    var Data_Either = $PS["Data.Either"];
    var Data_Function = $PS["Data.Function"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_Identity = $PS["Data.Identity"];
    var Data_List_Types = $PS["Data.List.Types"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Data_Semigroup = $PS["Data.Semigroup"];
    var Data_Symbol = $PS["Data.Symbol"];
    var Data_TraversableWithIndex = $PS["Data.TraversableWithIndex"];
    var Data_Variant = $PS["Data.Variant"];
    var Effect_Exception = $PS["Effect.Exception"];
    var Effect_Uncurried = $PS["Effect.Uncurried"];
    var Effect_Unsafe = $PS["Effect.Unsafe"];
    var Foreign = $PS["Foreign"];
    var Foreign_Index = $PS["Foreign.Index"];
    var Record_Builder = $PS["Record.Builder"];
    var Type_Proxy = $PS["Type.Proxy"];
    var readVariantNil = {
        readVariantImpl: function(v) {
            return function(v1) {
                return Foreign.fail(Data_Identity.monadIdentity)(new Foreign.ForeignError("Unable to match any variant member."));
            };
        }
    };
    var readVariantImpl = function(dict) {
        return dict.readVariantImpl;
    };
    var readString = {
        readImpl: Foreign.readString(Data_Identity.monadIdentity)
    };
    var readInt = {
        readImpl: Foreign.readInt(Data_Identity.monadIdentity)
    };
    var readImpl = function(dict) {
        return dict.readImpl;
    };
    var readMaybe = function(dictReadForeign) {
        return {
            readImpl: (function() {
                var readNullOrUndefined = function(v) {
                    return function(value) {
                        if (Foreign.isNull(value) || Foreign.isUndefined(value)) return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Maybe.Nothing.value);
                        return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Maybe.Just.create)(v(value));
                    };
                };
                return readNullOrUndefined(readImpl(dictReadForeign));
            })()
        };
    };
    var readForeignVariant = function(dictRowToList) {
        return function(dictReadForeignVariant) {
            return {
                readImpl: function(o) {
                    return readVariantImpl(dictReadForeignVariant)(Type_Proxy["Proxy"].value)(o);
                }
            };
        };
    };
    var readForeign = {
        readImpl: Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))
    };
    var readFieldsNil = {
        getFields: function(v) {
            return function(v1) {
                return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Control_Category.identity(Record_Builder.categoryBuilder));
            };
        }
    };
    var readBoolean = {
        readImpl: Foreign.readBoolean(Data_Identity.monadIdentity)
    };
    var readArray = function(dictReadForeign) {
        return {
            readImpl: (function() {
                var readAtIdx = function(i) {
                    return function(f) {
                        return Control_Monad_Except.withExcept(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtIndex.create(i)))(readImpl(dictReadForeign)(f));
                    };
                };
                return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_TraversableWithIndex.traverseWithIndex(Data_TraversableWithIndex.traversableWithIndexArray)(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(readAtIdx))(Foreign.readArray(Data_Identity.monadIdentity));
            })()
        };
    };
    var parseJSON = function() {
        var $108 = Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(function() {
            var $111 = Control_Applicative.pure(Data_List_Types.applicativeNonEmptyList);
            return function($112) {
                return $111(Foreign.ForeignError.create(Effect_Exception.message($112)));
            };
        }());
        var $109 = Effect_Uncurried.runEffectFn1($foreign["_parseJSON"]);
        return function($110) {
            return Control_Monad_Except_Trans.ExceptT(Data_Identity.Identity($108(Effect_Unsafe.unsafePerformEffect(Effect_Exception["try"]($109($110))))));
        };
    }();
    var readJSON = function(dictReadForeign) {
        var $113 = Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(readImpl(dictReadForeign))(parseJSON);
        return function($114) {
            return Control_Monad_Except.runExcept($113($114));
        };
    };
    var getFields = function(dict) {
        return dict.getFields;
    };
    var readRecord = function(dictRowToList) {
        return function(dictReadForeignFields) {
            return {
                readImpl: function(o) {
                    return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Function.flip(Record_Builder.build)({
                    }))(getFields(dictReadForeignFields)(Type_Proxy["Proxy"].value)(o));
                }
            };
        };
    };
    var applyEither = function(dictSemigroup) {
        return function(v) {
            return function(v1) {
                if (v instanceof Data_Either.Left && v1 instanceof Data_Either.Right) return new Data_Either.Left(v.value0);
                if (v instanceof Data_Either.Left && v1 instanceof Data_Either.Left) return new Data_Either.Left(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0));
                if (v instanceof Data_Either.Right && v1 instanceof Data_Either.Left) return new Data_Either.Left(v1.value0);
                if (v instanceof Data_Either.Right && v1 instanceof Data_Either.Right) return new Data_Either.Right(v.value0(v1.value0));
                throw new Error("Failed pattern match at Simple.JSON (line 241, column 1 - line 241, column 90): " + [
                    v.constructor.name,
                    v1.constructor.name
                ]);
            };
        };
    };
    var exceptTApply = function(dictSemigroup) {
        return function(dictApplicative) {
            return function(fun) {
                return function(a) {
                    return Control_Monad_Except_Trans.ExceptT(Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map(dictApplicative.Apply0().Functor0())(applyEither(dictSemigroup))(Control_Monad_Except_Trans.runExceptT(fun)))(Control_Monad_Except_Trans.runExceptT(a)));
                };
            };
        };
    };
    var readFieldsCons = function(dictIsSymbol) {
        return function(dictReadForeign) {
            return function(dictReadForeignFields) {
                return function(dictLacks) {
                    return function(dictCons) {
                        return {
                            getFields: function(v) {
                                return function(obj) {
                                    var rest = getFields(dictReadForeignFields)(Type_Proxy["Proxy"].value)(obj);
                                    var name = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                                    var withExcept$prime = Control_Monad_Except.withExcept(Data_Functor.map(Data_List_Types.functorNonEmptyList)(Foreign.ErrorAtProperty.create(name)));
                                    var first = Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(withExcept$prime(Control_Bind.bindFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(readImpl(dictReadForeign))(Foreign_Index.readProp(Data_Identity.monadIdentity)(name)(obj))))(function(value) {
                                        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Record_Builder.insert()()(dictIsSymbol)(Data_Symbol.SProxy.value)(value));
                                    });
                                    return exceptTApply(Data_List_Types.semigroupNonEmptyList)(Data_Identity.applicativeIdentity)(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder))(first))(rest);
                                };
                            }
                        };
                    };
                };
            };
        };
    };
    var readVariantCons = function(dictIsSymbol) {
        return function(dictReadForeign) {
            return function(dictCons) {
                return function(dictReadForeignVariant) {
                    return {
                        readVariantImpl: function(v) {
                            return function(o) {
                                var name = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                                return Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Data_List_Types.semigroupNonEmptyList)(Data_Identity.monadIdentity))(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(readImpl(readRecord()(readFieldsCons({
                                    reflectSymbol: function() {
                                        return "type";
                                    }
                                })(readString)(readFieldsCons({
                                    reflectSymbol: function() {
                                        return "value";
                                    }
                                })(readForeign)(readFieldsNil)()())()()))(o))(function(v1) {
                                    var $91 = v1.type === name;
                                    if ($91) return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(readImpl(dictReadForeign)(v1.value))(function(v2) {
                                        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Variant.inj()(dictIsSymbol)(Data_Symbol.SProxy.value)(v2));
                                    });
                                    return Foreign.fail(Data_Identity.monadIdentity)(Foreign.ForeignError.create("Did not match variant tag " + name));
                                }))(readVariantImpl(dictReadForeignVariant)(Type_Proxy["Proxy"].value)(o));
                            };
                        }
                    };
                };
            };
        };
    };
    exports["readJSON"] = readJSON;
    exports["readImpl"] = readImpl;
    exports["readInt"] = readInt;
    exports["readString"] = readString;
    exports["readBoolean"] = readBoolean;
    exports["readArray"] = readArray;
    exports["readMaybe"] = readMaybe;
    exports["readRecord"] = readRecord;
    exports["readFieldsCons"] = readFieldsCons;
    exports["readFieldsNil"] = readFieldsNil;
    exports["readForeignVariant"] = readForeignVariant;
    exports["readVariantNil"] = readVariantNil;
    exports["readVariantCons"] = readVariantCons;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Text.Parsing.StringParser"] = $PS["Text.Parsing.StringParser"] || {
    };
    var exports = $PS["Text.Parsing.StringParser"];
    var Control_Applicative = $PS["Control.Applicative"];
    var Control_Bind = $PS["Control.Bind"];
    var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
    var Data_Bifunctor = $PS["Data.Bifunctor"];
    var Data_Boolean = $PS["Data.Boolean"];
    var Data_Either = $PS["Data.Either"];
    var Data_Functor = $PS["Data.Functor"];
    var unParser = function(v) {
        return v;
    };
    var $$try = function(v) {
        return function(v1) {
            return Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(function(v2) {
                return {
                    pos: v1.pos,
                    error: v2.error
                };
            })(v(v1));
        };
    };
    var runParser = function(v) {
        return function(s) {
            return Data_Functor.map(Data_Either.functorEither)(function(v1) {
                return v1.result;
            })(v({
                str: s,
                pos: 0
            }));
        };
    };
    var functorParser = {
        map: function(f) {
            return function(v) {
                var $61 = Data_Functor.map(Data_Either.functorEither)(function(v1) {
                    return {
                        result: f(v1.result),
                        suffix: v1.suffix
                    };
                });
                return function($62) {
                    return $61(v($62));
                };
            };
        }
    };
    var fail = function(error) {
        return function(v) {
            return new Data_Either.Left({
                pos: v.pos,
                error: error
            });
        };
    };
    var applyParser = {
        apply: function(v) {
            return function(v1) {
                return function(s) {
                    return Control_Bind.bind(Data_Either.bindEither)(v(s))(function(v2) {
                        return Control_Bind.bind(Data_Either.bindEither)(v1(v2.suffix))(function(v3) {
                            return Control_Applicative.pure(Data_Either.applicativeEither)({
                                result: v2.result(v3.result),
                                suffix: v3.suffix
                            });
                        });
                    });
                };
            };
        },
        Functor0: function() {
            return functorParser;
        }
    };
    var bindParser = {
        bind: function(v) {
            return function(f) {
                return function(s) {
                    return Control_Bind.bind(Data_Either.bindEither)(v(s))(function(v1) {
                        return unParser(f(v1.result))(v1.suffix);
                    });
                };
            };
        },
        Apply0: function() {
            return applyParser;
        }
    };
    var applicativeParser = {
        pure: function(a) {
            return function(s) {
                return new Data_Either.Right({
                    result: a,
                    suffix: s
                });
            };
        },
        Apply0: function() {
            return applyParser;
        }
    };
    var monadParser = {
        Applicative0: function() {
            return applicativeParser;
        },
        Bind1: function() {
            return bindParser;
        }
    };
    var monadRecParser = {
        tailRecM: function(f) {
            return function(a) {
                var split = function(v) {
                    if (v.result instanceof Control_Monad_Rec_Class.Loop) return new Control_Monad_Rec_Class.Loop({
                        state: v.result.value0,
                        str: v.suffix
                    });
                    if (v.result instanceof Control_Monad_Rec_Class.Done) return new Control_Monad_Rec_Class.Done({
                        result: v.result.value0,
                        suffix: v.suffix
                    });
                    throw new Error("Failed pattern match at Text.Parsing.StringParser (line 90, column 7 - line 90, column 70): " + [
                        v.constructor.name
                    ]);
                };
                return function(str) {
                    return Control_Monad_Rec_Class.tailRecM(Control_Monad_Rec_Class.monadRecEither)(function(st) {
                        return Data_Functor.map(Data_Either.functorEither)(split)(unParser(f(st.state))(st.str));
                    })({
                        state: a,
                        str: str
                    });
                };
            };
        },
        Monad0: function() {
            return monadParser;
        }
    };
    var altParser = {
        alt: function(v) {
            return function(v1) {
                return function(s) {
                    var v2 = v(s);
                    if (v2 instanceof Data_Either.Left) {
                        if (s.pos === v2.value0.pos) return v1(s);
                        if (Data_Boolean.otherwise) return new Data_Either.Left({
                            error: v2.value0.error,
                            pos: v2.value0.pos
                        });
                    }
                    return v2;
                };
            };
        },
        Functor0: function() {
            return functorParser;
        }
    };
    var plusParser = {
        empty: fail("No alternative"),
        Alt0: function() {
            return altParser;
        }
    };
    var alternativeParser = {
        Applicative0: function() {
            return applicativeParser;
        },
        Plus1: function() {
            return plusParser;
        }
    };
    exports["runParser"] = runParser;
    exports["fail"] = fail;
    exports["try"] = $$try;
    exports["functorParser"] = functorParser;
    exports["applyParser"] = applyParser;
    exports["applicativeParser"] = applicativeParser;
    exports["altParser"] = altParser;
    exports["alternativeParser"] = alternativeParser;
    exports["bindParser"] = bindParser;
    exports["monadRecParser"] = monadRecParser;
})($a63366291e3889d2$var$PS);
(function(exports) {
    /* global Symbol */ var hasArrayFrom = typeof Array.from === "function";
    var hasStringIterator = typeof Symbol !== "undefined" && Symbol != null && typeof Symbol.iterator !== "undefined" && typeof String.prototype[Symbol.iterator] === "function";
    var hasFromCodePoint = typeof String.prototype.fromCodePoint === "function";
    var hasCodePointAt = typeof String.prototype.codePointAt === "function";
    exports._unsafeCodePointAt0 = function(fallback) {
        return hasCodePointAt ? function(str) {
            return str.codePointAt(0);
        } : fallback;
    };
    exports._codePointAt = function(fallback) {
        return function(Just) {
            return function(Nothing) {
                return function(unsafeCodePointAt0) {
                    return function(index) {
                        return function(str) {
                            var length = str.length;
                            if (index < 0 || index >= length) return Nothing;
                            if (hasStringIterator) {
                                var iter = str[Symbol.iterator]();
                                for(var i = index;; --i){
                                    var o = iter.next();
                                    if (o.done) return Nothing;
                                    if (i === 0) return Just(unsafeCodePointAt0(o.value));
                                }
                            }
                            return fallback(index)(str);
                        };
                    };
                };
            };
        };
    };
    exports._singleton = function(fallback) {
        return hasFromCodePoint ? String.fromCodePoint : fallback;
    };
    exports._take = function(fallback) {
        return function(n) {
            if (hasStringIterator) return function(str) {
                var accum = "";
                var iter = str[Symbol.iterator]();
                for(var i = 0; i < n; ++i){
                    var o = iter.next();
                    if (o.done) return accum;
                    accum += o.value;
                }
                return accum;
            };
            return fallback(n);
        };
    };
    exports._toCodePointArray = function(fallback) {
        return function(unsafeCodePointAt0) {
            if (hasArrayFrom) return function(str) {
                return Array.from(str, unsafeCodePointAt0);
            };
            return fallback;
        };
    };
})($a63366291e3889d2$var$PS["Data.String.CodePoints"] = $a63366291e3889d2$var$PS["Data.String.CodePoints"] || {
});
(function(exports) {
    //------------------------------------------------------------------------------
    // Array creation --------------------------------------------------------------
    //------------------------------------------------------------------------------
    exports.range = function(start) {
        return function(end) {
            var step = start > end ? -1 : 1;
            var result = new Array(step * (end - start) + 1);
            var i = start, n = 0;
            while(i !== end){
                result[n++] = i;
                i += step;
            }
            result[n] = i;
            return result;
        };
    };
    exports.fromFoldableImpl = (function() {
        function Cons(head, tail) {
            this.head = head;
            this.tail = tail;
        }
        var emptyList = {
        };
        function curryCons(head) {
            return function(tail) {
                return new Cons(head, tail);
            };
        }
        function listToArray(list) {
            var result = [];
            var count = 0;
            var xs = list;
            while(xs !== emptyList){
                result[count++] = xs.head;
                xs = xs.tail;
            }
            return result;
        }
        return function(foldr) {
            return function(xs) {
                return listToArray(foldr(curryCons)(emptyList)(xs));
            };
        };
    })();
    //------------------------------------------------------------------------------
    // Array size ------------------------------------------------------------------
    //------------------------------------------------------------------------------
    exports.length = function(xs) {
        return xs.length;
    };
    //------------------------------------------------------------------------------
    // Non-indexed reads -----------------------------------------------------------
    //------------------------------------------------------------------------------
    exports.unconsImpl = function(empty) {
        return function(next) {
            return function(xs) {
                return xs.length === 0 ? empty({
                }) : next(xs[0])(xs.slice(1));
            };
        };
    };
    exports.findIndexImpl = function(just) {
        return function(nothing) {
            return function(f) {
                return function(xs) {
                    for(var i = 0, l = xs.length; i < l; i++){
                        if (f(xs[i])) return just(i);
                    }
                    return nothing;
                };
            };
        };
    };
    exports._deleteAt = function(just) {
        return function(nothing) {
            return function(i) {
                return function(l) {
                    if (i < 0 || i >= l.length) return nothing;
                    var l1 = l.slice();
                    l1.splice(i, 1);
                    return just(l1);
                };
            };
        };
    };
    //------------------------------------------------------------------------------
    // Sorting ---------------------------------------------------------------------
    //------------------------------------------------------------------------------
    exports.sortByImpl = (function() {
        function mergeFromTo(compare, fromOrdering, xs1, xs2, from, to) {
            var mid;
            var i;
            var j;
            var k;
            var x;
            var y;
            var c;
            mid = from + (to - from >> 1);
            if (mid - from > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, from, mid);
            if (to - mid > 1) mergeFromTo(compare, fromOrdering, xs2, xs1, mid, to);
            i = from;
            j = mid;
            k = from;
            while(i < mid && j < to){
                x = xs2[i];
                y = xs2[j];
                c = fromOrdering(compare(x)(y));
                if (c > 0) {
                    xs1[k++] = y;
                    ++j;
                } else {
                    xs1[k++] = x;
                    ++i;
                }
            }
            while(i < mid)xs1[k++] = xs2[i++];
            while(j < to)xs1[k++] = xs2[j++];
        }
        return function(compare) {
            return function(fromOrdering) {
                return function(xs) {
                    var out;
                    if (xs.length < 2) return xs;
                    out = xs.slice(0);
                    mergeFromTo(compare, fromOrdering, out, xs.slice(0), 0, xs.length);
                    return out;
                };
            };
        };
    })();
    //------------------------------------------------------------------------------
    // Zipping ---------------------------------------------------------------------
    //------------------------------------------------------------------------------
    exports.zipWith = function(f) {
        return function(xs) {
            return function(ys) {
                var l = xs.length < ys.length ? xs.length : ys.length;
                var result = new Array(l);
                for(var i = 0; i < l; i++)result[i] = f(xs[i])(ys[i]);
                return result;
            };
        };
    };
    //------------------------------------------------------------------------------
    // Folding ---------------------------------------------------------------------
    //------------------------------------------------------------------------------
    exports.any = function(p) {
        return function(xs) {
            var len = xs.length;
            for(var i = 0; i < len; i++){
                if (p(xs[i])) return true;
            }
            return false;
        };
    };
    //------------------------------------------------------------------------------
    // Partial ---------------------------------------------------------------------
    //------------------------------------------------------------------------------
    exports.unsafeIndexImpl = function(xs) {
        return function(n) {
            return xs[n];
        };
    };
})($a63366291e3889d2$var$PS["Data.Array"] = $a63366291e3889d2$var$PS["Data.Array"] || {
});
(function(exports) {
    exports.pushAll = function(as) {
        return function(xs) {
            return function() {
                return xs.push.apply(xs, as);
            };
        };
    };
    exports.unsafeFreeze = function(xs) {
        return function() {
            return xs;
        };
    };
    function copyImpl(xs) {
        return function() {
            return xs.slice();
        };
    }
    exports.thaw = copyImpl;
})($a63366291e3889d2$var$PS["Data.Array.ST"] = $a63366291e3889d2$var$PS["Data.Array.ST"] || {
});
(function($PS) {
    $PS["Data.Array.ST"] = $PS["Data.Array.ST"] || {
    };
    var exports = $PS["Data.Array.ST"];
    var $foreign = $PS["Data.Array.ST"];
    var withArray = function(f) {
        return function(xs) {
            return function __do() {
                var result = $foreign.thaw(xs)();
                f(result)();
                return $foreign.unsafeFreeze(result)();
            };
        };
    };
    var push = function(a) {
        return $foreign.pushAll([
            a
        ]);
    };
    exports["withArray"] = withArray;
    exports["push"] = push;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.Array"] = $PS["Data.Array"] || {
    };
    var exports = $PS["Data.Array"];
    var $foreign = $PS["Data.Array"];
    var Control_Bind = $PS["Control.Bind"];
    var Control_Category = $PS["Control.Category"];
    var Data_Array_ST = $PS["Data.Array.ST"];
    var Data_Foldable = $PS["Data.Foldable"];
    var Data_Function = $PS["Data.Function"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Data_Ord = $PS["Data.Ord"];
    var Data_Ordering = $PS["Data.Ordering"];
    var unsafeIndex = function(dictPartial) {
        return $foreign.unsafeIndexImpl;
    };
    var tail = $foreign.unconsImpl(Data_Function["const"](Data_Maybe.Nothing.value))(function(v) {
        return function(xs) {
            return new Data_Maybe.Just(xs);
        };
    });
    var sortBy = function(comp) {
        return $foreign.sortByImpl(comp)(function(v) {
            if (v instanceof Data_Ordering.GT) return 1;
            if (v instanceof Data_Ordering.EQ) return 0;
            if (v instanceof Data_Ordering.LT) return -1;
            throw new Error("Failed pattern match at Data.Array (line 831, column 31 - line 834, column 11): " + [
                v.constructor.name
            ]);
        });
    };
    var sort = function(dictOrd) {
        return function(xs) {
            return sortBy(Data_Ord.compare(dictOrd))(xs);
        };
    };
    var snoc = function(xs) {
        return function(x) {
            return Data_Array_ST.withArray(Data_Array_ST.push(x))(xs)();
        };
    };
    var singleton = function(a) {
        return [
            a
        ];
    };
    var mapWithIndex = function(f) {
        return function(xs) {
            return $foreign.zipWith(f)($foreign.range(0)($foreign.length(xs) - 1 | 0))(xs);
        };
    };
    var fromFoldable = function(dictFoldable) {
        return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
    };
    var foldr = Data_Foldable.foldr(Data_Foldable.foldableArray);
    var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
    var find = function(f) {
        return function(xs) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(unsafeIndex()(xs))(findIndex(f)(xs));
        };
    };
    var deleteAt = $foreign["_deleteAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
    var deleteBy = function(v) {
        return function(v1) {
            return function(v2) {
                if (v2.length === 0) return [];
                return Data_Maybe.maybe(v2)(function(i) {
                    return Data_Maybe.fromJust()(deleteAt(i)(v2));
                })(findIndex(v(v1))(v2));
            };
        };
    };
    var concatMap = Data_Function.flip(Control_Bind.bind(Control_Bind.bindArray));
    var mapMaybe = function(f) {
        return concatMap(function() {
            var $109 = Data_Maybe.maybe([])(singleton);
            return function($110) {
                return $109(f($110));
            };
        }());
    };
    var catMaybes = mapMaybe(Control_Category.identity(Control_Category.categoryFn));
    exports["fromFoldable"] = fromFoldable;
    exports["snoc"] = snoc;
    exports["tail"] = tail;
    exports["find"] = find;
    exports["findIndex"] = findIndex;
    exports["concatMap"] = concatMap;
    exports["catMaybes"] = catMaybes;
    exports["mapWithIndex"] = mapWithIndex;
    exports["sort"] = sort;
    exports["sortBy"] = sortBy;
    exports["deleteBy"] = deleteBy;
    exports["length"] = $foreign.length;
    exports["any"] = $foreign.any;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports.singleton = function(c) {
        return c;
    };
    exports.length = function(s) {
        return s.length;
    };
    exports.drop = function(n) {
        return function(s) {
            return s.substring(n);
        };
    };
})($a63366291e3889d2$var$PS["Data.String.CodeUnits"] = $a63366291e3889d2$var$PS["Data.String.CodeUnits"] || {
});
(function($PS) {
    $PS["Data.String.CodeUnits"] = $PS["Data.String.CodeUnits"] || {
    };
    var exports = $PS["Data.String.CodeUnits"];
    var $foreign = $PS["Data.String.CodeUnits"];
    exports["singleton"] = $foreign.singleton;
    exports["length"] = $foreign.length;
    exports["drop"] = $foreign.drop;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports.split = function(sep) {
        return function(s) {
            return s.split(sep);
        };
    };
    exports.toUpper = function(s) {
        return s.toUpperCase();
    };
    exports.joinWith = function(s) {
        return function(xs) {
            return xs.join(s);
        };
    };
})($a63366291e3889d2$var$PS["Data.String.Common"] = $a63366291e3889d2$var$PS["Data.String.Common"] || {
});
(function($PS) {
    $PS["Data.String.Common"] = $PS["Data.String.Common"] || {
    };
    var exports = $PS["Data.String.Common"];
    var $foreign = $PS["Data.String.Common"];
    exports["split"] = $foreign.split;
    exports["toUpper"] = $foreign.toUpper;
    exports["joinWith"] = $foreign.joinWith;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports.charAt = function(i) {
        return function(s) {
            if (i >= 0 && i < s.length) return s.charAt(i);
            throw new Error("Data.String.Unsafe.charAt: Invalid index.");
        };
    };
})($a63366291e3889d2$var$PS["Data.String.Unsafe"] = $a63366291e3889d2$var$PS["Data.String.Unsafe"] || {
});
(function($PS) {
    $PS["Data.String.Unsafe"] = $PS["Data.String.Unsafe"] || {
    };
    var exports = $PS["Data.String.Unsafe"];
    var $foreign = $PS["Data.String.Unsafe"];
    exports["charAt"] = $foreign.charAt;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.String.CodePoints"] = $PS["Data.String.CodePoints"] || {
    };
    var exports = $PS["Data.String.CodePoints"];
    var $foreign = $PS["Data.String.CodePoints"];
    var Data_Array = $PS["Data.Array"];
    var Data_Boolean = $PS["Data.Boolean"];
    var Data_Bounded = $PS["Data.Bounded"];
    var Data_Enum = $PS["Data.Enum"];
    var Data_EuclideanRing = $PS["Data.EuclideanRing"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_Int = $PS["Data.Int"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Data_Ord = $PS["Data.Ord"];
    var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
    var Data_String_Common = $PS["Data.String.Common"];
    var Data_String_Unsafe = $PS["Data.String.Unsafe"];
    var Data_Tuple = $PS["Data.Tuple"];
    var Data_Unfoldable = $PS["Data.Unfoldable"];
    var CodePoint = function(x) {
        return x;
    };
    var unsurrogate = function(lead) {
        return function(trail) {
            return (((lead - 55296 | 0) * 1024 | 0) + (trail - 56320 | 0) | 0) + 65536 | 0;
        };
    };
    var showCodePoint = {
        show: function(v) {
            return "(CodePoint 0x" + (Data_String_Common.toUpper(Data_Int.toStringAs(Data_Int.hexadecimal)(v)) + ")");
        }
    };
    var isTrail = function(cu) {
        return 56320 <= cu && cu <= 57343;
    };
    var isLead = function(cu) {
        return 55296 <= cu && cu <= 56319;
    };
    var uncons = function(s) {
        var v = Data_String_CodeUnits.length(s);
        if (v === 0) return Data_Maybe.Nothing.value;
        if (v === 1) return new Data_Maybe.Just({
            head: Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s)),
            tail: ""
        });
        var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
        var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
        var $21 = isLead(cu0) && isTrail(cu1);
        if ($21) return new Data_Maybe.Just({
            head: unsurrogate(cu0)(cu1),
            tail: Data_String_CodeUnits.drop(2)(s)
        });
        return new Data_Maybe.Just({
            head: cu0,
            tail: Data_String_CodeUnits.drop(1)(s)
        });
    };
    var unconsButWithTuple = function(s) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(function(v) {
            return new Data_Tuple.Tuple(v.head, v.tail);
        })(uncons(s));
    };
    var toCodePointArrayFallback = function(s) {
        return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(unconsButWithTuple)(s);
    };
    var unsafeCodePointAt0Fallback = function(s) {
        var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
        var $25 = isLead(cu0) && Data_String_CodeUnits.length(s) > 1;
        if ($25) {
            var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
            var $26 = isTrail(cu1);
            if ($26) return unsurrogate(cu0)(cu1);
            return cu0;
        }
        return cu0;
    };
    var unsafeCodePointAt0 = $foreign["_unsafeCodePointAt0"](unsafeCodePointAt0Fallback);
    var toCodePointArray = $foreign["_toCodePointArray"](toCodePointArrayFallback)(unsafeCodePointAt0);
    var length = function($52) {
        return Data_Array.length(toCodePointArray($52));
    };
    var fromCharCode = function() {
        var $53 = Data_Enum.toEnumWithDefaults(Data_Enum.boundedEnumChar)(Data_Bounded.bottom(Data_Bounded.boundedChar))(Data_Bounded.top(Data_Bounded.boundedChar));
        return function($54) {
            return Data_String_CodeUnits.singleton($53($54));
        };
    }();
    var singletonFallback = function(v) {
        if (v <= 65535) return fromCharCode(v);
        var lead = Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 55296 | 0;
        var trail = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 56320 | 0;
        return fromCharCode(lead) + fromCharCode(trail);
    };
    var singleton = $foreign["_singleton"](singletonFallback);
    var takeFallback = function(n) {
        return function(v) {
            if (n < 1) return "";
            var v1 = uncons(v);
            if (v1 instanceof Data_Maybe.Just) return singleton(v1.value0.head) + takeFallback(n - 1 | 0)(v1.value0.tail);
            return v;
        };
    };
    var take = $foreign["_take"](takeFallback);
    var eqCodePoint = {
        eq: function(x) {
            return function(y) {
                return x === y;
            };
        }
    };
    var ordCodePoint = {
        compare: function(x) {
            return function(y) {
                return Data_Ord.compare(Data_Ord.ordInt)(x)(y);
            };
        },
        Eq0: function() {
            return eqCodePoint;
        }
    };
    var drop = function(n) {
        return function(s) {
            return Data_String_CodeUnits.drop(Data_String_CodeUnits.length(take(n)(s)))(s);
        };
    };
    var codePointFromChar = function() {
        var $55 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar);
        return function($56) {
            return CodePoint($55($56));
        };
    }();
    var codePointAtFallback = function($copy_n) {
        return function($copy_s) {
            var $tco_var_n = $copy_n;
            var $tco_done = false;
            var $tco_result;
            function $tco_loop(n, s) {
                var v = uncons(s);
                if (v instanceof Data_Maybe.Just) {
                    var $44 = n === 0;
                    if ($44) {
                        $tco_done = true;
                        return new Data_Maybe.Just(v.value0.head);
                    }
                    $tco_var_n = n - 1 | 0;
                    $copy_s = v.value0.tail;
                    return;
                }
                $tco_done = true;
                return Data_Maybe.Nothing.value;
            }
            while(!$tco_done)$tco_result = $tco_loop($tco_var_n, $copy_s);
            return $tco_result;
        };
    };
    var codePointAt = function(v) {
        return function(v1) {
            if (v < 0) return Data_Maybe.Nothing.value;
            if (v === 0 && v1 === "") return Data_Maybe.Nothing.value;
            if (v === 0) return new Data_Maybe.Just(unsafeCodePointAt0(v1));
            return $foreign["_codePointAt"](codePointAtFallback)(Data_Maybe.Just.create)(Data_Maybe.Nothing.value)(unsafeCodePointAt0)(v)(v1);
        };
    };
    var boundedCodePoint = {
        bottom: 0,
        top: 1114111,
        Ord0: function() {
            return ordCodePoint;
        }
    };
    var boundedEnumCodePoint = {
        cardinality: 1114112,
        fromEnum: function(v) {
            return v;
        },
        toEnum: function(n) {
            if (n >= 0 && n <= 1114111) return new Data_Maybe.Just(n);
            if (Data_Boolean.otherwise) return Data_Maybe.Nothing.value;
            throw new Error("Failed pattern match at Data.String.CodePoints (line 63, column 1 - line 68, column 26): " + [
                n.constructor.name
            ]);
        },
        Bounded0: function() {
            return boundedCodePoint;
        },
        Enum1: function() {
            return enumCodePoint;
        }
    };
    var enumCodePoint = {
        succ: Data_Enum.defaultSucc(Data_Enum.toEnum(boundedEnumCodePoint))(Data_Enum.fromEnum(boundedEnumCodePoint)),
        pred: Data_Enum.defaultPred(Data_Enum.toEnum(boundedEnumCodePoint))(Data_Enum.fromEnum(boundedEnumCodePoint)),
        Ord0: function() {
            return ordCodePoint;
        }
    };
    exports["codePointFromChar"] = codePointFromChar;
    exports["singleton"] = singleton;
    exports["codePointAt"] = codePointAt;
    exports["showCodePoint"] = showCodePoint;
    exports["boundedEnumCodePoint"] = boundedEnumCodePoint;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Text.Parsing.StringParser.Combinators"] = $PS["Text.Parsing.StringParser.Combinators"] || {
    };
    var exports = $PS["Text.Parsing.StringParser.Combinators"];
    var Control_Alt = $PS["Control.Alt"];
    var Control_Applicative = $PS["Control.Applicative"];
    var Control_Apply = $PS["Control.Apply"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_List = $PS["Data.List"];
    var Data_NonEmpty = $PS["Data.NonEmpty"];
    var Text_Parsing_StringParser = $PS["Text.Parsing.StringParser"];
    var withError = function(p) {
        return function(msg) {
            return Control_Alt.alt(Text_Parsing_StringParser.altParser)(p)(Text_Parsing_StringParser.fail(msg));
        };
    };
    var option = function(a) {
        return function(p) {
            return Control_Alt.alt(Text_Parsing_StringParser.altParser)(p)(Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(a));
        };
    };
    var many = Data_List.manyRec(Text_Parsing_StringParser.monadRecParser)(Text_Parsing_StringParser.alternativeParser);
    var cons$prime = function(h) {
        return function(t) {
            return new Data_NonEmpty.NonEmpty(h, t);
        };
    };
    var many1 = function(p) {
        return Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(cons$prime)(p))(many(p));
    };
    exports["many1"] = many1;
    exports["withError"] = withError;
    exports["option"] = option;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Text.Parsing.StringParser.CodePoints"] = $PS["Text.Parsing.StringParser.CodePoints"] || {
    };
    var exports = $PS["Text.Parsing.StringParser.CodePoints"];
    var Control_Applicative = $PS["Control.Applicative"];
    var Control_Bind = $PS["Control.Bind"];
    var Data_Char = $PS["Data.Char"];
    var Data_Either = $PS["Data.Either"];
    var Data_Enum = $PS["Data.Enum"];
    var Data_Eq = $PS["Data.Eq"];
    var Data_Foldable = $PS["Data.Foldable"];
    var Data_Function = $PS["Data.Function"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Data_Show = $PS["Data.Show"];
    var Data_String_CodePoints = $PS["Data.String.CodePoints"];
    var Text_Parsing_StringParser = $PS["Text.Parsing.StringParser"];
    var Text_Parsing_StringParser_Combinators = $PS["Text.Parsing.StringParser.Combinators"];
    var anyChar = function() {
        var toChar = function() {
            var $38 = Data_Enum.fromEnum(Data_String_CodePoints.boundedEnumCodePoint);
            return function($39) {
                return Data_Char.fromCharCode($38($39));
            };
        }();
        return function(v) {
            var v1 = Data_String_CodePoints.codePointAt(v.pos)(v.str);
            if (v1 instanceof Data_Maybe.Just) {
                var v2 = toChar(v1.value0);
                if (v2 instanceof Data_Maybe.Just) return new Data_Either.Right({
                    result: v2.value0,
                    suffix: {
                        str: v.str,
                        pos: v.pos + 1 | 0
                    }
                });
                if (v2 instanceof Data_Maybe.Nothing) return new Data_Either.Left({
                    pos: v.pos,
                    error: "CodePoint " + (Data_Show.show(Data_String_CodePoints.showCodePoint)(v1.value0) + " is not a character")
                });
                throw new Error("Failed pattern match at Text.Parsing.StringParser.CodePoints (line 53, column 16 - line 55, column 87): " + [
                    v2.constructor.name
                ]);
            }
            if (v1 instanceof Data_Maybe.Nothing) return new Data_Either.Left({
                pos: v.pos,
                error: "Unexpected EOF"
            });
            throw new Error("Failed pattern match at Text.Parsing.StringParser.CodePoints (line 52, column 3 - line 56, column 53): " + [
                v1.constructor.name
            ]);
        };
    }();
    var anyDigit = Text_Parsing_StringParser["try"](Control_Bind.bind(Text_Parsing_StringParser.bindParser)(anyChar)(function(c) {
        var $34 = c >= "0" && c <= "9";
        if ($34) return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(c);
        return Text_Parsing_StringParser.fail("Character " + (Data_Show.show(Data_Show.showChar)(c) + " is not a digit"));
    }));
    var satisfy = function(f) {
        return Text_Parsing_StringParser["try"](Control_Bind.bind(Text_Parsing_StringParser.bindParser)(anyChar)(function(c) {
            var $36 = f(c);
            if ($36) return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(c);
            return Text_Parsing_StringParser.fail("Character " + (Data_Show.show(Data_Show.showChar)(c) + " did not satisfy predicate"));
        }));
    };
    var $$char = function(c) {
        return Text_Parsing_StringParser_Combinators.withError(satisfy(function(v) {
            return v === c;
        }))("Could not match character " + Data_Show.show(Data_Show.showChar)(c));
    };
    var oneOf = function(dictFoldable) {
        var $42 = Data_Function.flip(Data_Foldable.elem(dictFoldable)(Data_Eq.eqChar));
        return function($43) {
            return satisfy($42($43));
        };
    };
    exports["anyDigit"] = anyDigit;
    exports["char"] = $$char;
    exports["oneOf"] = oneOf;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.Pitches.Internal"] = $PS["Data.Pitches.Internal"] || {
    };
    var exports = $PS["Data.Pitches.Internal"];
    var Control_Applicative = $PS["Control.Applicative"];
    var Control_Bind = $PS["Control.Bind"];
    var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
    var Data_Char = $PS["Data.Char"];
    var Data_Foldable = $PS["Data.Foldable"];
    var Data_Identity = $PS["Data.Identity"];
    var Data_List_Types = $PS["Data.List.Types"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Data_Pitches_Class = $PS["Data.Pitches.Class"];
    var Foreign = $PS["Foreign"];
    var Simple_JSON = $PS["Simple.JSON"];
    var Text_Parsing_StringParser = $PS["Text.Parsing.StringParser"];
    var Text_Parsing_StringParser_CodePoints = $PS["Text.Parsing.StringParser.CodePoints"];
    var Text_Parsing_StringParser_Combinators = $PS["Text.Parsing.StringParser.Combinators"];
    var readJSONviaParse = function(dictParseNotation) {
        return function(typ) {
            return function(input) {
                return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Simple_JSON.readImpl(Simple_JSON.readString)(input))(function(str) {
                    var v = Data_Pitches_Class.parseNotation(dictParseNotation)(str);
                    if (v instanceof Data_Maybe.Nothing) return Foreign.fail(Data_Identity.monadIdentity)(Foreign.ForeignError.create("Cannot parse " + (str + (" as " + (typ + "!")))));
                    if (v instanceof Data_Maybe.Just) return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(v.value0);
                    throw new Error("Failed pattern match at Data.Pitches.Internal (line 36, column 3 - line 38, column 21): " + [
                        v.constructor.name
                    ]);
                });
            };
        };
    };
    var ascii0 = Data_Char.toCharCode("0");
    var digit = function(d) {
        return Data_Char.toCharCode(d) - ascii0 | 0;
    };
    var $$parseInt = Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_Combinators.option("+")(Text_Parsing_StringParser_CodePoints["char"]("-")))(function(signChar) {
        var sign = function() {
            var $4 = signChar === "-";
            if ($4) return -1;
            return 1;
        }();
        return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_Combinators.many1(Text_Parsing_StringParser_CodePoints.anyDigit))(function(dgts) {
            return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(sign * Data_Foldable.foldl(Data_List_Types.foldableNonEmptyList)(function(acc) {
                return function(d) {
                    return (10 * acc | 0) + digit(d) | 0;
                };
            })(0)(dgts) | 0);
        });
    });
    exports["parseInt"] = $$parseInt;
    exports["readJSONviaParse"] = readJSONviaParse;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.Pitches.Spelled"] = $PS["Data.Pitches.Spelled"] || {
    };
    var exports = $PS["Data.Pitches.Spelled"];
    var Control_Alt = $PS["Control.Alt"];
    var Control_Applicative = $PS["Control.Applicative"];
    var Control_Bind = $PS["Control.Bind"];
    var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
    var Data_Boolean = $PS["Data.Boolean"];
    var Data_Char = $PS["Data.Char"];
    var Data_Either = $PS["Data.Either"];
    var Data_Eq = $PS["Data.Eq"];
    var Data_EuclideanRing = $PS["Data.EuclideanRing"];
    var Data_Foldable = $PS["Data.Foldable"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_Identity = $PS["Data.Identity"];
    var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Data_Monoid = $PS["Data.Monoid"];
    var Data_Ord = $PS["Data.Ord"];
    var Data_Ordering = $PS["Data.Ordering"];
    var Data_Pitches_Class = $PS["Data.Pitches.Class"];
    var Data_Pitches_Internal = $PS["Data.Pitches.Internal"];
    var Data_Ring = $PS["Data.Ring"];
    var Data_Show = $PS["Data.Show"];
    var Data_String_CodePoints = $PS["Data.String.CodePoints"];
    var Text_Parsing_StringParser = $PS["Text.Parsing.StringParser"];
    var Text_Parsing_StringParser_CodePoints = $PS["Text.Parsing.StringParser.CodePoints"];
    var Text_Parsing_StringParser_Combinators = $PS["Text.Parsing.StringParser.Combinators"];
    var SIC = function(x) {
        return x;
    };
    var spelled = function(fifths1) {
        return function(octaves1) {
            return {
                fifths: fifths1,
                octaves: octaves1
            };
        };
    };
    var spelledp = function(fs) {
        return function(os) {
            return Data_Pitches_Class.Pitch(spelled(fs)(os));
        };
    };
    var sic = SIC;
    var semigroupSInterval = {
        append: function(v) {
            return function(v1) {
                return spelled(v.fifths + v1.fifths | 0)(v.octaves + v1.octaves | 0);
            };
        }
    };
    var semigroupSIC = {
        append: function(v) {
            return function(v1) {
                return sic(v + v1 | 0);
            };
        }
    };
    var parseAccs = function() {
        var munch = function($134) {
            return Text_Parsing_StringParser_Combinators.many1(Text_Parsing_StringParser_CodePoints["char"]($134));
        };
        var sharps = Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_List_NonEmpty.length)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(munch("\u266f"))(munch("#")));
        var flats = Data_Functor.map(Text_Parsing_StringParser.functorParser)(function() {
            var $135 = Data_Ring.negate(Data_Ring.ringInt);
            return function($136) {
                return $135(Data_List_NonEmpty.length($136));
            };
        }())(Control_Alt.alt(Text_Parsing_StringParser.altParser)(munch("\u266d"))(munch("b")));
        return Text_Parsing_StringParser_Combinators.option(0)(Control_Alt.alt(Text_Parsing_StringParser.altParser)(sharps)(flats));
    }();
    var octaves = function(dict) {
        return dict.octaves;
    };
    var monoidSInterval = {
        mempty: spelled(0)(0),
        Semigroup0: function() {
            return semigroupSInterval;
        }
    };
    var monoidSIC = {
        mempty: sic(0),
        Semigroup0: function() {
            return semigroupSIC;
        }
    };
    var internalOctaves = function(dict) {
        return dict.internalOctaves;
    };
    var groupSInterval = {
        ginverse: function(v) {
            return spelled(-v.fifths | 0)(-v.octaves | 0);
        },
        Monoid0: function() {
            return monoidSInterval;
        }
    };
    var groupSIC = {
        ginverse: function(v) {
            return sic(-v | 0);
        },
        Monoid0: function() {
            return monoidSIC;
        }
    };
    var generic = function(dict) {
        return dict.generic;
    };
    var fifths2degree = function(fifths1) {
        return Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(fifths1 * 4 | 0)(7);
    };
    var spelledSIC = {
        fifths: function(v) {
            return v;
        },
        octaves: function(v) {
            return 0;
        },
        internalOctaves: function(v) {
            return 0;
        },
        degree: function(v) {
            return fifths2degree(v);
        },
        generic: function(v) {
            return fifths2degree(v);
        },
        diasteps: function(v) {
            return fifths2degree(v);
        },
        alteration: function(v) {
            return Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(v + 1 | 0)(7);
        }
    };
    var fifths = function(dict) {
        return dict.fifths;
    };
    var eqSInterval = {
        eq: function(x) {
            return function(y) {
                return x.fifths === y.fifths && x.octaves === y.octaves;
            };
        }
    };
    var diasteps = function(dict) {
        return dict.diasteps;
    };
    var intervalSIC = {
        octave: sic(0),
        direction: function(i) {
            var dia = diasteps(spelledSIC)(i);
            var $94 = dia === 0;
            if ($94) return Data_Ordering.EQ.value;
            var $95 = dia < 4;
            if ($95) return Data_Ordering.GT.value;
            return Data_Ordering.LT.value;
        },
        iabs: function(i) {
            if (Data_Eq.eq(Data_Ordering.eqOrdering)(Data_Pitches_Class.direction(intervalSIC)(i))(Data_Ordering.LT.value)) return Data_Pitches_Class.down(intervalSIC)(i);
            if (Data_Boolean.otherwise) return i;
            throw new Error("Failed pattern match at Data.Pitches.Spelled (line 295, column 1 - line 302, column 20): " + [
                i.constructor.name
            ]);
        },
        Group0: function() {
            return groupSIC;
        }
    };
    var degree = function(dict) {
        return dict.degree;
    };
    var spelledSInterval = {
        fifths: function(v) {
            return v.fifths;
        },
        octaves: function(v) {
            return v.octaves + Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(v.fifths * 4 | 0)(7) | 0;
        },
        internalOctaves: function(v) {
            return v.octaves;
        },
        degree: function(v) {
            return fifths2degree(v.fifths);
        },
        generic: function(i) {
            if (Data_Eq.eq(Data_Ordering.eqOrdering)(Data_Pitches_Class.direction(intervalSInterval)(i))(Data_Ordering.LT.value)) return -degree(spelledSInterval)(Data_Pitches_Class.down(intervalSInterval)(i)) | 0;
            if (Data_Boolean.otherwise) return degree(spelledSInterval)(i);
            throw new Error("Failed pattern match at Data.Pitches.Spelled (line 170, column 1 - line 179, column 47): " + [
                i.constructor.name
            ]);
        },
        diasteps: function(v) {
            return (v.fifths * 4 | 0) + (v.octaves * 7 | 0) | 0;
        },
        alteration: function(i) {
            return Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(fifths(spelledSInterval)(Data_Pitches_Class.iabs(intervalSInterval)(i)) + 1 | 0)(7);
        }
    };
    var intervalSInterval = {
        octave: spelled(0)(1),
        direction: function(i) {
            return Data_Ord.compare(Data_Ord.ordInt)(diasteps(spelledSInterval)(i))(0);
        },
        iabs: function(i) {
            if (Data_Eq.eq(Data_Ordering.eqOrdering)(Data_Pitches_Class.direction(intervalSInterval)(i))(Data_Ordering.LT.value)) return Data_Pitches_Class.down(intervalSInterval)(i);
            if (Data_Boolean.otherwise) return i;
            throw new Error("Failed pattern match at Data.Pitches.Spelled (line 193, column 1 - line 198, column 20): " + [
                i.constructor.name
            ]);
        },
        Group0: function() {
            return groupSInterval;
        }
    };
    var hasintervalclassSInterval = {
        ic: function(v) {
            return sic(v.fifths);
        },
        Interval0: function() {
            return intervalSInterval;
        },
        Interval1: function() {
            return intervalSIC;
        }
    };
    var asciiA = Data_Char.toCharCode("A");
    var letter = function(dictSpelled) {
        return function(i) {
            return Data_String_CodePoints.singleton(Data_String_CodePoints.codePointFromChar(Data_Maybe.fromMaybe("X")(Data_Char.fromCharCode(asciiA + Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(degree(dictSpelled)(i) + 2 | 0)(7) | 0))));
        };
    };
    var parseName = Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_CodePoints.oneOf(Data_Foldable.foldableArray)([
        "A",
        "B",
        "C",
        "D",
        "E",
        "F",
        "G"
    ]))(function(name) {
        var dia = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)((Data_Char.toCharCode(name) - asciiA | 0) - 2 | 0)(7);
        return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(parseAccs)(function(acc) {
            return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)((Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)((dia * 2 | 0) + 1 | 0)(7) - 1 | 0) + (7 * acc | 0) | 0);
        });
    });
    var parsenotationSPitch = {
        parsePitchNotation: function(str) {
            var parser = Control_Bind.bind(Text_Parsing_StringParser.bindParser)(parseName)(function(fs) {
                return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Data_Pitches_Internal["parseInt"])(function(os) {
                    return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(spelledp(fs)(os - Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(fs * 4 | 0)(7) | 0));
                });
            });
            return Data_Either.hush(Text_Parsing_StringParser.runParser(parser)(str));
        }
    };
    var readForeignSPitch = {
        readImplPitch: function(input) {
            return Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Data_Pitches_Class.toInterval(intervalSInterval))(Data_Pitches_Internal.readJSONviaParse(Data_Pitches_Class.parsenotationPitch(parsenotationSPitch))("spelled pitch")(input));
        }
    };
    var alteration = function(dict) {
        return dict.alteration;
    };
    var ordSInterval = {
        compare: function(i1) {
            return function(i2) {
                return Data_Ord.compare(Data_Ord.ordArray(Data_Ord.ordInt))([
                    diasteps(spelledSInterval)(i1),
                    alteration(spelledSInterval)(i1)
                ])([
                    diasteps(spelledSInterval)(i2),
                    alteration(spelledSInterval)(i2)
                ]);
            };
        },
        Eq0: function() {
            return eqSInterval;
        }
    };
    var spelledPitch = function(dictSpelled) {
        return function(dictHasIntervalClass) {
            return function(dictSpelled1) {
                return {
                    fifths: function(v) {
                        return fifths(dictSpelled)(v);
                    },
                    octaves: function(v) {
                        return octaves(dictSpelled)(v);
                    },
                    internalOctaves: function(v) {
                        return internalOctaves(dictSpelled)(v);
                    },
                    degree: function(v) {
                        return degree(dictSpelled)(v);
                    },
                    generic: function(v) {
                        return generic(dictSpelled)(v);
                    },
                    diasteps: function(v) {
                        return diasteps(dictSpelled)(v);
                    },
                    alteration: function(v) {
                        return alteration(dictSpelled1)(Data_Pitches_Class.ic(dictHasIntervalClass)(v));
                    }
                };
            };
        };
    };
    var accstr = function(n) {
        return function(lu) {
            return function(ld) {
                if (n === 0) return "";
                if (n > 0) return Data_Monoid.power(Data_Monoid.monoidString)(lu)(n);
                if (Data_Boolean.otherwise) return Data_Monoid.power(Data_Monoid.monoidString)(ld)(Data_Ord.abs(Data_Ord.ordInt)(Data_Ring.ringInt)(n));
                throw new Error("Failed pattern match at Data.Pitches.Spelled (line 86, column 1 - line 86, column 44): " + [
                    n.constructor.name,
                    lu.constructor.name,
                    ld.constructor.name
                ]);
            };
        };
    };
    var showpitchSInterval = {
        showPitch: function(i) {
            var accs = accstr(alteration(spelledPitch(spelledSInterval)(hasintervalclassSInterval)(spelledSIC))(i))("\u266f")("\u266d");
            return letter(spelledPitch(spelledSInterval)(hasintervalclassSInterval)(spelledSIC))(i) + (accs + Data_Show.show(Data_Show.showInt)(octaves(spelledPitch(spelledSInterval)(hasintervalclassSInterval)(spelledSIC))(i)));
        }
    };
    exports["octaves"] = octaves;
    exports["diasteps"] = diasteps;
    exports["alteration"] = alteration;
    exports["letter"] = letter;
    exports["eqSInterval"] = eqSInterval;
    exports["spelledSInterval"] = spelledSInterval;
    exports["ordSInterval"] = ordSInterval;
    exports["hasintervalclassSInterval"] = hasintervalclassSInterval;
    exports["spelledSIC"] = spelledSIC;
    exports["spelledPitch"] = spelledPitch;
    exports["showpitchSInterval"] = showpitchSInterval;
    exports["readForeignSPitch"] = readForeignSPitch;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["DOM.HTML.Indexed.InputType"] = $PS["DOM.HTML.Indexed.InputType"] || {
    };
    var exports = $PS["DOM.HTML.Indexed.InputType"];
    var InputButton1 = function() {
        function InputButton() {
        }
        InputButton.value = new InputButton();
        return InputButton;
    }();
    var InputCheckbox1 = function() {
        function InputCheckbox() {
        }
        InputCheckbox.value = new InputCheckbox();
        return InputCheckbox;
    }();
    var InputColor1 = function() {
        function InputColor() {
        }
        InputColor.value = new InputColor();
        return InputColor;
    }();
    var InputDate1 = function() {
        function InputDate() {
        }
        InputDate.value = new InputDate();
        return InputDate;
    }();
    var InputDatetimeLocal1 = function() {
        function InputDatetimeLocal() {
        }
        InputDatetimeLocal.value = new InputDatetimeLocal();
        return InputDatetimeLocal;
    }();
    var InputEmail1 = function() {
        function InputEmail() {
        }
        InputEmail.value = new InputEmail();
        return InputEmail;
    }();
    var InputFile1 = function() {
        function InputFile() {
        }
        InputFile.value = new InputFile();
        return InputFile;
    }();
    var InputHidden1 = function() {
        function InputHidden() {
        }
        InputHidden.value = new InputHidden();
        return InputHidden;
    }();
    var InputImage1 = function() {
        function InputImage() {
        }
        InputImage.value = new InputImage();
        return InputImage;
    }();
    var InputMonth1 = function() {
        function InputMonth() {
        }
        InputMonth.value = new InputMonth();
        return InputMonth;
    }();
    var InputNumber1 = function() {
        function InputNumber() {
        }
        InputNumber.value = new InputNumber();
        return InputNumber;
    }();
    var InputPassword1 = function() {
        function InputPassword() {
        }
        InputPassword.value = new InputPassword();
        return InputPassword;
    }();
    var InputRadio1 = function() {
        function InputRadio() {
        }
        InputRadio.value = new InputRadio();
        return InputRadio;
    }();
    var InputRange1 = function() {
        function InputRange() {
        }
        InputRange.value = new InputRange();
        return InputRange;
    }();
    var InputReset1 = function() {
        function InputReset() {
        }
        InputReset.value = new InputReset();
        return InputReset;
    }();
    var InputSearch1 = function() {
        function InputSearch() {
        }
        InputSearch.value = new InputSearch();
        return InputSearch;
    }();
    var InputSubmit1 = function() {
        function InputSubmit() {
        }
        InputSubmit.value = new InputSubmit();
        return InputSubmit;
    }();
    var InputTel1 = function() {
        function InputTel() {
        }
        InputTel.value = new InputTel();
        return InputTel;
    }();
    var InputText1 = function() {
        function InputText() {
        }
        InputText.value = new InputText();
        return InputText;
    }();
    var InputTime1 = function() {
        function InputTime() {
        }
        InputTime.value = new InputTime();
        return InputTime;
    }();
    var InputUrl1 = function() {
        function InputUrl() {
        }
        InputUrl.value = new InputUrl();
        return InputUrl;
    }();
    var InputWeek1 = function() {
        function InputWeek() {
        }
        InputWeek.value = new InputWeek();
        return InputWeek;
    }();
    var renderInputType = function(v) {
        if (v instanceof InputButton1) return "button";
        if (v instanceof InputCheckbox1) return "checkbox";
        if (v instanceof InputColor1) return "color";
        if (v instanceof InputDate1) return "date";
        if (v instanceof InputDatetimeLocal1) return "datetime-local";
        if (v instanceof InputEmail1) return "email";
        if (v instanceof InputFile1) return "file";
        if (v instanceof InputHidden1) return "hidden";
        if (v instanceof InputImage1) return "image";
        if (v instanceof InputMonth1) return "month";
        if (v instanceof InputNumber1) return "number";
        if (v instanceof InputPassword1) return "password";
        if (v instanceof InputRadio1) return "radio";
        if (v instanceof InputRange1) return "range";
        if (v instanceof InputReset1) return "reset";
        if (v instanceof InputSearch1) return "search";
        if (v instanceof InputSubmit1) return "submit";
        if (v instanceof InputTel1) return "tel";
        if (v instanceof InputText1) return "text";
        if (v instanceof InputTime1) return "time";
        if (v instanceof InputUrl1) return "url";
        if (v instanceof InputWeek1) return "week";
        throw new Error("Failed pattern match at DOM.HTML.Indexed.InputType (line 28, column 19 - line 50, column 22): " + [
            v.constructor.name
        ]);
    };
    exports["InputCheckbox"] = InputCheckbox1;
    exports["InputRange"] = InputRange1;
    exports["renderInputType"] = renderInputType;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["DOM.HTML.Indexed.StepValue"] = $PS["DOM.HTML.Indexed.StepValue"] || {
    };
    var exports = $PS["DOM.HTML.Indexed.StepValue"];
    var Data_Show = $PS["Data.Show"];
    var Any1 = function() {
        function Any() {
        }
        Any.value = new Any();
        return Any;
    }();
    var Step1 = function() {
        function Step(value0) {
            this.value0 = value0;
        }
        Step.create = function(value0) {
            return new Step(value0);
        };
        return Step;
    }();
    var renderStepValue = function(v) {
        if (v instanceof Any1) return "any";
        if (v instanceof Step1) return Data_Show.show(Data_Show.showNumber)(v.value0);
        throw new Error("Failed pattern match at DOM.HTML.Indexed.StepValue (line 10, column 19 - line 12, column 19): " + [
            v.constructor.name
        ]);
    };
    exports["Step"] = Step1;
    exports["renderStepValue"] = renderStepValue;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports["null"] = null;
    exports.nullable = function(a, r, f) {
        return a == null ? r : f(a);
    };
    exports.notNull = function(x) {
        return x;
    };
})($a63366291e3889d2$var$PS["Data.Nullable"] = $a63366291e3889d2$var$PS["Data.Nullable"] || {
});
(function($PS) {
    $PS["Data.Nullable"] = $PS["Data.Nullable"] || {
    };
    var exports = $PS["Data.Nullable"];
    var $foreign = $PS["Data.Nullable"];
    var Data_Maybe = $PS["Data.Maybe"];
    var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
    var toMaybe = function(n) {
        return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
    };
    exports["toMaybe"] = toMaybe;
    exports["toNullable"] = toNullable;
    exports["null"] = $foreign["null"];
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports._lookup = function(no, yes, k, m) {
        return k in m ? yes(m[k]) : no;
    };
})($a63366291e3889d2$var$PS["Foreign.Object"] = $a63366291e3889d2$var$PS["Foreign.Object"] || {
});
(function(exports) {
    exports.runFn4 = function(fn) {
        return function(a) {
            return function(b) {
                return function(c) {
                    return function(d) {
                        return fn(a, b, c, d);
                    };
                };
            };
        };
    };
})($a63366291e3889d2$var$PS["Data.Function.Uncurried"] = $a63366291e3889d2$var$PS["Data.Function.Uncurried"] || {
});
(function($PS) {
    $PS["Data.Function.Uncurried"] = $PS["Data.Function.Uncurried"] || {
    };
    var exports = $PS["Data.Function.Uncurried"];
    var $foreign = $PS["Data.Function.Uncurried"];
    exports["runFn4"] = $foreign.runFn4;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Foreign.Object"] = $PS["Foreign.Object"] || {
    };
    var exports = $PS["Foreign.Object"];
    var $foreign = $PS["Foreign.Object"];
    var Data_Function_Uncurried = $PS["Data.Function.Uncurried"];
    var Data_Maybe = $PS["Data.Maybe"];
    var lookup = Data_Function_Uncurried.runFn4($foreign["_lookup"])(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
    exports["lookup"] = lookup;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Halogen.VDom.Machine"] = $PS["Halogen.VDom.Machine"] || {
    };
    var exports = $PS["Halogen.VDom.Machine"];
    var Unsafe_Coerce = $PS["Unsafe.Coerce"];
    var Step2 = function() {
        function Step(value0, value1, value2, value3) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
        }
        Step.create = function(value0) {
            return function(value1) {
                return function(value2) {
                    return function(value3) {
                        return new Step(value0, value1, value2, value3);
                    };
                };
            };
        };
        return Step;
    }();
    var unStep = Unsafe_Coerce.unsafeCoerce;
    var step = function(v, a) {
        return v.value2(v.value1, a);
    };
    var mkStep = Unsafe_Coerce.unsafeCoerce;
    var halt = function(v) {
        return v.value3(v.value1);
    };
    var extract = unStep(function(v) {
        return v.value0;
    });
    exports["Step"] = Step2;
    exports["mkStep"] = mkStep;
    exports["unStep"] = unStep;
    exports["extract"] = extract;
    exports["step"] = step;
    exports["halt"] = halt;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports.unsafeGetAny = function(key, obj) {
        return obj[key];
    };
    exports.unsafeHasAny = function(key, obj) {
        return obj.hasOwnProperty(key);
    };
    exports.unsafeSetAny = function(key, val, obj) {
        obj[key] = val;
    };
    exports.forE = function(a, f) {
        var b = [];
        for(var i = 0; i < a.length; i++)b.push(f(i, a[i]));
        return b;
    };
    exports.forEachE = function(a, f) {
        for(var i = 0; i < a.length; i++)f(a[i]);
    };
    exports.forInE = function(o, f) {
        var ks = Object.keys(o);
        for(var i = 0; i < ks.length; i++){
            var k = ks[i];
            f(k, o[k]);
        }
    };
    exports.diffWithIxE = function(a1, a2, f1, f2, f3) {
        var a3 = [];
        var l1 = a1.length;
        var l2 = a2.length;
        var i = 0;
        while(true){
            if (i < l1) {
                if (i < l2) a3.push(f1(i, a1[i], a2[i]));
                else f2(i, a1[i]);
            } else if (i < l2) a3.push(f3(i, a2[i]));
            else break;
            i++;
        }
        return a3;
    };
    exports.strMapWithIxE = function(as, fk, f) {
        var o = {
        };
        for(var i = 0; i < as.length; i++){
            var a = as[i];
            var k = fk(a);
            o[k] = f(k, i, a);
        }
        return o;
    };
    exports.diffWithKeyAndIxE = function(o1, as, fk, f1, f2, f3) {
        var o2 = {
        };
        for(var i = 0; i < as.length; i++){
            var a = as[i];
            var k = fk(a);
            if (o1.hasOwnProperty(k)) o2[k] = f1(k, i, o1[k], a);
            else o2[k] = f3(k, i, a);
        }
        for(var k in o1){
            if (k in o2) continue;
            f2(k, o1[k]);
        }
        return o2;
    };
    exports.refEq = function(a, b) {
        return a === b;
    };
    exports.createTextNode = function(s, doc) {
        return doc.createTextNode(s);
    };
    exports.setTextContent = function(s, n) {
        n.textContent = s;
    };
    exports.createElement = function(ns, name, doc) {
        if (ns != null) return doc.createElementNS(ns, name);
        else return doc.createElement(name);
    };
    exports.insertChildIx = function(i, a, b) {
        var n = b.childNodes.item(i) || null;
        if (n !== a) b.insertBefore(a, n);
    };
    exports.removeChild = function(a, b) {
        if (b && a.parentNode === b) b.removeChild(a);
    };
    exports.parentNode = function(a) {
        return a.parentNode;
    };
    exports.setAttribute = function(ns, attr, val, el) {
        if (ns != null) el.setAttributeNS(ns, attr, val);
        else el.setAttribute(attr, val);
    };
    exports.removeAttribute = function(ns, attr, el) {
        if (ns != null) el.removeAttributeNS(ns, attr);
        else el.removeAttribute(attr);
    };
    exports.hasAttribute = function(ns, attr, el) {
        if (ns != null) return el.hasAttributeNS(ns, attr);
        else return el.hasAttribute(attr);
    };
    exports.addEventListener = function(ev, listener, el) {
        el.addEventListener(ev, listener, false);
    };
    exports.removeEventListener = function(ev, listener, el) {
        el.removeEventListener(ev, listener, false);
    };
    exports.jsUndefined = void 0;
})($a63366291e3889d2$var$PS["Halogen.VDom.Util"] = $a63366291e3889d2$var$PS["Halogen.VDom.Util"] || {
});
(function(exports) {
    exports["new"] = function() {
        return {
        };
    };
})($a63366291e3889d2$var$PS["Foreign.Object.ST"] = $a63366291e3889d2$var$PS["Foreign.Object.ST"] || {
});
(function($PS) {
    $PS["Foreign.Object.ST"] = $PS["Foreign.Object.ST"] || {
    };
    var exports = $PS["Foreign.Object.ST"];
    var $foreign = $PS["Foreign.Object.ST"];
    exports["new"] = $foreign["new"];
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Halogen.VDom.Util"] = $PS["Halogen.VDom.Util"] || {
    };
    var exports = $PS["Halogen.VDom.Util"];
    var $foreign = $PS["Halogen.VDom.Util"];
    var Foreign_Object_ST = $PS["Foreign.Object.ST"];
    var Unsafe_Coerce = $PS["Unsafe.Coerce"];
    var unsafeLookup = $foreign.unsafeGetAny;
    var unsafeFreeze = Unsafe_Coerce.unsafeCoerce;
    var pokeMutMap = $foreign.unsafeSetAny;
    var newMutMap = Foreign_Object_ST["new"];
    exports["newMutMap"] = newMutMap;
    exports["pokeMutMap"] = pokeMutMap;
    exports["unsafeFreeze"] = unsafeFreeze;
    exports["unsafeLookup"] = unsafeLookup;
    exports["unsafeGetAny"] = $foreign.unsafeGetAny;
    exports["unsafeHasAny"] = $foreign.unsafeHasAny;
    exports["unsafeSetAny"] = $foreign.unsafeSetAny;
    exports["forE"] = $foreign.forE;
    exports["forEachE"] = $foreign.forEachE;
    exports["forInE"] = $foreign.forInE;
    exports["diffWithIxE"] = $foreign.diffWithIxE;
    exports["diffWithKeyAndIxE"] = $foreign.diffWithKeyAndIxE;
    exports["strMapWithIxE"] = $foreign.strMapWithIxE;
    exports["refEq"] = $foreign.refEq;
    exports["createTextNode"] = $foreign.createTextNode;
    exports["setTextContent"] = $foreign.setTextContent;
    exports["createElement"] = $foreign.createElement;
    exports["insertChildIx"] = $foreign.insertChildIx;
    exports["removeChild"] = $foreign.removeChild;
    exports["parentNode"] = $foreign.parentNode;
    exports["setAttribute"] = $foreign.setAttribute;
    exports["removeAttribute"] = $foreign.removeAttribute;
    exports["hasAttribute"] = $foreign.hasAttribute;
    exports["addEventListener"] = $foreign.addEventListener;
    exports["removeEventListener"] = $foreign.removeEventListener;
    exports["jsUndefined"] = $foreign.jsUndefined;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports.eventListener = function(fn) {
        return function() {
            return function(event) {
                return fn(event)();
            };
        };
    };
    exports.addEventListener = function(type) {
        return function(listener) {
            return function(useCapture) {
                return function(target) {
                    return function() {
                        return target.addEventListener(type, listener, useCapture);
                    };
                };
            };
        };
    };
    exports.removeEventListener = function(type) {
        return function(listener) {
            return function(useCapture) {
                return function(target) {
                    return function() {
                        return target.removeEventListener(type, listener, useCapture);
                    };
                };
            };
        };
    };
})($a63366291e3889d2$var$PS["Web.Event.EventTarget"] = $a63366291e3889d2$var$PS["Web.Event.EventTarget"] || {
});
(function($PS) {
    $PS["Web.Event.EventTarget"] = $PS["Web.Event.EventTarget"] || {
    };
    var exports = $PS["Web.Event.EventTarget"];
    var $foreign = $PS["Web.Event.EventTarget"];
    exports["eventListener"] = $foreign.eventListener;
    exports["addEventListener"] = $foreign.addEventListener;
    exports["removeEventListener"] = $foreign.removeEventListener;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Halogen.VDom.DOM.Prop"] = $PS["Halogen.VDom.DOM.Prop"] || {
    };
    var exports = $PS["Halogen.VDom.DOM.Prop"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Data_Nullable = $PS["Data.Nullable"];
    var Data_Tuple = $PS["Data.Tuple"];
    var Data_Unit = $PS["Data.Unit"];
    var Effect_Ref = $PS["Effect.Ref"];
    var Foreign = $PS["Foreign"];
    var Foreign_Object = $PS["Foreign.Object"];
    var Halogen_VDom_Machine = $PS["Halogen.VDom.Machine"];
    var Halogen_VDom_Util = $PS["Halogen.VDom.Util"];
    var Unsafe_Coerce = $PS["Unsafe.Coerce"];
    var Web_Event_EventTarget = $PS["Web.Event.EventTarget"];
    var Created1 = function() {
        function Created(value0) {
            this.value0 = value0;
        }
        Created.create = function(value0) {
            return new Created(value0);
        };
        return Created;
    }();
    var Removed1 = function() {
        function Removed(value0) {
            this.value0 = value0;
        }
        Removed.create = function(value0) {
            return new Removed(value0);
        };
        return Removed;
    }();
    var Attribute1 = function() {
        function Attribute(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        }
        Attribute.create = function(value0) {
            return function(value1) {
                return function(value2) {
                    return new Attribute(value0, value1, value2);
                };
            };
        };
        return Attribute;
    }();
    var Property1 = function() {
        function Property(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        }
        Property.create = function(value0) {
            return function(value1) {
                return new Property(value0, value1);
            };
        };
        return Property;
    }();
    var Handler1 = function() {
        function Handler(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        }
        Handler.create = function(value0) {
            return function(value1) {
                return new Handler(value0, value1);
            };
        };
        return Handler;
    }();
    var Ref1 = function() {
        function Ref(value0) {
            this.value0 = value0;
        }
        Ref.create = function(value0) {
            return new Ref(value0);
        };
        return Ref;
    }();
    var unsafeGetProperty = Halogen_VDom_Util.unsafeGetAny;
    var setProperty = Halogen_VDom_Util.unsafeSetAny;
    var removeProperty = function(key, el) {
        var v = Halogen_VDom_Util.hasAttribute(Data_Nullable["null"], key, el);
        if (v) return Halogen_VDom_Util.removeAttribute(Data_Nullable["null"], key, el);
        var v1 = Foreign.typeOf(Halogen_VDom_Util.unsafeGetAny(key, el));
        if (v1 === "string") return Halogen_VDom_Util.unsafeSetAny(key, "", el);
        if (key === "rowSpan") return Halogen_VDom_Util.unsafeSetAny(key, 1, el);
        if (key === "colSpan") return Halogen_VDom_Util.unsafeSetAny(key, 1, el);
        return Halogen_VDom_Util.unsafeSetAny(key, Halogen_VDom_Util.jsUndefined, el);
    };
    var propToStrKey = function(v) {
        if (v instanceof Attribute1 && v.value0 instanceof Data_Maybe.Just) return "attr/" + (v.value0.value0 + (":" + v.value1));
        if (v instanceof Attribute1) return "attr/:" + v.value1;
        if (v instanceof Property1) return "prop/" + v.value0;
        if (v instanceof Handler1) return "handler/" + v.value0;
        if (v instanceof Ref1) return "ref";
        throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 182, column 16 - line 187, column 16): " + [
            v.constructor.name
        ]);
    };
    var propFromString = Unsafe_Coerce.unsafeCoerce;
    var propFromNumber = Unsafe_Coerce.unsafeCoerce;
    var propFromBoolean = Unsafe_Coerce.unsafeCoerce;
    var buildProp = function(emit) {
        return function(el) {
            var removeProp = function(prevEvents) {
                return function(v, v1) {
                    if (v1 instanceof Attribute1) return Halogen_VDom_Util.removeAttribute(Data_Nullable.toNullable(v1.value0), v1.value1, el);
                    if (v1 instanceof Property1) return removeProperty(v1.value0, el);
                    if (v1 instanceof Handler1) {
                        var handler = Halogen_VDom_Util.unsafeLookup(v1.value0, prevEvents);
                        return Halogen_VDom_Util.removeEventListener(v1.value0, Data_Tuple.fst(handler), el);
                    }
                    if (v1 instanceof Ref1) return Data_Unit.unit;
                    throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 169, column 5 - line 179, column 18): " + [
                        v1.constructor.name
                    ]);
                };
            };
            var mbEmit = function(v) {
                if (v instanceof Data_Maybe.Just) return emit(v.value0)();
                return Data_Unit.unit;
            };
            var haltProp = function(state) {
                var v = Foreign_Object.lookup("ref")(state.props);
                if (v instanceof Data_Maybe.Just && v.value0 instanceof Ref1) return mbEmit(v.value0.value0(new Removed1(el)));
                return Data_Unit.unit;
            };
            var diffProp = function(prevEvents, events) {
                return function(v, v1, v11, v2) {
                    if (v11 instanceof Attribute1 && v2 instanceof Attribute1) {
                        var $56 = v11.value2 === v2.value2;
                        if ($56) return v2;
                        Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el);
                        return v2;
                    }
                    if (v11 instanceof Property1 && v2 instanceof Property1) {
                        var v4 = Halogen_VDom_Util.refEq(v11.value1, v2.value1);
                        if (v4) return v2;
                        if (v2.value0 === "value") {
                            var elVal = unsafeGetProperty("value", el);
                            var $65 = Halogen_VDom_Util.refEq(elVal, v2.value1);
                            if ($65) return v2;
                            setProperty(v2.value0, v2.value1, el);
                            return v2;
                        }
                        setProperty(v2.value0, v2.value1, el);
                        return v2;
                    }
                    if (v11 instanceof Handler1 && v2 instanceof Handler1) {
                        var handler = Halogen_VDom_Util.unsafeLookup(v2.value0, prevEvents);
                        Effect_Ref.write(v2.value1)(Data_Tuple.snd(handler))();
                        Halogen_VDom_Util.pokeMutMap(v2.value0, handler, events);
                        return v2;
                    }
                    return v2;
                };
            };
            var applyProp = function(events) {
                return function(v, v1, v2) {
                    if (v2 instanceof Attribute1) {
                        Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el);
                        return v2;
                    }
                    if (v2 instanceof Property1) {
                        setProperty(v2.value0, v2.value1, el);
                        return v2;
                    }
                    if (v2 instanceof Handler1) {
                        var v3 = Halogen_VDom_Util.unsafeGetAny(v2.value0, events);
                        if (Halogen_VDom_Util.unsafeHasAny(v2.value0, events)) {
                            Effect_Ref.write(v2.value1)(Data_Tuple.snd(v3))();
                            return v2;
                        }
                        var ref = Effect_Ref["new"](v2.value1)();
                        var listener = Web_Event_EventTarget.eventListener(function(ev) {
                            return function __do() {
                                var f$prime = Effect_Ref.read(ref)();
                                return mbEmit(f$prime(ev));
                            };
                        })();
                        Halogen_VDom_Util.pokeMutMap(v2.value0, new Data_Tuple.Tuple(listener, ref), events);
                        Halogen_VDom_Util.addEventListener(v2.value0, listener, el);
                        return v2;
                    }
                    if (v2 instanceof Ref1) {
                        mbEmit(v2.value0(new Created1(el)));
                        return v2;
                    }
                    throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 113, column 5 - line 135, column 15): " + [
                        v2.constructor.name
                    ]);
                };
            };
            var patchProp = function(state, ps2) {
                var events = Halogen_VDom_Util.newMutMap();
                var onThis = removeProp(state.events);
                var onThese = diffProp(state.events, events);
                var onThat = applyProp(events);
                var props = Halogen_VDom_Util.diffWithKeyAndIxE(state.props, ps2, propToStrKey, onThese, onThis, onThat);
                var nextState = {
                    events: Halogen_VDom_Util.unsafeFreeze(events),
                    props: props
                };
                return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Data_Unit.unit, nextState, patchProp, haltProp));
            };
            var renderProp = function(ps1) {
                var events = Halogen_VDom_Util.newMutMap();
                var ps1$prime = Halogen_VDom_Util.strMapWithIxE(ps1, propToStrKey, applyProp(events));
                var state = {
                    events: Halogen_VDom_Util.unsafeFreeze(events),
                    props: ps1$prime
                };
                return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Data_Unit.unit, state, patchProp, haltProp));
            };
            return renderProp;
        };
    };
    exports["Attribute"] = Attribute1;
    exports["Property"] = Property1;
    exports["Handler"] = Handler1;
    exports["Ref"] = Ref1;
    exports["Created"] = Created1;
    exports["Removed"] = Removed1;
    exports["propFromString"] = propFromString;
    exports["propFromBoolean"] = propFromBoolean;
    exports["propFromNumber"] = propFromNumber;
    exports["buildProp"] = buildProp;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Halogen.VDom.Types"] = $PS["Halogen.VDom.Types"] || {
    };
    var exports = $PS["Halogen.VDom.Types"];
    var Data_Bifunctor = $PS["Data.Bifunctor"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_Tuple = $PS["Data.Tuple"];
    var Unsafe_Coerce = $PS["Unsafe.Coerce"];
    var Text1 = function() {
        function Text(value0) {
            this.value0 = value0;
        }
        Text.create = function(value0) {
            return new Text(value0);
        };
        return Text;
    }();
    var Elem1 = function() {
        function Elem(value0, value1, value2, value3) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
        }
        Elem.create = function(value0) {
            return function(value1) {
                return function(value2) {
                    return function(value3) {
                        return new Elem(value0, value1, value2, value3);
                    };
                };
            };
        };
        return Elem;
    }();
    var Keyed1 = function() {
        function Keyed(value0, value1, value2, value3) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
        }
        Keyed.create = function(value0) {
            return function(value1) {
                return function(value2) {
                    return function(value3) {
                        return new Keyed(value0, value1, value2, value3);
                    };
                };
            };
        };
        return Keyed;
    }();
    var Widget1 = function() {
        function Widget(value0) {
            this.value0 = value0;
        }
        Widget.create = function(value0) {
            return new Widget(value0);
        };
        return Widget;
    }();
    var Grafted1 = function() {
        function Grafted(value0) {
            this.value0 = value0;
        }
        Grafted.create = function(value0) {
            return new Grafted(value0);
        };
        return Grafted;
    }();
    var Graft1 = function() {
        function Graft(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        }
        Graft.create = function(value0) {
            return function(value1) {
                return function(value2) {
                    return new Graft(value0, value1, value2);
                };
            };
        };
        return Graft;
    }();
    var unGraft = function(f) {
        return function($52) {
            return f($52);
        };
    };
    var graft = Unsafe_Coerce.unsafeCoerce;
    var bifunctorGraft = {
        bimap: function(f) {
            return function(g) {
                return unGraft(function(v) {
                    return graft(new Graft1(function($54) {
                        return f(v.value0($54));
                    }, function($55) {
                        return g(v.value1($55));
                    }, v.value2));
                });
            };
        }
    };
    var runGraft = unGraft(function(v) {
        var go = function(v2) {
            if (v2 instanceof Text1) return new Text1(v2.value0);
            if (v2 instanceof Elem1) return new Elem1(v2.value0, v2.value1, v.value0(v2.value2), Data_Functor.map(Data_Functor.functorArray)(go)(v2.value3));
            if (v2 instanceof Keyed1) return new Keyed1(v2.value0, v2.value1, v.value0(v2.value2), Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Tuple.functorTuple)(go))(v2.value3));
            if (v2 instanceof Widget1) return new Widget1(v.value1(v2.value0));
            if (v2 instanceof Grafted1) return new Grafted1(Data_Bifunctor.bimap(bifunctorGraft)(v.value0)(v.value1)(v2.value0));
            throw new Error("Failed pattern match at Halogen.VDom.Types (line 86, column 7 - line 86, column 27): " + [
                v2.constructor.name
            ]);
        };
        return go(v.value2);
    });
    exports["Text"] = Text1;
    exports["Elem"] = Elem1;
    exports["Keyed"] = Keyed1;
    exports["Widget"] = Widget1;
    exports["Grafted"] = Grafted1;
    exports["runGraft"] = runGraft;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Halogen.HTML.Core"] = $PS["Halogen.HTML.Core"] || {
    };
    var exports = $PS["Halogen.HTML.Core"];
    var DOM_HTML_Indexed_InputType = $PS["DOM.HTML.Indexed.InputType"];
    var DOM_HTML_Indexed_StepValue = $PS["DOM.HTML.Indexed.StepValue"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Halogen_VDom_DOM_Prop = $PS["Halogen.VDom.DOM.Prop"];
    var Halogen_VDom_Types = $PS["Halogen.VDom.Types"];
    var HTML = function(x) {
        return x;
    };
    var toPropValue = function(dict) {
        return dict.toPropValue;
    };
    var text = function($20) {
        return HTML(Halogen_VDom_Types.Text.create($20));
    };
    var ref = function(f) {
        return Halogen_VDom_DOM_Prop.Ref.create(function($21) {
            return f(function(v) {
                if (v instanceof Halogen_VDom_DOM_Prop.Created) return new Data_Maybe.Just(v.value0);
                if (v instanceof Halogen_VDom_DOM_Prop.Removed) return Data_Maybe.Nothing.value;
                throw new Error("Failed pattern match at Halogen.HTML.Core (line 103, column 21 - line 105, column 23): " + [
                    v.constructor.name
                ]);
            }($21));
        });
    };
    var prop = function(dictIsProp) {
        return function(v) {
            var $22 = Halogen_VDom_DOM_Prop.Property.create(v);
            var $23 = toPropValue(dictIsProp);
            return function($24) {
                return $22($23($24));
            };
        };
    };
    var isPropString = {
        toPropValue: Halogen_VDom_DOM_Prop.propFromString
    };
    var isPropStepValue = {
        toPropValue: function($28) {
            return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_StepValue.renderStepValue($28));
        }
    };
    var isPropNumber = {
        toPropValue: Halogen_VDom_DOM_Prop.propFromNumber
    };
    var isPropInputType = {
        toPropValue: function($38) {
            return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_InputType.renderInputType($38));
        }
    };
    var isPropBoolean = {
        toPropValue: Halogen_VDom_DOM_Prop.propFromBoolean
    };
    var handler = Halogen_VDom_DOM_Prop.Handler.create;
    var element = function(ns) {
        return function(name) {
            return function(props) {
                return function(children) {
                    return new Halogen_VDom_Types.Elem(ns, name, props, children);
                };
            };
        };
    };
    var attr = function(ns) {
        return function(v) {
            return Halogen_VDom_DOM_Prop.Attribute.create(ns)(v);
        };
    };
    exports["text"] = text;
    exports["element"] = element;
    exports["prop"] = prop;
    exports["attr"] = attr;
    exports["handler"] = handler;
    exports["ref"] = ref;
    exports["isPropString"] = isPropString;
    exports["isPropNumber"] = isPropNumber;
    exports["isPropBoolean"] = isPropBoolean;
    exports["isPropInputType"] = isPropInputType;
    exports["isPropStepValue"] = isPropStepValue;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Halogen.Query.Input"] = $PS["Halogen.Query.Input"] || {
    };
    var exports = $PS["Halogen.Query.Input"];
    var RefLabel = function(x) {
        return x;
    };
    var RefUpdate1 = function() {
        function RefUpdate(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        }
        RefUpdate.create = function(value0) {
            return function(value1) {
                return new RefUpdate(value0, value1);
            };
        };
        return RefUpdate;
    }();
    var Action1 = function() {
        function Action(value0) {
            this.value0 = value0;
        }
        Action.create = function(value0) {
            return new Action(value0);
        };
        return Action;
    }();
    exports["RefLabel"] = RefLabel;
    exports["RefUpdate"] = RefUpdate1;
    exports["Action"] = Action1;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Halogen.HTML.Properties"] = $PS["Halogen.HTML.Properties"] || {
    };
    var exports = $PS["Halogen.HTML.Properties"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Data_Newtype = $PS["Data.Newtype"];
    var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
    var Halogen_Query_Input = $PS["Halogen.Query.Input"];
    var IProp = function(x) {
        return x;
    };
    var ref = function() {
        var go = function(p) {
            return function(mel) {
                return new Data_Maybe.Just(new Halogen_Query_Input.RefUpdate(p, mel));
            };
        };
        return function($9) {
            return Halogen_HTML_Core.ref(go($9));
        };
    }();
    var prop = function(dictIsProp) {
        return Halogen_HTML_Core.prop(dictIsProp);
    };
    var step = prop(Halogen_HTML_Core.isPropStepValue)("step");
    var title = prop(Halogen_HTML_Core.isPropString)("title");
    var type_ = function(dictIsProp) {
        return prop(dictIsProp)("type");
    };
    var value = prop(Halogen_HTML_Core.isPropString)("value");
    var name = prop(Halogen_HTML_Core.isPropString)("name");
    var min = prop(Halogen_HTML_Core.isPropNumber)("min");
    var max = prop(Halogen_HTML_Core.isPropNumber)("max");
    var id = prop(Halogen_HTML_Core.isPropString)("id");
    var $$for = prop(Halogen_HTML_Core.isPropString)("htmlFor");
    var disabled = prop(Halogen_HTML_Core.isPropBoolean)("disabled");
    var class_ = function() {
        var $16 = prop(Halogen_HTML_Core.isPropString)("className");
        var $17 = Data_Newtype.unwrap();
        return function($18) {
            return $16($17($18));
        };
    }();
    var checked = prop(Halogen_HTML_Core.isPropBoolean)("checked");
    var attr = Halogen_HTML_Core.attr(Data_Maybe.Nothing.value);
    var style = attr("style");
    exports["IProp"] = IProp;
    exports["ref"] = ref;
    exports["class_"] = class_;
    exports["for"] = $$for;
    exports["id"] = id;
    exports["name"] = name;
    exports["style"] = style;
    exports["title"] = title;
    exports["type_"] = type_;
    exports["value"] = value;
    exports["min"] = min;
    exports["max"] = max;
    exports["step"] = step;
    exports["disabled"] = disabled;
    exports["checked"] = checked;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Control.Monad.Trans.Class"] = $PS["Control.Monad.Trans.Class"] || {
    };
    var exports = $PS["Control.Monad.Trans.Class"];
    var lift = function(dict) {
        return dict.lift;
    };
    exports["lift"] = lift;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.Set"] = $PS["Data.Set"] || {
    };
    var exports = $PS["Data.Set"];
    var Control_Category = $PS["Control.Category"];
    var Data_Foldable = $PS["Data.Foldable"];
    var Data_List_Types = $PS["Data.List.Types"];
    var Data_Map_Internal = $PS["Data.Map.Internal"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Data_Unit = $PS["Data.Unit"];
    var union = function(dictOrd) {
        return function(v) {
            return function(v1) {
                return Data_Map_Internal.union(dictOrd)(v)(v1);
            };
        };
    };
    var toList = function(v) {
        return Data_Map_Internal.keys(v);
    };
    var singleton = function(a) {
        return Data_Map_Internal.singleton(a)(Data_Unit.unit);
    };
    var semigroupSet = function(dictOrd) {
        return {
            append: union(dictOrd)
        };
    };
    var member = function(dictOrd) {
        return function(a) {
            return function(v) {
                return Data_Map_Internal.member(dictOrd)(a)(v);
            };
        };
    };
    var insert = function(dictOrd) {
        return function(a) {
            return function(v) {
                return Data_Map_Internal.insert(dictOrd)(a)(Data_Unit.unit)(v);
            };
        };
    };
    var foldableSet = {
        foldMap: function(dictMonoid) {
            return function(f) {
                var $68 = Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f);
                return function($69) {
                    return $68(toList($69));
                };
            };
        },
        foldl: function(f) {
            return function(x) {
                var $70 = Data_Foldable.foldl(Data_List_Types.foldableList)(f)(x);
                return function($71) {
                    return $70(toList($71));
                };
            };
        },
        foldr: function(f) {
            return function(x) {
                var $72 = Data_Foldable.foldr(Data_List_Types.foldableList)(f)(x);
                return function($73) {
                    return $72(toList($73));
                };
            };
        }
    };
    var empty = Data_Map_Internal.empty;
    var fromFoldable = function(dictFoldable) {
        return function(dictOrd) {
            return Data_Foldable.foldl(dictFoldable)(function(m) {
                return function(a) {
                    return insert(dictOrd)(a)(m);
                };
            })(empty);
        };
    };
    var map = function(dictOrd) {
        return function(f) {
            return Data_Foldable.foldl(foldableSet)(function(m) {
                return function(a) {
                    return insert(dictOrd)(f(a))(m);
                };
            })(empty);
        };
    };
    var mapMaybe = function(dictOrd) {
        return function(f) {
            return Data_Foldable.foldr(foldableSet)(function(a) {
                return function(acc) {
                    return Data_Maybe.maybe(acc)(function(b) {
                        return insert(dictOrd)(b)(acc);
                    })(f(a));
                };
            })(empty);
        };
    };
    var monoidSet = function(dictOrd) {
        return {
            mempty: empty,
            Semigroup0: function() {
                return semigroupSet(dictOrd);
            }
        };
    };
    var catMaybes = function(dictOrd) {
        return mapMaybe(dictOrd)(Control_Category.identity(Control_Category.categoryFn));
    };
    exports["fromFoldable"] = fromFoldable;
    exports["empty"] = empty;
    exports["singleton"] = singleton;
    exports["map"] = map;
    exports["insert"] = insert;
    exports["member"] = member;
    exports["catMaybes"] = catMaybes;
    exports["monoidSet"] = monoidSet;
    exports["semigroupSet"] = semigroupSet;
    exports["foldableSet"] = foldableSet;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.Generic.Rep"] = $PS["Data.Generic.Rep"] || {
    };
    var exports = $PS["Data.Generic.Rep"];
    var Inl1 = function() {
        function Inl(value0) {
            this.value0 = value0;
        }
        Inl.create = function(value0) {
            return new Inl(value0);
        };
        return Inl;
    }();
    var Inr1 = function() {
        function Inr(value0) {
            this.value0 = value0;
        }
        Inr.create = function(value0) {
            return new Inr(value0);
        };
        return Inr;
    }();
    var NoArguments1 = function() {
        function NoArguments() {
        }
        NoArguments.value = new NoArguments();
        return NoArguments;
    }();
    var from = function(dict) {
        return dict.from;
    };
    exports["from"] = from;
    exports["NoArguments"] = NoArguments1;
    exports["Inl"] = Inl1;
    exports["Inr"] = Inr1;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports.intercalate = function(separator) {
        return function(xs) {
            var len = xs.length;
            if (len === 0) return "";
            var res = xs[0];
            for(var i = 1; i < len; i++)res = res + separator + xs[i];
            return res;
        };
    };
})($a63366291e3889d2$var$PS["Data.Show.Generic"] = $a63366291e3889d2$var$PS["Data.Show.Generic"] || {
});
(function($PS) {
    $PS["Data.Show.Generic"] = $PS["Data.Show.Generic"] || {
    };
    var exports = $PS["Data.Show.Generic"];
    var $foreign = $PS["Data.Show.Generic"];
    var Data_Generic_Rep = $PS["Data.Generic.Rep"];
    var Data_Semigroup = $PS["Data.Semigroup"];
    var Data_Show = $PS["Data.Show"];
    var Data_Symbol = $PS["Data.Symbol"];
    var Type_Proxy = $PS["Type.Proxy"];
    var genericShowArgsNoArguments = {
        genericShowArgs: function(v) {
            return [];
        }
    };
    var genericShowArgsArgument = function(dictShow) {
        return {
            genericShowArgs: function(v) {
                return [
                    Data_Show.show(dictShow)(v)
                ];
            }
        };
    };
    var genericShowArgs = function(dict) {
        return dict.genericShowArgs;
    };
    var genericShowConstructor = function(dictGenericShowArgs) {
        return function(dictIsSymbol) {
            return {
                "genericShow'": function(v) {
                    var ctor = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy["Proxy"].value);
                    var v1 = genericShowArgs(dictGenericShowArgs)(v);
                    if (v1.length === 0) return ctor;
                    return "(" + ($foreign.intercalate(" ")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([
                        ctor
                    ])(v1)) + ")");
                }
            };
        };
    };
    var genericShow$prime = function(dict) {
        return dict["genericShow'"];
    };
    var genericShowSum = function(dictGenericShow) {
        return function(dictGenericShow1) {
            return {
                "genericShow'": function(v) {
                    if (v instanceof Data_Generic_Rep.Inl) return genericShow$prime(dictGenericShow)(v.value0);
                    if (v instanceof Data_Generic_Rep.Inr) return genericShow$prime(dictGenericShow1)(v.value0);
                    throw new Error("Failed pattern match at Data.Show.Generic (line 26, column 1 - line 28, column 40): " + [
                        v.constructor.name
                    ]);
                }
            };
        };
    };
    var genericShow = function(dictGeneric) {
        return function(dictGenericShow) {
            return function(x) {
                return genericShow$prime(dictGenericShow)(Data_Generic_Rep.from(dictGeneric)(x));
            };
        };
    };
    exports["genericShow"] = genericShow;
    exports["genericShowArgsNoArguments"] = genericShowArgsNoArguments;
    exports["genericShowSum"] = genericShowSum;
    exports["genericShowConstructor"] = genericShowConstructor;
    exports["genericShowArgsArgument"] = genericShowArgsArgument;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["ProtoVoices.Model"] = $PS["ProtoVoices.Model"] || {
    };
    var exports = $PS["ProtoVoices.Model"];
    var Control_Alt = $PS["Control.Alt"];
    var Control_Applicative = $PS["Control.Applicative"];
    var Control_Bind = $PS["Control.Bind"];
    var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
    var Data_Array = $PS["Data.Array"];
    var Data_Boolean = $PS["Data.Boolean"];
    var Data_Either = $PS["Data.Either"];
    var Data_Eq = $PS["Data.Eq"];
    var Data_Foldable = $PS["Data.Foldable"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_Generic_Rep = $PS["Data.Generic.Rep"];
    var Data_Identity = $PS["Data.Identity"];
    var Data_List_Types = $PS["Data.List.Types"];
    var Data_Map_Internal = $PS["Data.Map.Internal"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Data_Monoid = $PS["Data.Monoid"];
    var Data_Ord = $PS["Data.Ord"];
    var Data_Ordering = $PS["Data.Ordering"];
    var Data_Pitches_Class = $PS["Data.Pitches.Class"];
    var Data_Pitches_Spelled = $PS["Data.Pitches.Spelled"];
    var Data_Semigroup = $PS["Data.Semigroup"];
    var Data_Set = $PS["Data.Set"];
    var Data_Show = $PS["Data.Show"];
    var Data_Show_Generic = $PS["Data.Show.Generic"];
    var Foreign = $PS["Foreign"];
    var Simple_JSON = $PS["Simple.JSON"];
    var TransId = function(x) {
        return x;
    };
    var Start1 = function() {
        function Start() {
        }
        Start.value = new Start();
        return Start;
    }();
    var Inner1 = function() {
        function Inner(value0) {
            this.value0 = value0;
        }
        Inner.create = function(value0) {
            return new Inner(value0);
        };
        return Inner;
    }();
    var Stop1 = function() {
        function Stop() {
        }
        Stop.value = new Stop();
        return Stop;
    }();
    var SliceId = function(x) {
        return x;
    };
    var RightRepeat1 = function() {
        function RightRepeat() {
        }
        RightRepeat.value = new RightRepeat();
        return RightRepeat;
    }();
    var RightNeighbor1 = function() {
        function RightNeighbor() {
        }
        RightNeighbor.value = new RightNeighbor();
        return RightNeighbor;
    }();
    var NoParents1 = function() {
        function NoParents() {
        }
        NoParents.value = new NoParents();
        return NoParents;
    }();
    var VertParent1 = function() {
        function VertParent(value0) {
            this.value0 = value0;
        }
        VertParent.create = function(value0) {
            return new VertParent(value0);
        };
        return VertParent;
    }();
    var MergeParents1 = function() {
        function MergeParents(value0) {
            this.value0 = value0;
        }
        MergeParents.create = function(value0) {
            return new MergeParents(value0);
        };
        return MergeParents;
    }();
    var LeftRepeat1 = function() {
        function LeftRepeat() {
        }
        LeftRepeat.value = new LeftRepeat();
        return LeftRepeat;
    }();
    var LeftNeighbor1 = function() {
        function LeftNeighbor() {
        }
        LeftNeighbor.value = new LeftNeighbor();
        return LeftNeighbor;
    }();
    var FullNeighbor1 = function() {
        function FullNeighbor() {
        }
        FullNeighbor.value = new FullNeighbor();
        return FullNeighbor;
    }();
    var FullRepeat1 = function() {
        function FullRepeat() {
        }
        FullRepeat.value = new FullRepeat();
        return FullRepeat;
    }();
    var LeftRepeatOfRight1 = function() {
        function LeftRepeatOfRight() {
        }
        LeftRepeatOfRight.value = new LeftRepeatOfRight();
        return LeftRepeatOfRight;
    }();
    var RightRepeatOfLeft1 = function() {
        function RightRepeatOfLeft() {
        }
        RightRepeatOfLeft.value = new RightRepeatOfLeft();
        return RightRepeatOfLeft;
    }();
    var PassingMid1 = function() {
        function PassingMid() {
        }
        PassingMid.value = new PassingMid();
        return PassingMid;
    }();
    var PassingLeft1 = function() {
        function PassingLeft() {
        }
        PassingLeft.value = new PassingLeft();
        return PassingLeft;
    }();
    var PassingRight1 = function() {
        function PassingRight() {
        }
        PassingRight.value = new PassingRight();
        return PassingRight;
    }();
    var NoExpl1 = function() {
        function NoExpl() {
        }
        NoExpl.value = new NoExpl();
        return NoExpl;
    }();
    var RootExpl1 = function() {
        function RootExpl() {
        }
        RootExpl.value = new RootExpl();
        return RootExpl;
    }();
    var HoriExpl1 = function() {
        function HoriExpl(value0) {
            this.value0 = value0;
        }
        HoriExpl.create = function(value0) {
            return new HoriExpl(value0);
        };
        return HoriExpl;
    }();
    var RightExpl1 = function() {
        function RightExpl(value0) {
            this.value0 = value0;
        }
        RightExpl.create = function(value0) {
            return new RightExpl(value0);
        };
        return RightExpl;
    }();
    var LeftExpl1 = function() {
        function LeftExpl(value0) {
            this.value0 = value0;
        }
        LeftExpl.create = function(value0) {
            return new LeftExpl(value0);
        };
        return LeftExpl;
    }();
    var DoubleExpl1 = function() {
        function DoubleExpl(value0) {
            this.value0 = value0;
        }
        DoubleExpl.create = function(value0) {
            return new DoubleExpl(value0);
        };
        return DoubleExpl;
    }();
    var Freeze1 = function() {
        function Freeze() {
        }
        Freeze.value = new Freeze();
        return Freeze;
    }();
    var Split1 = function() {
        function Split(value0) {
            this.value0 = value0;
        }
        Split.create = function(value0) {
            return new Split(value0);
        };
        return Split;
    }();
    var Hori1 = function() {
        function Hori(value0) {
            this.value0 = value0;
        }
        Hori.create = function(value0) {
            return new Hori(value0);
        };
        return Hori;
    }();
    var sortNotes = Data_Array.sortBy(function(a) {
        return function(b) {
            return Data_Ordering.invert(Data_Ord.compare(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval))(a.note.pitch)(b.note.pitch));
        };
    });
    var showStartStop = function(dictShow) {
        return {
            show: function(v) {
                if (v instanceof Start1) return "\u22ca";
                if (v instanceof Stop1) return "\u22c9";
                if (v instanceof Inner1) return Data_Show.show(dictShow)(v.value0);
                throw new Error("Failed pattern match at ProtoVoices.Model (line 276, column 1 - line 279, column 26): " + [
                    v.constructor.name
                ]);
            }
        };
    };
    var readForeignTransId = Simple_JSON.readInt;
    var readForeignStartStop = function(dictReadForeign) {
        return {
            readImpl: function(frgn) {
                var tryOuter = Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Simple_JSON.readImpl(Simple_JSON.readString)(frgn))(function(str) {
                    if (str === "start") return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Start1.value);
                    if (str === "stop") return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Stop1.value);
                    return Foreign.fail(Data_Identity.monadIdentity)(new Foreign.ForeignError("StartStop is neither Start nor Stop!"));
                });
                return Control_Alt.alt(Control_Monad_Except_Trans.altExceptT(Data_List_Types.semigroupNonEmptyList)(Data_Identity.monadIdentity))(tryOuter)(Data_Functor.map(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Inner1.create)(Simple_JSON.readImpl(dictReadForeign)(frgn)));
            }
        };
    };
    var readForeignSliceId = Simple_JSON.readInt;
    var ordTransId = Data_Ord.ordInt;
    var ordSliceId = Data_Ord.ordInt;
    var incT = function(v) {
        return TransId(v + 1 | 0);
    };
    var incS = function(v) {
        return SliceId(v + 1 | 0);
    };
    var getInnerNotes = function(slice) {
        if (slice.notes instanceof Start1) return [];
        if (slice.notes instanceof Stop1) return [];
        if (slice.notes instanceof Inner1) return slice.notes.value0;
        throw new Error("Failed pattern match at ProtoVoices.Model (line 386, column 23 - line 389, column 23): " + [
            slice.notes.constructor.name
        ]);
    };
    var genericRightOrnament = {
        to: function(x) {
            if (x instanceof Data_Generic_Rep.Inl) return RightRepeat1.value;
            if (x instanceof Data_Generic_Rep.Inr) return RightNeighbor1.value;
            throw new Error("Failed pattern match at ProtoVoices.Model (line 47, column 1 - line 47, column 64): " + [
                x.constructor.name
            ]);
        },
        from: function(x) {
            if (x instanceof RightRepeat1) return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
            if (x instanceof RightNeighbor1) return new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value);
            throw new Error("Failed pattern match at ProtoVoices.Model (line 47, column 1 - line 47, column 64): " + [
                x.constructor.name
            ]);
        }
    };
    var showRightOrnament = {
        show: function(ro) {
            return Data_Show_Generic.genericShow(genericRightOrnament)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
                reflectSymbol: function() {
                    return "RightRepeat";
                }
            }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
                reflectSymbol: function() {
                    return "RightNeighbor";
                }
            })))(ro);
        }
    };
    var genericNoteExplanation = {
        to: function(x) {
            if (x instanceof Data_Generic_Rep.Inl) return NoExpl1.value;
            if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) return RootExpl1.value;
            if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl) return new HoriExpl1(x.value0.value0.value0);
            if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl) return new RightExpl1(x.value0.value0.value0.value0);
            if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl) return new LeftExpl1(x.value0.value0.value0.value0.value0);
            if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr) return new DoubleExpl1(x.value0.value0.value0.value0.value0);
            throw new Error("Failed pattern match at ProtoVoices.Model (line 89, column 1 - line 89, column 68): " + [
                x.constructor.name
            ]);
        },
        from: function(x) {
            if (x instanceof NoExpl1) return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
            if (x instanceof RootExpl1) return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
            if (x instanceof HoriExpl1) return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)));
            if (x instanceof RightExpl1) return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))));
            if (x instanceof LeftExpl1) return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))));
            if (x instanceof DoubleExpl1) return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0)))));
            throw new Error("Failed pattern match at ProtoVoices.Model (line 89, column 1 - line 89, column 68): " + [
                x.constructor.name
            ]);
        }
    };
    var genericLeftOrnament = {
        to: function(x) {
            if (x instanceof Data_Generic_Rep.Inl) return LeftRepeat1.value;
            if (x instanceof Data_Generic_Rep.Inr) return LeftNeighbor1.value;
            throw new Error("Failed pattern match at ProtoVoices.Model (line 58, column 1 - line 58, column 62): " + [
                x.constructor.name
            ]);
        },
        from: function(x) {
            if (x instanceof LeftRepeat1) return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
            if (x instanceof LeftNeighbor1) return new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value);
            throw new Error("Failed pattern match at ProtoVoices.Model (line 58, column 1 - line 58, column 62): " + [
                x.constructor.name
            ]);
        }
    };
    var showLeftOrnament = {
        show: function(lo) {
            return Data_Show_Generic.genericShow(genericLeftOrnament)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
                reflectSymbol: function() {
                    return "LeftRepeat";
                }
            }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
                reflectSymbol: function() {
                    return "LeftNeighbor";
                }
            })))(lo);
        }
    };
    var genericDoubleOrnament = {
        to: function(x) {
            if (x instanceof Data_Generic_Rep.Inl) return FullNeighbor1.value;
            if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) return FullRepeat1.value;
            if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl) return LeftRepeatOfRight1.value;
            if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl) return RightRepeatOfLeft1.value;
            if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl) return PassingMid1.value;
            if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl) return PassingLeft1.value;
            if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr) return PassingRight1.value;
            throw new Error("Failed pattern match at ProtoVoices.Model (line 74, column 1 - line 74, column 66): " + [
                x.constructor.name
            ]);
        },
        from: function(x) {
            if (x instanceof FullNeighbor1) return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
            if (x instanceof FullRepeat1) return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
            if (x instanceof LeftRepeatOfRight1) return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)));
            if (x instanceof RightRepeatOfLeft1) return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))));
            if (x instanceof PassingMid1) return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)))));
            if (x instanceof PassingLeft1) return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value))))));
            if (x instanceof PassingRight1) return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value))))));
            throw new Error("Failed pattern match at ProtoVoices.Model (line 74, column 1 - line 74, column 66): " + [
                x.constructor.name
            ]);
        }
    };
    var showDoubleOrnament = {
        show: function(o) {
            return Data_Show_Generic.genericShow(genericDoubleOrnament)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
                reflectSymbol: function() {
                    return "FullNeighbor";
                }
            }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
                reflectSymbol: function() {
                    return "FullRepeat";
                }
            }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
                reflectSymbol: function() {
                    return "LeftRepeatOfRight";
                }
            }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
                reflectSymbol: function() {
                    return "RightRepeatOfLeft";
                }
            }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
                reflectSymbol: function() {
                    return "PassingMid";
                }
            }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
                reflectSymbol: function() {
                    return "PassingLeft";
                }
            }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
                reflectSymbol: function() {
                    return "PassingRight";
                }
            }))))))))(o);
        }
    };
    var showNoteExplanation = {
        show: function(o) {
            return Data_Show_Generic.genericShow(genericNoteExplanation)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
                reflectSymbol: function() {
                    return "NoExpl";
                }
            }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
                reflectSymbol: function() {
                    return "RootExpl";
                }
            }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
                reflectSymbol: function() {
                    return "id";
                }
            })(Data_Show.showRecordFieldsCons({
                reflectSymbol: function() {
                    return "pitch";
                }
            })(Data_Show.showRecordFieldsNil)(Data_Pitches_Class.showPitchInst(Data_Pitches_Spelled.showpitchSInterval)))(Data_Show.showString))))({
                reflectSymbol: function() {
                    return "HoriExpl";
                }
            }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
                reflectSymbol: function() {
                    return "leftParent";
                }
            })(Data_Show.showRecordFieldsCons({
                reflectSymbol: function() {
                    return "orn";
                }
            })(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(showRightOrnament)))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
                reflectSymbol: function() {
                    return "id";
                }
            })(Data_Show.showRecordFieldsCons({
                reflectSymbol: function() {
                    return "pitch";
                }
            })(Data_Show.showRecordFieldsNil)(Data_Pitches_Class.showPitchInst(Data_Pitches_Spelled.showpitchSInterval)))(Data_Show.showString))))))({
                reflectSymbol: function() {
                    return "RightExpl";
                }
            }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
                reflectSymbol: function() {
                    return "orn";
                }
            })(Data_Show.showRecordFieldsCons({
                reflectSymbol: function() {
                    return "rightParent";
                }
            })(Data_Show.showRecordFieldsNil)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
                reflectSymbol: function() {
                    return "id";
                }
            })(Data_Show.showRecordFieldsCons({
                reflectSymbol: function() {
                    return "pitch";
                }
            })(Data_Show.showRecordFieldsNil)(Data_Pitches_Class.showPitchInst(Data_Pitches_Spelled.showpitchSInterval)))(Data_Show.showString))))(Data_Maybe.showMaybe(showLeftOrnament)))))({
                reflectSymbol: function() {
                    return "LeftExpl";
                }
            }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
                reflectSymbol: function() {
                    return "leftParent";
                }
            })(Data_Show.showRecordFieldsCons({
                reflectSymbol: function() {
                    return "orn";
                }
            })(Data_Show.showRecordFieldsCons({
                reflectSymbol: function() {
                    return "rightParent";
                }
            })(Data_Show.showRecordFieldsNil)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
                reflectSymbol: function() {
                    return "id";
                }
            })(Data_Show.showRecordFieldsCons({
                reflectSymbol: function() {
                    return "pitch";
                }
            })(Data_Show.showRecordFieldsNil)(Data_Pitches_Class.showPitchInst(Data_Pitches_Spelled.showpitchSInterval)))(Data_Show.showString))))(Data_Maybe.showMaybe(showDoubleOrnament)))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
                reflectSymbol: function() {
                    return "id";
                }
            })(Data_Show.showRecordFieldsCons({
                reflectSymbol: function() {
                    return "pitch";
                }
            })(Data_Show.showRecordFieldsNil)(Data_Pitches_Class.showPitchInst(Data_Pitches_Spelled.showpitchSInterval)))(Data_Show.showString))))))({
                reflectSymbol: function() {
                    return "DoubleExpl";
                }
            })))))))(o);
        }
    };
    var functorStartStop = {
        map: function(f) {
            return function(m) {
                if (m instanceof Start1) return Start1.value;
                if (m instanceof Inner1) return new Inner1(f(m.value0));
                if (m instanceof Stop1) return Stop1.value;
                throw new Error("Failed pattern match at ProtoVoices.Model (line 272, column 1 - line 272, column 54): " + [
                    m.constructor.name
                ]);
            };
        }
    };
    var explHasParent = function(id) {
        return function(v) {
            if (v instanceof NoExpl1) return false;
            if (v instanceof RootExpl1) return false;
            if (v instanceof HoriExpl1) return v.value0.id === id;
            if (v instanceof RightExpl1) return v.value0.leftParent.id === id;
            if (v instanceof LeftExpl1) return v.value0.rightParent.id === id;
            if (v instanceof DoubleExpl1) return v.value0.leftParent.id === id || v.value0.rightParent.id === id;
            throw new Error("Failed pattern match at ProtoVoices.Model (line 252, column 20 - line 258, column 88): " + [
                v.constructor.name
            ]);
        };
    };
    var eqStartStop = function(dictEq) {
        return {
            eq: function(x) {
                return function(y) {
                    if (x instanceof Start1 && y instanceof Start1) return true;
                    if (x instanceof Inner1 && y instanceof Inner1) return Data_Eq.eq(dictEq)(x.value0)(y.value0);
                    if (x instanceof Stop1 && y instanceof Stop1) return true;
                    return false;
                };
            }
        };
    };
    var ordStartStop = function(dictOrd) {
        return {
            compare: function(x) {
                return function(y) {
                    if (x instanceof Start1 && y instanceof Start1) return Data_Ordering.EQ.value;
                    if (x instanceof Start1) return Data_Ordering.LT.value;
                    if (y instanceof Start1) return Data_Ordering.GT.value;
                    if (x instanceof Inner1 && y instanceof Inner1) return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
                    if (x instanceof Inner1) return Data_Ordering.LT.value;
                    if (y instanceof Inner1) return Data_Ordering.GT.value;
                    if (x instanceof Stop1 && y instanceof Stop1) return Data_Ordering.EQ.value;
                    throw new Error("Failed pattern match at ProtoVoices.Model (line 274, column 1 - line 274, column 61): " + [
                        x.constructor.name,
                        y.constructor.name
                    ]);
                };
            },
            Eq0: function() {
                return eqStartStop(dictOrd.Eq0());
            }
        };
    };
    var horiEdgesLeft = function(edgesl) {
        return function(slicel) {
            var v = function(v1) {
                if (Data_Boolean.otherwise) return edgesl;
                throw new Error("Failed pattern match at ProtoVoices.Model (line 669, column 1 - line 669, column 41): " + [
                    edgesl.constructor.name,
                    slicel.constructor.name
                ]);
            };
            if (slicel.notes instanceof Inner1) {
                var replaceRight = function(v1) {
                    var v2 = function(v3) {
                        if (Data_Boolean.otherwise) return Data_Maybe.Nothing.value;
                        throw new Error("Failed pattern match at ProtoVoices.Model (line 669, column 1 - line 669, column 41): " + [
                            v1.constructor.name
                        ]);
                    };
                    if (v1.right instanceof Inner1) {
                        var $500 = Data_Array.find(function(n) {
                            if (n.expl instanceof HoriExpl1) return n.expl.value0.id === v1.right.value0.id;
                            return false;
                        })(slicel.notes.value0);
                        if ($500 instanceof Data_Maybe.Just) return new Data_Maybe.Just({
                            left: v1.left,
                            right: new Inner1($500.value0.note)
                        });
                        return v2(true);
                    }
                    return v2(true);
                };
                return {
                    regular: Data_Set.catMaybes(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Data_Ord.ordString)))))()({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Data_Ord.ordString))))))(Data_Set.map(Data_Maybe.ordMaybe(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Data_Ord.ordString)))))()({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Data_Ord.ordString)))))))(replaceRight)(edgesl.regular)),
                    passing: Data_Array.catMaybes(Data_Functor.map(Data_Functor.functorArray)(replaceRight)(edgesl.passing))
                };
            }
            return v(true);
        };
    };
    var horiEdgesRight = function(slicer) {
        return function(edgesr) {
            var v = function(v1) {
                if (Data_Boolean.otherwise) return edgesr;
                throw new Error("Failed pattern match at ProtoVoices.Model (line 690, column 1 - line 690, column 42): " + [
                    slicer.constructor.name,
                    edgesr.constructor.name
                ]);
            };
            if (slicer.notes instanceof Inner1) {
                var replaceLeft = function(v1) {
                    var v2 = function(v3) {
                        if (Data_Boolean.otherwise) return Data_Maybe.Nothing.value;
                        throw new Error("Failed pattern match at ProtoVoices.Model (line 690, column 1 - line 690, column 42): " + [
                            v1.constructor.name
                        ]);
                    };
                    if (v1.left instanceof Inner1) {
                        var $518 = Data_Array.find(function(n) {
                            if (n.expl instanceof HoriExpl1) return n.expl.value0.id === v1.left.value0.id;
                            return false;
                        })(slicer.notes.value0);
                        if ($518 instanceof Data_Maybe.Just) return new Data_Maybe.Just({
                            left: new Inner1($518.value0.note),
                            right: v1.right
                        });
                        return v2(true);
                    }
                    return v2(true);
                };
                return {
                    regular: Data_Set.catMaybes(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Data_Ord.ordString)))))()({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Data_Ord.ordString))))))(Data_Set.map(Data_Maybe.ordMaybe(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Data_Ord.ordString)))))()({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Data_Ord.ordString)))))))(replaceLeft)(edgesr.regular)),
                    passing: Data_Array.catMaybes(Data_Functor.map(Data_Functor.functorArray)(replaceLeft)(edgesr.passing))
                };
            }
            return v(true);
        };
    };
    var vertEdgesLeft = function(edges) {
        return function(slice) {
            var v = function(v1) {
                if (Data_Boolean.otherwise) return new Data_Either.Left("The current reduction is invalid: Trying to vert a Start or Stop slice.");
                throw new Error("Failed pattern match at ProtoVoices.Model (line 635, column 1 - line 635, column 55): " + [
                    edges.constructor.name,
                    slice.constructor.name
                ]);
            };
            if (slice.notes instanceof Inner1) {
                var replaceRight = function(v1) {
                    var v2 = function(v3) {
                        if (Data_Boolean.otherwise) return Data_Maybe.Nothing.value;
                        throw new Error("Failed pattern match at ProtoVoices.Model (line 635, column 1 - line 635, column 55): " + [
                            v1.constructor.name
                        ]);
                    };
                    if (v1.right instanceof Inner1) {
                        var $537 = Data_Array.find(function(n) {
                            return n.note.id === v1.right.value0.id;
                        })(slice.notes.value0);
                        if ($537 instanceof Data_Maybe.Just) {
                            if ($537.value0.expl instanceof HoriExpl1) return new Data_Maybe.Just({
                                left: v1.left,
                                right: new Inner1($537.value0.expl.value0)
                            });
                            return v2(true);
                        }
                        return v2(true);
                    }
                    return v2(true);
                };
                return Data_Either.Right.create({
                    regular: Data_Set.catMaybes(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Data_Ord.ordString)))))()({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Data_Ord.ordString))))))(Data_Set.map(Data_Maybe.ordMaybe(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Data_Ord.ordString)))))()({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Data_Ord.ordString)))))))(replaceRight)(edges.regular)),
                    passing: Data_Array.catMaybes(Data_Functor.map(Data_Functor.functorArray)(replaceRight)(edges.passing))
                });
            }
            return v(true);
        };
    };
    var vertEdgesRight = function(edges) {
        return function(slice) {
            var v = function(v1) {
                if (Data_Boolean.otherwise) return new Data_Either.Left("The current reduction is invalid: Trying to vert a Start or Stop slice.");
                throw new Error("Failed pattern match at ProtoVoices.Model (line 652, column 1 - line 652, column 56): " + [
                    edges.constructor.name,
                    slice.constructor.name
                ]);
            };
            if (slice.notes instanceof Inner1) {
                var replaceLeft = function(v1) {
                    var v2 = function(v3) {
                        if (Data_Boolean.otherwise) return Data_Maybe.Nothing.value;
                        throw new Error("Failed pattern match at ProtoVoices.Model (line 652, column 1 - line 652, column 56): " + [
                            v1.constructor.name
                        ]);
                    };
                    if (v1.left instanceof Inner1) {
                        var $555 = Data_Array.find(function(n) {
                            return n.note.id === v1.left.value0.id;
                        })(slice.notes.value0);
                        if ($555 instanceof Data_Maybe.Just) {
                            if ($555.value0.expl instanceof HoriExpl1) return new Data_Maybe.Just({
                                left: new Inner1($555.value0.expl.value0),
                                right: v1.right
                            });
                            return v2(true);
                        }
                        return v2(true);
                    }
                    return v2(true);
                };
                return Data_Either.Right.create({
                    regular: Data_Set.catMaybes(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Data_Ord.ordString)))))()({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Data_Ord.ordString))))))(Data_Set.map(Data_Maybe.ordMaybe(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Data_Ord.ordString)))))()({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Data_Ord.ordString)))))))(replaceLeft)(edges.regular)),
                    passing: Data_Array.catMaybes(Data_Functor.map(Data_Functor.functorArray)(replaceLeft)(edges.passing))
                });
            }
            return v(true);
        };
    };
    var eqRightOrnament = {
        eq: function(x) {
            return function(y) {
                if (x instanceof RightRepeat1 && y instanceof RightRepeat1) return true;
                if (x instanceof RightNeighbor1 && y instanceof RightNeighbor1) return true;
                return false;
            };
        }
    };
    var eqLeftOrnament = {
        eq: function(x) {
            return function(y) {
                if (x instanceof LeftRepeat1 && y instanceof LeftRepeat1) return true;
                if (x instanceof LeftNeighbor1 && y instanceof LeftNeighbor1) return true;
                return false;
            };
        }
    };
    var eqDoubleOrnament = {
        eq: function(x) {
            return function(y) {
                if (x instanceof FullNeighbor1 && y instanceof FullNeighbor1) return true;
                if (x instanceof FullRepeat1 && y instanceof FullRepeat1) return true;
                if (x instanceof LeftRepeatOfRight1 && y instanceof LeftRepeatOfRight1) return true;
                if (x instanceof RightRepeatOfLeft1 && y instanceof RightRepeatOfLeft1) return true;
                if (x instanceof PassingMid1 && y instanceof PassingMid1) return true;
                if (x instanceof PassingLeft1 && y instanceof PassingLeft1) return true;
                if (x instanceof PassingRight1 && y instanceof PassingRight1) return true;
                return false;
            };
        }
    };
    var eqNoteExplanation = {
        eq: function(x) {
            return function(y) {
                if (x instanceof NoExpl1 && y instanceof NoExpl1) return true;
                if (x instanceof RootExpl1 && y instanceof RootExpl1) return true;
                if (x instanceof HoriExpl1 && y instanceof HoriExpl1) return x.value0.id === y.value0.id && Data_Eq.eq(Data_Pitches_Class.eqPitch(Data_Pitches_Spelled.eqSInterval))(x.value0.pitch)(y.value0.pitch);
                if (x instanceof RightExpl1 && y instanceof RightExpl1) return x.value0.leftParent.id === y.value0.leftParent.id && Data_Eq.eq(Data_Pitches_Class.eqPitch(Data_Pitches_Spelled.eqSInterval))(x.value0.leftParent.pitch)(y.value0.leftParent.pitch) && Data_Eq.eq(Data_Maybe.eqMaybe(eqRightOrnament))(x.value0.orn)(y.value0.orn);
                if (x instanceof LeftExpl1 && y instanceof LeftExpl1) return Data_Eq.eq(Data_Maybe.eqMaybe(eqLeftOrnament))(x.value0.orn)(y.value0.orn) && x.value0.rightParent.id === y.value0.rightParent.id && Data_Eq.eq(Data_Pitches_Class.eqPitch(Data_Pitches_Spelled.eqSInterval))(x.value0.rightParent.pitch)(y.value0.rightParent.pitch);
                if (x instanceof DoubleExpl1 && y instanceof DoubleExpl1) return x.value0.leftParent.id === y.value0.leftParent.id && Data_Eq.eq(Data_Pitches_Class.eqPitch(Data_Pitches_Spelled.eqSInterval))(x.value0.leftParent.pitch)(y.value0.leftParent.pitch) && Data_Eq.eq(Data_Maybe.eqMaybe(eqDoubleOrnament))(x.value0.orn)(y.value0.orn) && x.value0.rightParent.id === y.value0.rightParent.id && Data_Eq.eq(Data_Pitches_Class.eqPitch(Data_Pitches_Spelled.eqSInterval))(x.value0.rightParent.pitch)(y.value0.rightParent.pitch);
                return false;
            };
        }
    };
    var emptyEdges = Data_Monoid.mempty(Data_Monoid.monoidRecord()(Data_Monoid.monoidRecordCons({
        reflectSymbol: function() {
            return "passing";
        }
    })(Data_Monoid.monoidArray)()(Data_Monoid.monoidRecordCons({
        reflectSymbol: function() {
            return "regular";
        }
    })(Data_Set.monoidSet(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
        reflectSymbol: function() {
            return "right";
        }
    })(ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
        reflectSymbol: function() {
            return "pitch";
        }
    })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
        reflectSymbol: function() {
            return "id";
        }
    })(Data_Ord.ordString)))))()({
        reflectSymbol: function() {
            return "left";
        }
    })(ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
        reflectSymbol: function() {
            return "pitch";
        }
    })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
        reflectSymbol: function() {
            return "id";
        }
    })(Data_Ord.ordString)))))))()(Data_Monoid.monoidRecordNil))));
    var explLeftEdge = function(v) {
        var edge = function(l) {
            return Data_Set.singleton({
                left: new Inner1(l),
                right: new Inner1(v.note)
            });
        };
        if (v.expl instanceof DoubleExpl1) {
            if (v.expl.value0.orn instanceof Data_Maybe.Just && v.expl.value0.orn.value0 instanceof PassingRight1) return {
                regular: emptyEdges.regular,
                passing: [
                    {
                        left: new Inner1(v.expl.value0.leftParent),
                        right: new Inner1(v.note)
                    }
                ]
            };
            return {
                regular: edge(v.expl.value0.leftParent),
                passing: emptyEdges.passing
            };
        }
        if (v.expl instanceof RightExpl1) return {
            regular: edge(v.expl.value0.leftParent),
            passing: emptyEdges.passing
        };
        if (v.expl instanceof RootExpl1) return {
            regular: Data_Set.singleton({
                left: Start1.value,
                right: new Inner1(v.note)
            }),
            passing: emptyEdges.passing
        };
        return emptyEdges;
    };
    var explParentEdge = function(v) {
        if (v instanceof DoubleExpl1) {
            var parentEdge = {
                left: new Inner1(v.value0.leftParent),
                right: new Inner1(v.value0.rightParent)
            };
            if (v.value0.orn instanceof Data_Maybe.Just && v.value0.orn.value0 instanceof PassingMid1) return {
                regular: emptyEdges.regular,
                passing: [
                    parentEdge
                ]
            };
            if (v.value0.orn instanceof Data_Maybe.Just && v.value0.orn.value0 instanceof PassingLeft1) return {
                regular: emptyEdges.regular,
                passing: [
                    parentEdge
                ]
            };
            if (v.value0.orn instanceof Data_Maybe.Just && v.value0.orn.value0 instanceof PassingRight1) return {
                regular: emptyEdges.regular,
                passing: [
                    parentEdge
                ]
            };
            return {
                regular: Data_Set.singleton(parentEdge),
                passing: emptyEdges.passing
            };
        }
        if (v instanceof RootExpl1) return {
            regular: Data_Set.singleton({
                left: Start1.value,
                right: Stop1.value
            }),
            passing: emptyEdges.passing
        };
        return emptyEdges;
    };
    var explRightEdge = function(v) {
        var edge = function(r) {
            return Data_Set.singleton({
                left: new Inner1(v.note),
                right: new Inner1(r)
            });
        };
        if (v.expl instanceof DoubleExpl1) {
            if (v.expl.value0.orn instanceof Data_Maybe.Just && v.expl.value0.orn.value0 instanceof PassingLeft1) return {
                regular: emptyEdges.regular,
                passing: [
                    {
                        left: new Inner1(v.note),
                        right: new Inner1(v.expl.value0.rightParent)
                    }
                ]
            };
            return {
                regular: edge(v.expl.value0.rightParent),
                passing: emptyEdges.passing
            };
        }
        if (v.expl instanceof LeftExpl1) return {
            regular: edge(v.expl.value0.rightParent),
            passing: emptyEdges.passing
        };
        if (v.expl instanceof RootExpl1) return {
            regular: Data_Set.singleton({
                left: new Inner1(v.note),
                right: Stop1.value
            }),
            passing: emptyEdges.passing
        };
        return emptyEdges;
    };
    var horiEdgesMid = function(slicel) {
        return function(edges) {
            return function(slicer) {
                var toLeft = Data_Foldable.foldl(Data_Foldable.foldableArray)(function(acc) {
                    return function(left) {
                        if (left.expl instanceof HoriExpl1) return Data_Map_Internal.insert(Data_Ord.ordString)(left.expl.value0.id)(left.note)(acc);
                        return acc;
                    };
                })(Data_Map_Internal.empty)(getInnerNotes(slicel));
                var toBoth = Data_Foldable.foldl(Data_Foldable.foldableArray)(function(acc) {
                    return function(right) {
                        if (right.expl instanceof HoriExpl1) {
                            var v = Data_Map_Internal.lookup(Data_Ord.ordString)(right.expl.value0.id)(toLeft);
                            if (v instanceof Data_Maybe.Just) return Data_Set.insert(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                                reflectSymbol: function() {
                                    return "right";
                                }
                            })(ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                                reflectSymbol: function() {
                                    return "pitch";
                                }
                            })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                                reflectSymbol: function() {
                                    return "id";
                                }
                            })(Data_Ord.ordString)))))()({
                                reflectSymbol: function() {
                                    return "left";
                                }
                            })(ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                                reflectSymbol: function() {
                                    return "pitch";
                                }
                            })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                                reflectSymbol: function() {
                                    return "id";
                                }
                            })(Data_Ord.ordString))))))({
                                left: new Inner1(v.value0),
                                right: new Inner1(right.note)
                            })(acc);
                            if (v instanceof Data_Maybe.Nothing) return acc;
                            throw new Error("Failed pattern match at ProtoVoices.Model (line 725, column 30 - line 727, column 27): " + [
                                v.constructor.name
                            ]);
                        }
                        return acc;
                    };
                })(Data_Set.empty)(getInnerNotes(slicer));
                return Data_Semigroup.append(Data_Semigroup.semigroupRecord()(Data_Semigroup.semigroupRecordCons({
                    reflectSymbol: function() {
                        return "passing";
                    }
                })()(Data_Semigroup.semigroupRecordCons({
                    reflectSymbol: function() {
                        return "regular";
                    }
                })()(Data_Semigroup.semigroupRecordNil)(Data_Set.semigroupSet(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                    reflectSymbol: function() {
                        return "right";
                    }
                })(ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                    reflectSymbol: function() {
                        return "pitch";
                    }
                })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                    reflectSymbol: function() {
                        return "id";
                    }
                })(Data_Ord.ordString)))))()({
                    reflectSymbol: function() {
                        return "left";
                    }
                })(ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                    reflectSymbol: function() {
                        return "pitch";
                    }
                })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                    reflectSymbol: function() {
                        return "id";
                    }
                })(Data_Ord.ordString))))))))(Data_Semigroup.semigroupArray)))(edges)({
                    regular: toBoth,
                    passing: emptyEdges.passing
                });
            };
        };
    };
    var parentEdges = function(v) {
        if (v.notes instanceof Inner1) return Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Monoid.monoidRecord()(Data_Monoid.monoidRecordCons({
            reflectSymbol: function() {
                return "passing";
            }
        })(Data_Monoid.monoidArray)()(Data_Monoid.monoidRecordCons({
            reflectSymbol: function() {
                return "regular";
            }
        })(Data_Set.monoidSet(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
            reflectSymbol: function() {
                return "right";
            }
        })(ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
            reflectSymbol: function() {
                return "pitch";
            }
        })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
            reflectSymbol: function() {
                return "id";
            }
        })(Data_Ord.ordString)))))()({
            reflectSymbol: function() {
                return "left";
            }
        })(ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
            reflectSymbol: function() {
                return "pitch";
            }
        })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
            reflectSymbol: function() {
                return "id";
            }
        })(Data_Ord.ordString)))))))()(Data_Monoid.monoidRecordNil))))(explParentEdge)(Data_Functor.map(Data_Functor.functorArray)(function(v1) {
            return v1.expl;
        })(v.notes.value0));
        return emptyEdges;
    };
    var detachSegment = function(v) {
        return {
            trans: v.trans,
            op: v.op
        };
    };
    var attachSegment = function(v) {
        return function(rslice) {
            return {
                trans: v.trans,
                op: v.op,
                rslice: rslice
            };
        };
    };
    exports["RightRepeat"] = RightRepeat1;
    exports["RightNeighbor"] = RightNeighbor1;
    exports["LeftRepeat"] = LeftRepeat1;
    exports["LeftNeighbor"] = LeftNeighbor1;
    exports["FullNeighbor"] = FullNeighbor1;
    exports["FullRepeat"] = FullRepeat1;
    exports["LeftRepeatOfRight"] = LeftRepeatOfRight1;
    exports["RightRepeatOfLeft"] = RightRepeatOfLeft1;
    exports["PassingMid"] = PassingMid1;
    exports["PassingLeft"] = PassingLeft1;
    exports["PassingRight"] = PassingRight1;
    exports["NoExpl"] = NoExpl1;
    exports["RootExpl"] = RootExpl1;
    exports["HoriExpl"] = HoriExpl1;
    exports["RightExpl"] = RightExpl1;
    exports["LeftExpl"] = LeftExpl1;
    exports["DoubleExpl"] = DoubleExpl1;
    exports["explLeftEdge"] = explLeftEdge;
    exports["explRightEdge"] = explRightEdge;
    exports["parentEdges"] = parentEdges;
    exports["explHasParent"] = explHasParent;
    exports["Start"] = Start1;
    exports["Inner"] = Inner1;
    exports["Stop"] = Stop1;
    exports["sortNotes"] = sortNotes;
    exports["incS"] = incS;
    exports["incT"] = incT;
    exports["NoParents"] = NoParents1;
    exports["VertParent"] = VertParent1;
    exports["MergeParents"] = MergeParents1;
    exports["getInnerNotes"] = getInnerNotes;
    exports["Freeze"] = Freeze1;
    exports["Split"] = Split1;
    exports["Hori"] = Hori1;
    exports["attachSegment"] = attachSegment;
    exports["detachSegment"] = detachSegment;
    exports["vertEdgesLeft"] = vertEdgesLeft;
    exports["vertEdgesRight"] = vertEdgesRight;
    exports["horiEdgesLeft"] = horiEdgesLeft;
    exports["horiEdgesRight"] = horiEdgesRight;
    exports["horiEdgesMid"] = horiEdgesMid;
    exports["eqNoteExplanation"] = eqNoteExplanation;
    exports["showNoteExplanation"] = showNoteExplanation;
    exports["eqStartStop"] = eqStartStop;
    exports["functorStartStop"] = functorStartStop;
    exports["ordStartStop"] = ordStartStop;
    exports["showStartStop"] = showStartStop;
    exports["readForeignStartStop"] = readForeignStartStop;
    exports["ordSliceId"] = ordSliceId;
    exports["readForeignSliceId"] = readForeignSliceId;
    exports["ordTransId"] = ordTransId;
    exports["readForeignTransId"] = readForeignTransId;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["ProtoVoices.Leftmost"] = $PS["ProtoVoices.Leftmost"] || {
    };
    var exports = $PS["ProtoVoices.Leftmost"];
    var Control_Applicative = $PS["Control.Applicative"];
    var Control_Bind = $PS["Control.Bind"];
    var Data_Array = $PS["Data.Array"];
    var Data_Either = $PS["Data.Either"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_Map_Internal = $PS["Data.Map.Internal"];
    var Data_Semigroup = $PS["Data.Semigroup"];
    var Data_Traversable = $PS["Data.Traversable"];
    var Data_Unfoldable = $PS["Data.Unfoldable"];
    var ProtoVoices_Model = $PS["ProtoVoices.Model"];
    var RootNote1 = function() {
        function RootNote() {
        }
        RootNote.value = new RootNote();
        return RootNote;
    }();
    var LMSplitLeft1 = function() {
        function LMSplitLeft(value0) {
            this.value0 = value0;
        }
        LMSplitLeft.create = function(value0) {
            return new LMSplitLeft(value0);
        };
        return LMSplitLeft;
    }();
    var LMFreezeLeft1 = function() {
        function LMFreezeLeft(value0) {
            this.value0 = value0;
        }
        LMFreezeLeft.create = function(value0) {
            return new LMFreezeLeft(value0);
        };
        return LMFreezeLeft;
    }();
    var LMSplitRight1 = function() {
        function LMSplitRight(value0) {
            this.value0 = value0;
        }
        LMSplitRight.create = function(value0) {
            return new LMSplitRight(value0);
        };
        return LMSplitRight;
    }();
    var LMHorizontalize1 = function() {
        function LMHorizontalize(value0) {
            this.value0 = value0;
        }
        LMHorizontalize.create = function(value0) {
            return new LMHorizontalize(value0);
        };
        return LMHorizontalize;
    }();
    var LMSplitOnly1 = function() {
        function LMSplitOnly(value0) {
            this.value0 = value0;
        }
        LMSplitOnly.create = function(value0) {
            return new LMSplitOnly(value0);
        };
        return LMSplitOnly;
    }();
    var LMFreezeOnly1 = function() {
        function LMFreezeOnly(value0) {
            this.value0 = value0;
        }
        LMFreezeOnly.create = function(value0) {
            return new LMFreezeOnly(value0);
        };
        return LMFreezeOnly;
    }();
    var LeftChild1 = function() {
        function LeftChild(value0) {
            this.value0 = value0;
        }
        LeftChild.create = function(value0) {
            return new LeftChild(value0);
        };
        return LeftChild;
    }();
    var RightChild1 = function() {
        function RightChild(value0) {
            this.value0 = value0;
        }
        RightChild.create = function(value0) {
            return new RightChild(value0);
        };
        return RightChild;
    }();
    var BothChildren1 = function() {
        function BothChildren(value0) {
            this.value0 = value0;
        }
        BothChildren.create = function(value0) {
            return new BothChildren(value0);
        };
        return BothChildren;
    }();
    var TooManyChildren1 = function() {
        function TooManyChildren(value0) {
            this.value0 = value0;
        }
        TooManyChildren.create = function(value0) {
            return new TooManyChildren(value0);
        };
        return TooManyChildren;
    }();
    var horiRightChildren = function(v) {
        var unexpl = Data_Functor.map(Data_Functor.functorArray)(function(note) {
            return {
                note: note,
                expl: ProtoVoices_Model.NoExpl.value
            };
        })(v.unexplained.right);
        var getChild = function(v1) {
            if (v1.value1 instanceof RightChild1) return [
                {
                    note: v1.value1.value0,
                    expl: new ProtoVoices_Model.HoriExpl(v1.value0)
                }
            ];
            if (v1.value1 instanceof LeftChild1) return [];
            if (v1.value1 instanceof BothChildren1) return [
                {
                    note: v1.value1.value0.right,
                    expl: new ProtoVoices_Model.HoriExpl(v1.value0)
                }
            ];
            if (v1.value1 instanceof TooManyChildren1) return Data_Functor.map(Data_Functor.functorArray)(function(v2) {
                return {
                    note: v2,
                    expl: new ProtoVoices_Model.HoriExpl(v1.value0)
                };
            })(v1.value1.value0.right);
            throw new Error("Failed pattern match at ProtoVoices.Leftmost (line 154, column 34 - line 158, column 78): " + [
                v1.value1.constructor.name
            ]);
        };
        var explained = Data_Array.concatMap(getChild)(Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray)(v.children));
        return ProtoVoices_Model.sortNotes(Data_Semigroup.append(Data_Semigroup.semigroupArray)(unexpl)(explained));
    };
    var horiLeftChildren = function(v) {
        var unexpl = Data_Functor.map(Data_Functor.functorArray)(function(note) {
            return {
                note: note,
                expl: ProtoVoices_Model.NoExpl.value
            };
        })(v.unexplained.left);
        var getChild = function(v1) {
            if (v1.value1 instanceof LeftChild1) return [
                {
                    note: v1.value1.value0,
                    expl: new ProtoVoices_Model.HoriExpl(v1.value0)
                }
            ];
            if (v1.value1 instanceof RightChild1) return [];
            if (v1.value1 instanceof BothChildren1) return [
                {
                    note: v1.value1.value0.left,
                    expl: new ProtoVoices_Model.HoriExpl(v1.value0)
                }
            ];
            if (v1.value1 instanceof TooManyChildren1) return Data_Functor.map(Data_Functor.functorArray)(function(v2) {
                return {
                    note: v2,
                    expl: new ProtoVoices_Model.HoriExpl(v1.value0)
                };
            })(v1.value1.value0.left);
            throw new Error("Failed pattern match at ProtoVoices.Leftmost (line 141, column 34 - line 145, column 76): " + [
                v1.value1.constructor.name
            ]);
        };
        var explained = Data_Array.concatMap(getChild)(Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray)(v.children));
        return ProtoVoices_Model.sortNotes(Data_Semigroup.append(Data_Semigroup.semigroupArray)(unexpl)(explained));
    };
    var extractChildNotes = function(splits) {
        return function(f) {
            return Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Control_Bind.bind(Control_Bind.bindArray)(Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray)(splits))(function(v) {
                return Control_Bind.bind(Control_Bind.bindArray)(v.value1)(function(child) {
                    return Control_Applicative.pure(Control_Applicative.applicativeArray)(function() {
                        var v1 = f(v.value0)(child.orn);
                        if (v1 instanceof Data_Either.Left) return new Data_Either.Left(v1.value0);
                        if (v1 instanceof Data_Either.Right) return new Data_Either.Right({
                            note: child.child,
                            expl: v1.value0
                        });
                        throw new Error("Failed pattern match at ProtoVoices.Leftmost (line 68, column 10 - line 70, column 54): " + [
                            v1.constructor.name
                        ]);
                    }());
                });
            }));
        };
    };
    var splitGetChildNotes = function(v) {
        return Control_Bind.bind(Data_Either.bindEither)(extractChildNotes(v.regular)(function(p) {
            return function(o) {
                if (o instanceof Data_Either.Left) return new Data_Either.Right(ProtoVoices_Model.RootExpl.value);
                if (o instanceof Data_Either.Right) {
                    if (p.left instanceof ProtoVoices_Model.Inner) {
                        if (p.right instanceof ProtoVoices_Model.Inner) return Data_Either.Right.create(new ProtoVoices_Model.DoubleExpl({
                            leftParent: p.left.value0,
                            rightParent: p.right.value0,
                            orn: o.value0
                        }));
                        return new Data_Either.Left("Parent note cannot be Start or Stop!");
                    }
                    return new Data_Either.Left("Parent note cannot be Start or Stop!");
                }
                throw new Error("Failed pattern match at ProtoVoices.Leftmost (line 75, column 41 - line 81, column 57): " + [
                    o.constructor.name
                ]);
            };
        }))(function(regular) {
            return Control_Bind.bind(Data_Either.bindEither)(extractChildNotes(v.passing)(function(p) {
                return function(orn) {
                    if (p.left instanceof ProtoVoices_Model.Inner) {
                        if (p.right instanceof ProtoVoices_Model.Inner) return Data_Either.Right.create(new ProtoVoices_Model.DoubleExpl({
                            leftParent: p.left.value0,
                            rightParent: p.right.value0,
                            orn: orn
                        }));
                        return new Data_Either.Left("Parent note cannot be Start or Stop!");
                    }
                    return new Data_Either.Left("Parent note cannot be Start or Stop!");
                };
            }))(function(passing) {
                return Control_Bind.bind(Data_Either.bindEither)(extractChildNotes(v.fromLeft)(function(p) {
                    return function(orn) {
                        return Data_Either.Right.create(new ProtoVoices_Model.RightExpl({
                            leftParent: p,
                            orn: orn
                        }));
                    };
                }))(function(fromLeft) {
                    return Control_Bind.bind(Data_Either.bindEither)(extractChildNotes(v.fromRight)(function(p) {
                        return function(orn) {
                            return Data_Either.Right.create(new ProtoVoices_Model.LeftExpl({
                                rightParent: p,
                                orn: orn
                            }));
                        };
                    }))(function(fromRight) {
                        var unexplained = Data_Functor.map(Data_Functor.functorArray)(function(note) {
                            return {
                                note: note,
                                expl: ProtoVoices_Model.NoExpl.value
                            };
                        })(v.unexplained);
                        return Control_Applicative.pure(Data_Either.applicativeEither)(ProtoVoices_Model.sortNotes(Data_Semigroup.append(Data_Semigroup.semigroupArray)(regular)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(passing)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(fromLeft)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(fromRight)(unexplained))))));
                    });
                });
            });
        });
    };
    exports["LMSplitLeft"] = LMSplitLeft1;
    exports["LMFreezeLeft"] = LMFreezeLeft1;
    exports["LMSplitRight"] = LMSplitRight1;
    exports["LMHorizontalize"] = LMHorizontalize1;
    exports["LMSplitOnly"] = LMSplitOnly1;
    exports["LMFreezeOnly"] = LMFreezeOnly1;
    exports["RootNote"] = RootNote1;
    exports["splitGetChildNotes"] = splitGetChildNotes;
    exports["LeftChild"] = LeftChild1;
    exports["RightChild"] = RightChild1;
    exports["BothChildren"] = BothChildren1;
    exports["TooManyChildren"] = TooManyChildren1;
    exports["horiLeftChildren"] = horiLeftChildren;
    exports["horiRightChildren"] = horiRightChildren;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["ProtoVoices.Folding"] = $PS["ProtoVoices.Folding"] || {
    };
    var exports = $PS["ProtoVoices.Folding"];
    var Control_Applicative = $PS["Control.Applicative"];
    var Control_Bind = $PS["Control.Bind"];
    var Control_Monad_State = $PS["Control.Monad.State"];
    var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
    var Control_Monad_State_Trans = $PS["Control.Monad.State.Trans"];
    var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
    var Data_Array = $PS["Data.Array"];
    var Data_Either = $PS["Data.Either"];
    var Data_Eq = $PS["Data.Eq"];
    var Data_Foldable = $PS["Data.Foldable"];
    var Data_Function = $PS["Data.Function"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_Identity = $PS["Data.Identity"];
    var Data_List = $PS["Data.List"];
    var Data_List_Types = $PS["Data.List.Types"];
    var Data_Map_Internal = $PS["Data.Map.Internal"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Data_Monoid = $PS["Data.Monoid"];
    var Data_Ord = $PS["Data.Ord"];
    var Data_Pitches_Class = $PS["Data.Pitches.Class"];
    var Data_Pitches_Spelled = $PS["Data.Pitches.Spelled"];
    var Data_Semigroup = $PS["Data.Semigroup"];
    var Data_Set = $PS["Data.Set"];
    var Data_Unit = $PS["Data.Unit"];
    var ProtoVoices_Leftmost = $PS["ProtoVoices.Leftmost"];
    var ProtoVoices_Model = $PS["ProtoVoices.Model"];
    var nothingMore = function(seg) {
        return {
            seg: seg,
            more: Data_Unit.unit
        };
    };
    var leftmostToReduction = function(topSegments) {
        return function(deriv) {
            var startSlice = {
                id: 0,
                x: 0,
                notes: ProtoVoices_Model.Start.value,
                parents: ProtoVoices_Model.NoParents.value
            };
            var prepareTop = function(v) {
                return {
                    transId: v.trans.id,
                    rslice: {
                        id: v.rslice.id,
                        parents: ProtoVoices_Model.NoParents.value,
                        notes: Data_Functor.map(ProtoVoices_Model.functorStartStop)(Data_Functor.map(Data_Functor.functorArray)(function(note) {
                            return {
                                note: note,
                                expl: ProtoVoices_Model.NoExpl.value
                            };
                        }))(v.rslice.notes)
                    }
                };
            };
            var prepareSplit = function(leftSliceId) {
                return function(top) {
                    return function(v) {
                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Either.monadEither))(Control_Monad_State_Class.modify_(Control_Monad_State_Trans.monadStateStateT(Data_Either.monadEither))(function(st) {
                            var $90 = {
                            };
                            for(var $91 in st)if (({
                            }).hasOwnProperty.call(st, $91)) $90[$91] = st[$91];
                            $90.maxT = Data_Ord.max(ProtoVoices_Model.ordTransId)(st.maxT)(top.transId);
                            return $90;
                        }))(function() {
                            return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Either.monadEither))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Data_Either.monadEither)(ProtoVoices_Leftmost.splitGetChildNotes(v)))(function(childNotes) {
                                var childrTop = {
                                    transId: v.ids.right,
                                    rslice: top.rslice
                                };
                                var childSlice = {
                                    id: v.ids.slice,
                                    notes: new ProtoVoices_Model.Inner(childNotes),
                                    parents: new ProtoVoices_Model.MergeParents({
                                        left: leftSliceId,
                                        right: top.rslice.id
                                    })
                                };
                                var childlTop = {
                                    transId: v.ids.left,
                                    rslice: childSlice
                                };
                                return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Either.monadEither))({
                                    childlTop: childlTop,
                                    childrTop: childrTop
                                });
                            });
                        });
                    };
                };
            };
            var prepareHori = function(topl) {
                return function(topr) {
                    return function(v) {
                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Either.monadEither))(Control_Monad_State_Class.modify_(Control_Monad_State_Trans.monadStateStateT(Data_Either.monadEither))(function(st) {
                            var $96 = {
                            };
                            for(var $97 in st)if (({
                            }).hasOwnProperty.call(st, $97)) $96[$97] = st[$97];
                            $96.maxT = Data_Ord.max(ProtoVoices_Model.ordTransId)(st.maxT)(Data_Ord.max(ProtoVoices_Model.ordTransId)(topl.transId)(topr.transId));
                            $96.maxS = Data_Ord.max(ProtoVoices_Model.ordSliceId)(st.maxS)(topl.rslice.id);
                            return $96;
                        }))(function() {
                            var childrTop = {
                                transId: v.ids.right,
                                rslice: topr.rslice
                            };
                            var childmTop = {
                                transId: v.ids.mid,
                                rslice: {
                                    id: v.ids.rslice,
                                    notes: ProtoVoices_Model.Inner.create(ProtoVoices_Leftmost.horiRightChildren(v)),
                                    parents: new ProtoVoices_Model.VertParent(topl.rslice.id)
                                }
                            };
                            var childlTop = {
                                transId: v.ids.left,
                                rslice: {
                                    id: v.ids.lslice,
                                    notes: ProtoVoices_Model.Inner.create(ProtoVoices_Leftmost.horiLeftChildren(v)),
                                    parents: new ProtoVoices_Model.VertParent(topl.rslice.id)
                                }
                            };
                            return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Either.monadEither))({
                                childlTop: childlTop,
                                childmTop: childmTop,
                                childrTop: childrTop
                            });
                        });
                    };
                };
            };
            var freeze = function(lslice) {
                return function(v) {
                    return function(v1) {
                        var holdNote = function(v2) {
                            return {
                                note: v2.note,
                                hold: Data_Array.any(function(v3) {
                                    return Data_Eq.eq(ProtoVoices_Model.eqStartStop(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                                        reflectSymbol: function() {
                                            return "pitch";
                                        }
                                    })(Data_Pitches_Class.eqPitch(Data_Pitches_Spelled.eqSInterval)))()({
                                        reflectSymbol: function() {
                                            return "id";
                                        }
                                    })(Data_Eq.eqString))))(v3.left)(new ProtoVoices_Model.Inner(v2.note));
                                })(v.ties)
                            };
                        };
                        var pieceNotes = Data_Functor.map(Data_Functor.functorArray)(holdNote)(ProtoVoices_Model.sortNotes(ProtoVoices_Model.getInnerNotes(lslice)));
                        return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Either.monadEither))(Control_Monad_State_Class.modify(Control_Monad_State_Trans.monadStateStateT(Data_Either.monadEither))(function(st) {
                            var $106 = {
                            };
                            for(var $107 in st)if (({
                            }).hasOwnProperty.call(st, $107)) $106[$107] = st[$107];
                            $106.x = st.x + 1;
                            $106.maxT = Data_Ord.max(ProtoVoices_Model.ordTransId)(st.maxT)(v1.transId);
                            $106.maxS = Data_Ord.max(ProtoVoices_Model.ordSliceId)(st.maxS)(v1.rslice.id);
                            $106.piece = Data_Array.snoc(st.piece)({
                                notes: pieceNotes,
                                time: v.prevTime
                            });
                            return $106;
                        }))(function(st) {
                            return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Either.monadEither))({
                                trans: {
                                    id: v1.transId,
                                    edges: {
                                        passing: [],
                                        regular: Data_Set.fromFoldable(Data_Foldable.foldableArray)(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                                            reflectSymbol: function() {
                                                return "right";
                                            }
                                        })(ProtoVoices_Model.ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                                            reflectSymbol: function() {
                                                return "pitch";
                                            }
                                        })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                                            reflectSymbol: function() {
                                                return "id";
                                            }
                                        })(Data_Ord.ordString)))))()({
                                            reflectSymbol: function() {
                                                return "left";
                                            }
                                        })(ProtoVoices_Model.ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                                            reflectSymbol: function() {
                                                return "pitch";
                                            }
                                        })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                                            reflectSymbol: function() {
                                                return "id";
                                            }
                                        })(Data_Ord.ordString))))))(v.ties)
                                    },
                                    is2nd: false
                                },
                                rslice: {
                                    id: v1.rslice.id,
                                    notes: v1.rslice.notes,
                                    parents: v1.rslice.parents,
                                    x: st.x
                                },
                                op: ProtoVoices_Model.Freeze.value
                            });
                        });
                    };
                };
            };
            var completeSplit = function(top) {
                return function(childl) {
                    return function(childr) {
                        return {
                            trans: {
                                id: top.transId,
                                edges: ProtoVoices_Model.parentEdges(childl.rslice),
                                is2nd: childl.trans.is2nd
                            },
                            rslice: childr.rslice,
                            op: new ProtoVoices_Model.Split({
                                childl: childl,
                                childr: ProtoVoices_Model.detachSegment(childr)
                            })
                        };
                    };
                };
            };
            var completeHori = function(topl) {
                return function(topr) {
                    return function(childl) {
                        return function(childm) {
                            return function(childr) {
                                var topSlice = {
                                    id: topl.rslice.id,
                                    notes: topl.rslice.notes,
                                    parents: topl.rslice.parents,
                                    x: (childl.rslice.x + childm.rslice.x) / 2
                                };
                                return Control_Bind.bind(Data_Either.bindEither)(ProtoVoices_Model.vertEdgesLeft(childl.trans.edges)(childl.rslice))(function(edgesL) {
                                    return Control_Bind.bind(Data_Either.bindEither)(ProtoVoices_Model.vertEdgesRight(childr.trans.edges)(childm.rslice))(function(edgesR) {
                                        var segr = {
                                            trans: {
                                                id: topr.transId,
                                                edges: edgesR,
                                                is2nd: true
                                            },
                                            rslice: childr.rslice,
                                            op: ProtoVoices_Model.Freeze.value
                                        };
                                        var segl = {
                                            trans: {
                                                id: topl.transId,
                                                edges: edgesL,
                                                is2nd: false
                                            },
                                            rslice: topSlice,
                                            op: new ProtoVoices_Model.Hori({
                                                childl: childl,
                                                childm: childm,
                                                childr: ProtoVoices_Model.detachSegment(childr)
                                            })
                                        };
                                        return Control_Applicative.pure(Data_Either.applicativeEither)({
                                            segl: segl,
                                            segr: segr
                                        });
                                    });
                                });
                            };
                        };
                    };
                };
            };
            var go = function(v) {
                return function(v1) {
                    return function(v2) {
                        if (v1 instanceof Data_List_Types.Nil && v2 instanceof Data_List_Types.Nil) return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Either.monadEither))(Data_List_Types.Nil.value);
                        if (v1 instanceof Data_List_Types.Cons && v2 instanceof Data_List_Types.Cons) {
                            if (v1.value1 instanceof Data_List_Types.Cons) {
                                if (v2.value0 instanceof ProtoVoices_Leftmost.LMFreezeLeft) return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Either.monadEither))(freeze(v)(v2.value0.value0)(v1.value0))(function(top$prime) {
                                    return Data_Functor.map(Control_Monad_State_Trans.functorStateT(Data_Either.functorEither))(Data_List_Types.Cons.create(top$prime))(go(top$prime.rslice)(v1.value1)(v2.value1));
                                });
                                if (v2.value0 instanceof ProtoVoices_Leftmost.LMSplitLeft) return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Either.monadEither))(prepareSplit(v.id)(v1.value0)(v2.value0.value0))(function(v3) {
                                    return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Either.monadEither))(go(v)(Data_List_Types.Cons.create(v3.childlTop)(new Data_List_Types.Cons(v3.childrTop, v1.value1)))(v2.value1))(function(segs) {
                                        if (segs instanceof Data_List_Types.Cons && segs.value1 instanceof Data_List_Types.Cons) return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Either.monadEither))(new Data_List_Types.Cons(completeSplit(v1.value0)(segs.value0)(segs.value1.value0), segs.value1.value1));
                                        return Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Data_Either.monadEither)(new Data_Either.Left("Operations after splitLeft do not fit!"));
                                    });
                                });
                                if (v2.value0 instanceof ProtoVoices_Leftmost.LMSplitRight) return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Either.monadEither))(prepareSplit(v1.value0.rslice.id)(v1.value1.value0)(v2.value0.value0))(function(v3) {
                                    return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Either.monadEither))(go(v)(Data_List_Types.Cons.create(v1.value0)(Data_List_Types.Cons.create(v3.childlTop)(new Data_List_Types.Cons(v3.childrTop, v1.value1.value1))))(v2.value1))(function(segs) {
                                        if (segs instanceof Data_List_Types.Cons && segs.value1 instanceof Data_List_Types.Cons && segs.value1.value1 instanceof Data_List_Types.Cons) return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Either.monadEither))(Data_List_Types.Cons.create(segs.value0)(new Data_List_Types.Cons(completeSplit(v1.value1.value0)(segs.value1.value0)(segs.value1.value1.value0), segs.value1.value1.value1)));
                                        return Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Data_Either.monadEither)(new Data_Either.Left("Operations after splitRight do not fit!"));
                                    });
                                });
                                if (v2.value0 instanceof ProtoVoices_Leftmost.LMHorizontalize) return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Either.monadEither))(prepareHori(v1.value0)(v1.value1.value0)(v2.value0.value0))(function(v3) {
                                    return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Either.monadEither))(go(v)(Data_List_Types.Cons.create(v3.childlTop)(Data_List_Types.Cons.create(v3.childmTop)(new Data_List_Types.Cons(v3.childrTop, v1.value1.value1))))(v2.value1))(function(segs) {
                                        if (segs instanceof Data_List_Types.Cons && segs.value1 instanceof Data_List_Types.Cons && segs.value1.value1 instanceof Data_List_Types.Cons) return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Either.monadEither))(Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Data_Either.monadEither)(completeHori(v1.value0)(v1.value1.value0)(segs.value0)(segs.value1.value0)(segs.value1.value1.value0)))(function(v4) {
                                            return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Either.monadEither))(Data_List_Types.Cons.create(v4.segl)(new Data_List_Types.Cons(v4.segr, segs.value1.value1.value1)));
                                        });
                                        return Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Data_Either.monadEither)(new Data_Either.Left("Operations after hori do not fit!"));
                                    });
                                });
                                return Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Data_Either.monadEither)(new Data_Either.Left("Applying a single-transition operation while several transitions are left!"));
                            }
                            if (v1.value1 instanceof Data_List_Types.Nil) {
                                if (v2.value0 instanceof ProtoVoices_Leftmost.LMFreezeOnly) return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Either.monadEither))(freeze(v)(v2.value0.value0)(v1.value0))(function(seg) {
                                    return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Either.monadEither))(new Data_List_Types.Cons(seg, Data_List_Types.Nil.value));
                                });
                                if (v2.value0 instanceof ProtoVoices_Leftmost.LMSplitOnly) return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Either.monadEither))(prepareSplit(v.id)(v1.value0)(v2.value0.value0))(function(v3) {
                                    return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Either.monadEither))(go(v)(Data_List_Types.Cons.create(v3.childlTop)(new Data_List_Types.Cons(v3.childrTop, Data_List_Types.Nil.value)))(v2.value1))(function(segs) {
                                        if (segs instanceof Data_List_Types.Cons && segs.value1 instanceof Data_List_Types.Cons && segs.value1.value1 instanceof Data_List_Types.Nil) return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Either.monadEither))(new Data_List_Types.Cons(completeSplit(v1.value0)(segs.value0)(segs.value1.value0), Data_List_Types.Nil.value));
                                        return Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Data_Either.monadEither)(new Data_Either.Left("Operations after splitOnly do not fit!"));
                                    });
                                });
                                return Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Data_Either.monadEither)(new Data_Either.Left("Applying a non-single operation to a single transition!"));
                            }
                            throw new Error("Failed pattern match at ProtoVoices.Folding (line 424, column 48 - line 462, column 84): " + [
                                v1.value1.constructor.name
                            ]);
                        }
                        return Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Data_Either.monadEither)(new Data_Either.Left("Lengths of top-level and derivation do not match!"));
                    };
                };
            };
            return Control_Bind.bind(Data_Either.bindEither)(Control_Monad_State_Trans.runStateT(go(startSlice)(Data_List.fromFoldable(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(prepareTop)(topSegments)))(Data_List.fromFoldable(Data_Foldable.foldableArray)(deriv)))({
                maxS: 0,
                maxT: 0,
                x: 0,
                piece: []
            }))(function(v) {
                return Control_Applicative.pure(Data_Either.applicativeEither)({
                    reduction: {
                        start: startSlice,
                        segments: v.value0,
                        nextSliceId: ProtoVoices_Model.incS(v.value1.maxS),
                        nextTransId: ProtoVoices_Model.incT(v.value1.maxT)
                    },
                    piece: Data_Maybe.fromMaybe([])(Data_Array.tail(v.value1.piece))
                });
            });
        };
    };
    var foldAgenda = function(v) {
        return function(v1) {
            return function(v2) {
                if (v2 instanceof Data_List_Types.Nil) return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Unit.unit);
                if (v2 instanceof Data_List_Types.Cons && v2.value1 instanceof Data_List_Types.Nil) {
                    if (v2.value0.seg.op instanceof ProtoVoices_Model.Freeze) return v.freezeOnly(v1)(v2.value0);
                    if (v2.value0.seg.op instanceof ProtoVoices_Model.Split) return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(v.splitOnly(v1)(v2.value0)(v2.value0.seg.op.value0))(function(children) {
                        return foldAgenda(v)(v1)(children);
                    });
                    if (v2.value0.seg.op instanceof ProtoVoices_Model.Hori) return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Unit.unit);
                    throw new Error("Failed pattern match at ProtoVoices.Folding (line 62, column 3 - line 67, column 24): " + [
                        v2.value0.seg.op.constructor.name
                    ]);
                }
                if (v2 instanceof Data_List_Types.Cons && v2.value1 instanceof Data_List_Types.Cons) {
                    if (v2.value0.seg.op instanceof ProtoVoices_Model.Freeze) return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(v.freezeLeft(v1)(v2.value0))(function() {
                        return foldAgenda(v)(v2.value0.seg.rslice)(v2.value1);
                    });
                    if (v2.value0.seg.op instanceof ProtoVoices_Model.Split) return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(v.splitLeft(v1)(v2.value0)(v2.value0.seg.op.value0))(function(children) {
                        return foldAgenda(v)(v1)(Data_Semigroup.append(Data_List_Types.semigroupList)(children)(v2.value1));
                    });
                    if (v2.value0.seg.op instanceof ProtoVoices_Model.Hori) {
                        if (v2.value1.value0.seg.op instanceof ProtoVoices_Model.Split) return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(v.splitRight(v1)(v2.value0)(v2.value1.value0)(v2.value1.value0.seg.op.value0))(function(children) {
                            return foldAgenda(v)(v1)(Data_Semigroup.append(Data_List_Types.semigroupList)(new Data_List_Types.Cons(v2.value0, children))(v2.value1.value1));
                        });
                        return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(v.hori(v1)(v2.value0)(v2.value1.value0)(v2.value0.seg.op.value0))(function(children) {
                            return foldAgenda(v)(v1)(Data_Semigroup.append(Data_List_Types.semigroupList)(children)(v2.value1.value1));
                        });
                    }
                    throw new Error("Failed pattern match at ProtoVoices.Folding (line 71, column 3 - line 88, column 55): " + [
                        v2.value0.seg.op.constructor.name
                    ]);
                }
                throw new Error("Failed pattern match at ProtoVoices.Folding (line 51, column 1 - line 56, column 18): " + [
                    v.constructor.name,
                    v1.constructor.name,
                    v2.constructor.name
                ]);
            };
        };
    };
    var walkGraph = function(alg) {
        return function(start) {
            return function(agenda) {
                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(alg.init(start))(function() {
                    return foldAgenda(alg)(start)(agenda);
                });
            };
        };
    };
    var emptyGraph = {
        slices: Data_Map_Internal.empty,
        transitions: Data_Map_Internal.empty,
        horis: Data_List_Types.Nil.value,
        maxd: 0,
        maxx: 0,
        currentDepth: 0
    };
    var addUnusedEdgesRight = function(lslice) {
        return function(segr) {
            var edges$prime = Data_Semigroup.append(Data_Semigroup.semigroupRecord()(Data_Semigroup.semigroupRecordCons({
                reflectSymbol: function() {
                    return "passing";
                }
            })()(Data_Semigroup.semigroupRecordCons({
                reflectSymbol: function() {
                    return "regular";
                }
            })()(Data_Semigroup.semigroupRecordNil)(Data_Set.semigroupSet(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                reflectSymbol: function() {
                    return "right";
                }
            })(ProtoVoices_Model.ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                reflectSymbol: function() {
                    return "pitch";
                }
            })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                reflectSymbol: function() {
                    return "id";
                }
            })(Data_Ord.ordString)))))()({
                reflectSymbol: function() {
                    return "left";
                }
            })(ProtoVoices_Model.ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                reflectSymbol: function() {
                    return "pitch";
                }
            })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                reflectSymbol: function() {
                    return "id";
                }
            })(Data_Ord.ordString))))))))(Data_Semigroup.semigroupArray)))(segr.trans.edges)(Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidRecord()(Data_Monoid.monoidRecordCons({
                reflectSymbol: function() {
                    return "passing";
                }
            })(Data_Monoid.monoidArray)()(Data_Monoid.monoidRecordCons({
                reflectSymbol: function() {
                    return "regular";
                }
            })(Data_Set.monoidSet(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                reflectSymbol: function() {
                    return "right";
                }
            })(ProtoVoices_Model.ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                reflectSymbol: function() {
                    return "pitch";
                }
            })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                reflectSymbol: function() {
                    return "id";
                }
            })(Data_Ord.ordString)))))()({
                reflectSymbol: function() {
                    return "left";
                }
            })(ProtoVoices_Model.ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                reflectSymbol: function() {
                    return "pitch";
                }
            })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                reflectSymbol: function() {
                    return "id";
                }
            })(Data_Ord.ordString)))))))()(Data_Monoid.monoidRecordNil))))(Data_Functor.map(Data_Functor.functorArray)(ProtoVoices_Model.explRightEdge)(ProtoVoices_Model.getInnerNotes(lslice))));
            return {
                trans: {
                    id: segr.trans.id,
                    edges: edges$prime,
                    is2nd: segr.trans.is2nd
                },
                rslice: segr.rslice,
                op: segr.op
            };
        };
    };
    var addUnusedEdgesLeft = function(segl) {
        var edges$prime = Data_Semigroup.append(Data_Semigroup.semigroupRecord()(Data_Semigroup.semigroupRecordCons({
            reflectSymbol: function() {
                return "passing";
            }
        })()(Data_Semigroup.semigroupRecordCons({
            reflectSymbol: function() {
                return "regular";
            }
        })()(Data_Semigroup.semigroupRecordNil)(Data_Set.semigroupSet(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
            reflectSymbol: function() {
                return "right";
            }
        })(ProtoVoices_Model.ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
            reflectSymbol: function() {
                return "pitch";
            }
        })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
            reflectSymbol: function() {
                return "id";
            }
        })(Data_Ord.ordString)))))()({
            reflectSymbol: function() {
                return "left";
            }
        })(ProtoVoices_Model.ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
            reflectSymbol: function() {
                return "pitch";
            }
        })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
            reflectSymbol: function() {
                return "id";
            }
        })(Data_Ord.ordString))))))))(Data_Semigroup.semigroupArray)))(segl.trans.edges)(Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidRecord()(Data_Monoid.monoidRecordCons({
            reflectSymbol: function() {
                return "passing";
            }
        })(Data_Monoid.monoidArray)()(Data_Monoid.monoidRecordCons({
            reflectSymbol: function() {
                return "regular";
            }
        })(Data_Set.monoidSet(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
            reflectSymbol: function() {
                return "right";
            }
        })(ProtoVoices_Model.ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
            reflectSymbol: function() {
                return "pitch";
            }
        })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
            reflectSymbol: function() {
                return "id";
            }
        })(Data_Ord.ordString)))))()({
            reflectSymbol: function() {
                return "left";
            }
        })(ProtoVoices_Model.ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
            reflectSymbol: function() {
                return "pitch";
            }
        })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
            reflectSymbol: function() {
                return "id";
            }
        })(Data_Ord.ordString)))))))()(Data_Monoid.monoidRecordNil))))(Data_Functor.map(Data_Functor.functorArray)(ProtoVoices_Model.explLeftEdge)(ProtoVoices_Model.getInnerNotes(segl.rslice))));
        return {
            trans: {
                id: segl.trans.id,
                edges: edges$prime,
                is2nd: segl.trans.is2nd
            },
            rslice: segl.rslice,
            op: segl.op
        };
    };
    var addHoriEdge = function(v) {
        return function(v1) {
            return Control_Monad_State_Class.modify_(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(function(st) {
                var $289 = {
                };
                for(var $290 in st)if (({
                }).hasOwnProperty.call(st, $290)) $289[$290] = st[$290];
                $289.horis = new Data_List_Types.Cons({
                    child: v.id,
                    parent: v1.id
                }, st.horis);
                return $289;
            });
        };
    };
    var addGraphTrans = function(il) {
        return function(v) {
            return function(ir) {
                return Control_Monad_State_Class.modify_(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(function(st) {
                    var $297 = {
                    };
                    for(var $298 in st)if (({
                    }).hasOwnProperty.call(st, $298)) $297[$298] = st[$298];
                    $297.transitions = Data_Map_Internal.insert(ProtoVoices_Model.ordTransId)(v.id)({
                        left: il,
                        right: ir,
                        id: v.id,
                        edges: v.edges
                    })(st.transitions);
                    return $297;
                });
            };
        };
    };
    var addGraphSlice = function(slice) {
        return function(depth) {
            var gslice = {
                depth: depth,
                slice: slice
            };
            var add = function(st) {
                var $302 = {
                };
                for(var $303 in st)if (({
                }).hasOwnProperty.call(st, $303)) $302[$303] = st[$303];
                $302.maxd = Data_Ord.max(Data_Ord.ordNumber)(depth)(st.maxd);
                $302.maxx = Data_Ord.max(Data_Ord.ordNumber)(slice.x)(st.maxx);
                $302.slices = Data_Map_Internal.insert(ProtoVoices_Model.ordSliceId)(slice.id)(gslice)(st.slices);
                return $302;
            };
            return Control_Monad_State_Class.modify_(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(add);
        };
    };
    var graphAlg = function(flatHori) {
        return function(showAllEdges) {
            var split = function(lSlice) {
                return function(lDepth) {
                    return function(item) {
                        return function(v) {
                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(addGraphTrans(lSlice.id)(item.seg.trans)(item.seg.rslice.id))(function() {
                                var childr$prime = ProtoVoices_Model.attachSegment(v.childr)(item.seg.rslice);
                                return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(new Data_List_Types.Cons({
                                    seg: function() {
                                        if (showAllEdges) return addUnusedEdgesLeft(v.childl);
                                        return v.childl;
                                    }(),
                                    more: {
                                        rdepth: Data_Ord.max(Data_Ord.ordNumber)(lDepth)(item.more.rdepth) + 1
                                    }
                                }, new Data_List_Types.Cons({
                                    seg: function() {
                                        if (showAllEdges) return addUnusedEdgesRight(v.childl.rslice)(childr$prime);
                                        return childr$prime;
                                    }(),
                                    more: {
                                        rdepth: item.more.rdepth
                                    }
                                }, Data_List_Types.Nil.value)));
                            });
                        };
                    };
                };
            };
            var splitRight = function(v) {
                return function(left) {
                    return function(right) {
                        return function(splitop) {
                            return split(left.seg.rslice)(left.more.rdepth)(right)(splitop);
                        };
                    };
                };
            };
            var splitTrans = function(lSlice) {
                return function(item) {
                    return function(splitop) {
                        return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.gets(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(function(v) {
                            return v.currentDepth;
                        }))(function(lDepth) {
                            return split(lSlice)(lDepth)(item)(splitop);
                        });
                    };
                };
            };
            var init = function(start) {
                return addGraphSlice(start)(0);
            };
            var hori = function(lSlice) {
                return function(left) {
                    return function(right) {
                        return function(v) {
                            return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.gets(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(function(v1) {
                                return v1.currentDepth;
                            }))(function(currentDepth) {
                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(addGraphTrans(lSlice.id)(left.seg.trans)(left.seg.rslice.id))(function() {
                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(addGraphSlice(left.seg.rslice)(left.more.rdepth))(function() {
                                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(addHoriEdge(v.childl.rslice)(left.seg.rslice))(function() {
                                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(addHoriEdge(v.childm.rslice)(left.seg.rslice))(function() {
                                                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(addGraphTrans(left.seg.rslice.id)(right.seg.trans)(right.seg.rslice.id))(function() {
                                                    var dsub = function() {
                                                        if (flatHori) return left.more.rdepth + 1;
                                                        return Data_Ord.max(Data_Ord.ordNumber)(currentDepth)(Data_Ord.max(Data_Ord.ordNumber)(left.more.rdepth)(right.more.rdepth)) + 1;
                                                    }();
                                                    var childr$prime = ProtoVoices_Model.attachSegment(v.childr)(right.seg.rslice);
                                                    return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(new Data_List_Types.Cons({
                                                        seg: function() {
                                                            if (showAllEdges) return {
                                                                trans: {
                                                                    edges: ProtoVoices_Model.horiEdgesLeft(left.seg.trans.edges)(v.childl.rslice),
                                                                    id: v.childl.trans.id,
                                                                    is2nd: v.childl.trans.is2nd
                                                                },
                                                                rslice: v.childl.rslice,
                                                                op: v.childl.op
                                                            };
                                                            return v.childl;
                                                        }(),
                                                        more: {
                                                            rdepth: dsub
                                                        }
                                                    }, new Data_List_Types.Cons({
                                                        seg: function() {
                                                            if (showAllEdges) return {
                                                                trans: {
                                                                    edges: ProtoVoices_Model.horiEdgesMid(v.childl.rslice)(v.childm.trans.edges)(v.childm.rslice),
                                                                    id: v.childm.trans.id,
                                                                    is2nd: v.childm.trans.is2nd
                                                                },
                                                                rslice: v.childm.rslice,
                                                                op: v.childm.op
                                                            };
                                                            return v.childm;
                                                        }(),
                                                        more: {
                                                            rdepth: dsub
                                                        }
                                                    }, new Data_List_Types.Cons({
                                                        seg: function() {
                                                            if (showAllEdges) return {
                                                                trans: {
                                                                    edges: ProtoVoices_Model.horiEdgesRight(v.childm.rslice)(right.seg.trans.edges),
                                                                    id: childr$prime.trans.id,
                                                                    is2nd: childr$prime.trans.is2nd
                                                                },
                                                                op: childr$prime.op,
                                                                rslice: childr$prime.rslice
                                                            };
                                                            return childr$prime;
                                                        }(),
                                                        more: {
                                                            rdepth: right.more.rdepth
                                                        }
                                                    }, Data_List_Types.Nil.value))));
                                                });
                                            });
                                        });
                                    });
                                });
                            });
                        };
                    };
                };
            };
            var freezeTrans = function(lSlice) {
                return function(item) {
                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(addGraphTrans(lSlice.id)(item.seg.trans)(item.seg.rslice.id))(function() {
                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(addGraphSlice(item.seg.rslice)(item.more.rdepth))(function() {
                            return Control_Monad_State_Class.modify_(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(function(st) {
                                var $324 = {
                                };
                                for(var $325 in st)if (({
                                }).hasOwnProperty.call(st, $325)) $324[$325] = st[$325];
                                $324.currentDepth = item.more.rdepth;
                                return $324;
                            });
                        });
                    });
                };
            };
            return {
                init: init,
                freezeOnly: freezeTrans,
                freezeLeft: freezeTrans,
                splitOnly: splitTrans,
                splitLeft: splitTrans,
                splitRight: splitRight,
                hori: hori
            };
        };
    };
    var evalGraph = function(flatHori) {
        return function(showAllEdges) {
            return function(reduction) {
                var agenda = Data_Functor.map(Data_List_Types.functorList)(function(seg) {
                    return {
                        seg: seg,
                        more: {
                            rdepth: 0
                        }
                    };
                })(reduction.segments);
                return Data_Function.flip(Control_Monad_State.execState)(emptyGraph)(walkGraph(graphAlg(flatHori)(showAllEdges))(reduction.start)(agenda));
            };
        };
    };
    exports["nothingMore"] = nothingMore;
    exports["walkGraph"] = walkGraph;
    exports["addUnusedEdgesLeft"] = addUnusedEdgesLeft;
    exports["addUnusedEdgesRight"] = addUnusedEdgesRight;
    exports["evalGraph"] = evalGraph;
    exports["leftmostToReduction"] = leftmostToReduction;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Pruning"] = $PS["Pruning"] || {
    };
    var exports = $PS["Pruning"];
    var Control_Applicative = $PS["Control.Applicative"];
    var Control_Bind = $PS["Control.Bind"];
    var Control_Monad_State = $PS["Control.Monad.State"];
    var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
    var Control_Monad_State_Trans = $PS["Control.Monad.State.Trans"];
    var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
    var Data_Array = $PS["Data.Array"];
    var Data_Boolean = $PS["Data.Boolean"];
    var Data_Either = $PS["Data.Either"];
    var Data_Function = $PS["Data.Function"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_Identity = $PS["Data.Identity"];
    var Data_List_Types = $PS["Data.List.Types"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Data_Ord = $PS["Data.Ord"];
    var Data_Pitches_Class = $PS["Data.Pitches.Class"];
    var Data_Pitches_Spelled = $PS["Data.Pitches.Spelled"];
    var Data_Set = $PS["Data.Set"];
    var Data_Unit = $PS["Data.Unit"];
    var ProtoVoices_Folding = $PS["ProtoVoices.Folding"];
    var ProtoVoices_Model = $PS["ProtoVoices.Model"];
    var pruneReduction = function(nsteps) {
        return function(red) {
            var split = function(v) {
                return function(seg) {
                    return function(rest) {
                        return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Either.monadEither))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Data_Either.monadEither)))(function(n) {
                            var $50 = n <= 0;
                            if ($50) return go(new Data_List_Types.Cons({
                                op: ProtoVoices_Model.Freeze.value,
                                rslice: seg.rslice,
                                trans: seg.trans
                            }, rest));
                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Either.monadEither))(Control_Monad_State_Class.modify_(Control_Monad_State_Trans.monadStateStateT(Data_Either.monadEither))(function(v1) {
                                return v1 - 1 | 0;
                            }))(function() {
                                return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Either.monadEither))(go(new Data_List_Types.Cons(v.childl, new Data_List_Types.Cons(ProtoVoices_Model.attachSegment(v.childr)(seg.rslice), rest))))(function(res) {
                                    if (res instanceof Data_List_Types.Cons && res.value1 instanceof Data_List_Types.Cons) return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Either.monadEither))(new Data_List_Types.Cons({
                                        op: new ProtoVoices_Model.Split({
                                            childl: res.value0,
                                            childr: ProtoVoices_Model.detachSegment(res.value1.value0)
                                        }),
                                        rslice: seg.rslice,
                                        trans: seg.trans
                                    }, res.value1.value1));
                                    return Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Data_Either.monadEither)(new Data_Either.Left("invalid result of split"));
                                });
                            });
                        });
                    };
                };
            };
            var go = function(v) {
                if (v instanceof Data_List_Types.Nil) return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Either.monadEither))(Data_List_Types.Nil.value);
                if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
                    if (v.value0.op instanceof ProtoVoices_Model.Freeze) return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Either.monadEither))(new Data_List_Types.Cons(v.value0, Data_List_Types.Nil.value));
                    if (v.value0.op instanceof ProtoVoices_Model.Split) return split(v.value0.op.value0)(v.value0)(Data_List_Types.Nil.value);
                    if (v.value0.op instanceof ProtoVoices_Model.Hori) return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Either.monadEither))(new Data_List_Types.Cons(v.value0, Data_List_Types.Nil.value));
                    throw new Error("Failed pattern match at Pruning (line 26, column 23 - line 29, column 34): " + [
                        v.value0.op.constructor.name
                    ]);
                }
                if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Cons) {
                    if (v.value0.op instanceof ProtoVoices_Model.Freeze) return Data_Functor.map(Control_Monad_State_Trans.functorStateT(Data_Either.functorEither))(Data_List_Types.Cons.create(v.value0))(go(v.value1));
                    if (v.value0.op instanceof ProtoVoices_Model.Split) return split(v.value0.op.value0)(v.value0)(v.value1);
                    if (v.value0.op instanceof ProtoVoices_Model.Hori) {
                        if (v.value1.value0.op instanceof ProtoVoices_Model.Split) return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Either.monadEither))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Data_Either.monadEither)))(function(n) {
                            var $67 = n <= 0;
                            if ($67) return Data_Functor.map(Control_Monad_State_Trans.functorStateT(Data_Either.functorEither))(Data_Functor.map(Data_Functor.functorFn)(Data_List_Types.Cons.create({
                                op: ProtoVoices_Model.Freeze.value,
                                rslice: v.value0.rslice,
                                trans: v.value0.trans
                            }))(Data_List_Types.Cons.create({
                                op: ProtoVoices_Model.Freeze.value,
                                rslice: v.value1.value0.rslice,
                                trans: v.value1.value0.trans
                            })))(go(v.value1.value1));
                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Either.monadEither))(Control_Monad_State_Class.modify_(Control_Monad_State_Trans.monadStateStateT(Data_Either.monadEither))(function(v1) {
                                return v1 - 1 | 0;
                            }))(function() {
                                return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Either.monadEither))(go(Data_List_Types.Cons.create(v.value0)(Data_List_Types.Cons.create(v.value1.value0.op.value0.childl)(new Data_List_Types.Cons(ProtoVoices_Model.attachSegment(v.value1.value0.op.value0.childr)(v.value1.value0.rslice), v.value1.value1)))))(function(res) {
                                    if (res instanceof Data_List_Types.Cons && res.value1 instanceof Data_List_Types.Cons && res.value1.value1 instanceof Data_List_Types.Cons) return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Either.monadEither))(new Data_List_Types.Cons(res.value0, new Data_List_Types.Cons({
                                        op: new ProtoVoices_Model.Split({
                                            childl: res.value1.value0,
                                            childr: ProtoVoices_Model.detachSegment(res.value1.value1.value0)
                                        }),
                                        rslice: v.value1.value0.rslice,
                                        trans: v.value1.value0.trans
                                    }, res.value1.value1.value1)));
                                    return Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Data_Either.monadEither)(new Data_Either.Left("invalid result of right split"));
                                });
                            });
                        });
                        return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Either.monadEither))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Data_Either.monadEither)))(function(n) {
                            var $76 = n <= 0;
                            if ($76) return Data_Functor.map(Control_Monad_State_Trans.functorStateT(Data_Either.functorEither))(Data_List_Types.Cons.create({
                                op: ProtoVoices_Model.Freeze.value,
                                rslice: v.value0.rslice,
                                trans: v.value0.trans
                            }))(go(v.value1));
                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Either.monadEither))(Control_Monad_State_Class.modify_(Control_Monad_State_Trans.monadStateStateT(Data_Either.monadEither))(function(v1) {
                                return v1 - 1 | 0;
                            }))(function() {
                                return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Either.monadEither))(go(new Data_List_Types.Cons(v.value0.op.value0.childl, new Data_List_Types.Cons(v.value0.op.value0.childm, new Data_List_Types.Cons(ProtoVoices_Model.attachSegment(v.value0.op.value0.childr)(v.value1.value0.rslice), v.value1.value1)))))(function(res) {
                                    if (res instanceof Data_List_Types.Cons && res.value1 instanceof Data_List_Types.Cons && res.value1.value1 instanceof Data_List_Types.Cons) return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Either.monadEither))(new Data_List_Types.Cons({
                                        op: new ProtoVoices_Model.Hori({
                                            childl: res.value0,
                                            childm: res.value1.value0,
                                            childr: ProtoVoices_Model.detachSegment(res.value1.value1.value0)
                                        }),
                                        rslice: v.value0.rslice,
                                        trans: v.value0.trans
                                    }, new Data_List_Types.Cons(v.value1.value0, res.value1.value1.value1)));
                                    return Control_Monad_Trans_Class.lift(Control_Monad_State_Trans.monadTransStateT)(Data_Either.monadEither)(new Data_Either.Left("invalid result of hori"));
                                });
                            });
                        });
                    }
                    throw new Error("Failed pattern match at Pruning (line 31, column 44 - line 55, column 59): " + [
                        v.value0.op.constructor.name
                    ]);
                }
                throw new Error("Failed pattern match at Pruning (line 23, column 3 - line 23, column 69): " + [
                    v.constructor.name
                ]);
            };
            return Control_Bind.bind(Data_Either.bindEither)(Control_Monad_State_Trans.evalStateT(Data_Either.functorEither)(go(red.segments))(nsteps))(function(segs$prime) {
                return Control_Applicative.pure(Data_Either.applicativeEither)({
                    segments: segs$prime,
                    nextSliceId: red.nextSliceId,
                    nextTransId: red.nextTransId,
                    start: red.start
                });
            });
        };
    };
    var pruneModel = function(n) {
        return function(model) {
            return Control_Bind.bind(Data_Either.bindEither)(pruneReduction(n)(model.reduction))(function(red$prime) {
                return Control_Applicative.pure(Data_Either.applicativeEither)({
                    reduction: red$prime,
                    piece: model.piece
                });
            });
        };
    };
    var horiEdgesRight = function(slicer) {
        return function(edgesr) {
            var v = function(v1) {
                if (Data_Boolean.otherwise) return edgesr;
                throw new Error("Failed pattern match at Pruning (line 116, column 1 - line 116, column 42): " + [
                    slicer.constructor.name,
                    edgesr.constructor.name
                ]);
            };
            if (slicer.notes instanceof ProtoVoices_Model.Inner) {
                var replaceLeft = function(v1) {
                    var v2 = function(v3) {
                        if (Data_Boolean.otherwise) return Data_Maybe.Nothing.value;
                        throw new Error("Failed pattern match at Pruning (line 116, column 1 - line 116, column 42): " + [
                            v1.constructor.name
                        ]);
                    };
                    if (v1.left instanceof ProtoVoices_Model.Inner) {
                        var $101 = Data_Array.find(function(n) {
                            if (n.expl instanceof ProtoVoices_Model.HoriExpl) return n.expl.value0.id === v1.left.value0.id;
                            return false;
                        })(slicer.notes.value0);
                        if ($101 instanceof Data_Maybe.Just) return new Data_Maybe.Just({
                            left: new ProtoVoices_Model.Inner($101.value0.note),
                            right: v1.right
                        });
                        return v2(true);
                    }
                    return v2(true);
                };
                return {
                    regular: Data_Set.catMaybes(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ProtoVoices_Model.ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Data_Ord.ordString)))))()({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ProtoVoices_Model.ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Data_Ord.ordString))))))(Data_Set.map(Data_Maybe.ordMaybe(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ProtoVoices_Model.ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Data_Ord.ordString)))))()({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ProtoVoices_Model.ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Data_Ord.ordString)))))))(replaceLeft)(edgesr.regular)),
                    passing: Data_Array.catMaybes(Data_Functor.map(Data_Functor.functorArray)(replaceLeft)(edgesr.passing))
                };
            }
            return v(true);
        };
    };
    var horiEdgesLeft = function(edgesl) {
        return function(slicel) {
            var v = function(v1) {
                if (Data_Boolean.otherwise) return edgesl;
                throw new Error("Failed pattern match at Pruning (line 97, column 1 - line 97, column 41): " + [
                    edgesl.constructor.name,
                    slicel.constructor.name
                ]);
            };
            if (slicel.notes instanceof ProtoVoices_Model.Inner) {
                var replaceRight = function(v1) {
                    var v2 = function(v3) {
                        if (Data_Boolean.otherwise) return Data_Maybe.Nothing.value;
                        throw new Error("Failed pattern match at Pruning (line 97, column 1 - line 97, column 41): " + [
                            v1.constructor.name
                        ]);
                    };
                    if (v1.right instanceof ProtoVoices_Model.Inner) {
                        var $119 = Data_Array.find(function(n) {
                            if (n.expl instanceof ProtoVoices_Model.HoriExpl) return n.expl.value0.id === v1.right.value0.id;
                            return false;
                        })(slicel.notes.value0);
                        if ($119 instanceof Data_Maybe.Just) return new Data_Maybe.Just({
                            left: v1.left,
                            right: new ProtoVoices_Model.Inner($119.value0.note)
                        });
                        return v2(true);
                    }
                    return v2(true);
                };
                return {
                    regular: Data_Set.catMaybes(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ProtoVoices_Model.ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Data_Ord.ordString)))))()({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ProtoVoices_Model.ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Data_Ord.ordString))))))(Data_Set.map(Data_Maybe.ordMaybe(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ProtoVoices_Model.ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Data_Ord.ordString)))))()({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ProtoVoices_Model.ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Data_Ord.ordString)))))))(replaceRight)(edgesl.regular)),
                    passing: Data_Array.catMaybes(Data_Functor.map(Data_Functor.functorArray)(replaceRight)(edgesl.passing))
                };
            }
            return v(true);
        };
    };
    var findSurface = function(red) {
        var split = function(ag) {
            return function(v) {
                var childr$prime = ProtoVoices_Model.attachSegment(v.childr)(ag.seg.rslice);
                return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Functor.map(Data_List_Types.functorList)(ProtoVoices_Folding.nothingMore)(Data_List_Types.Cons.create(ProtoVoices_Folding.addUnusedEdgesLeft(v.childl))(new Data_List_Types.Cons(ProtoVoices_Folding.addUnusedEdgesRight(v.childl.rslice)(childr$prime), Data_List_Types.Nil.value))));
            };
        };
        var hori = function(v) {
            return function(ag1) {
                return function(ag2) {
                    return function(v1) {
                        var childr$prime = function() {
                            var v2 = ProtoVoices_Model.attachSegment(v1.childr)(ag2.seg.rslice);
                            return {
                                trans: {
                                    edges: horiEdgesRight(v1.childm.rslice)(ag2.seg.trans.edges),
                                    id: v2.trans.id,
                                    is2nd: v2.trans.is2nd
                                },
                                op: v2.op,
                                rslice: v2.rslice
                            };
                        }();
                        var childm$prime = {
                            trans: {
                                edges: ProtoVoices_Model.horiEdgesMid(v1.childl.rslice)(v1.childm.trans.edges)(v1.childm.rslice),
                                id: v1.childm.trans.id,
                                is2nd: v1.childm.trans.is2nd
                            },
                            rslice: v1.childm.rslice,
                            op: v1.childm.op
                        };
                        var childl$prime = {
                            trans: {
                                edges: horiEdgesLeft(ag1.seg.trans.edges)(v1.childl.rslice),
                                id: v1.childl.trans.id,
                                is2nd: v1.childl.trans.is2nd
                            },
                            rslice: v1.childl.rslice,
                            op: v1.childl.op
                        };
                        return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Functor.map(Data_List_Types.functorList)(ProtoVoices_Folding.nothingMore)(Data_List_Types.Cons.create(childl$prime)(Data_List_Types.Cons.create(v1.childm)(new Data_List_Types.Cons(childr$prime, Data_List_Types.Nil.value)))));
                    };
                };
            };
        };
        var freeze = function(lslice) {
            return function(ag) {
                return Control_Monad_State_Class.modify_(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(function(st) {
                    return {
                        slices: Data_Array.snoc(st.slices)(ag.seg.rslice),
                        transs: Data_Array.snoc(st.transs)(ag.seg.trans.edges)
                    };
                });
            };
        };
        var surfaceAlg = {
            init: function(s) {
                return Control_Monad_State_Class.modify_(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(function(st) {
                    var $136 = {
                    };
                    for(var $137 in st)if (({
                    }).hasOwnProperty.call(st, $137)) $136[$137] = st[$137];
                    $136.slices = Data_Array.snoc(st.slices)(s);
                    return $136;
                });
            },
            freezeLeft: freeze,
            freezeOnly: freeze,
            splitLeft: function(v) {
                return split;
            },
            splitOnly: function(v) {
                return split;
            },
            splitRight: function(v) {
                return function(v1) {
                    return split;
                };
            },
            hori: hori
        };
        var agenda = Data_Functor.map(Data_List_Types.functorList)(ProtoVoices_Folding.nothingMore)(red.segments);
        return Data_Function.flip(Control_Monad_State.execState)({
            slices: [],
            transs: []
        })(ProtoVoices_Folding.walkGraph(surfaceAlg)(red.start)(agenda));
    };
    var countSteps = function(red) {
        var split = function(v) {
            return function(ag) {
                return function(v1) {
                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.modify_(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(function(v2) {
                        return v2 + 1 | 0;
                    }))(function() {
                        return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Functor.map(Data_List_Types.functorList)(ProtoVoices_Folding.nothingMore)(Data_List_Types.Cons.create(v1.childl)(new Data_List_Types.Cons(ProtoVoices_Model.attachSegment(v1.childr)(ag.seg.rslice), Data_List_Types.Nil.value))));
                    });
                };
            };
        };
        var splitRight = function(s) {
            return function(ag1) {
                return function(ag2) {
                    return split(s)(ag2);
                };
            };
        };
        var hori = function(v) {
            return function(v1) {
                return function(ag2) {
                    return function(v2) {
                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.modify_(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(function(v3) {
                            return v3 + 1 | 0;
                        }))(function() {
                            return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Functor.map(Data_List_Types.functorList)(ProtoVoices_Folding.nothingMore)(Data_List_Types.Cons.create(v2.childl)(Data_List_Types.Cons.create(v2.childm)(new Data_List_Types.Cons(ProtoVoices_Model.attachSegment(v2.childr)(ag2.seg.rslice), Data_List_Types.Nil.value)))));
                        });
                    };
                };
            };
        };
        var countingAlg = {
            init: function(v) {
                return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Unit.unit);
            },
            freezeLeft: function(v) {
                return function(v1) {
                    return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Unit.unit);
                };
            },
            freezeOnly: function(v) {
                return function(v1) {
                    return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Unit.unit);
                };
            },
            splitLeft: split,
            splitOnly: split,
            splitRight: splitRight,
            hori: hori
        };
        var agenda = Data_Functor.map(Data_List_Types.functorList)(ProtoVoices_Folding.nothingMore)(red.segments);
        return Data_Function.flip(Control_Monad_State.execState)(0)(ProtoVoices_Folding.walkGraph(countingAlg)(red.start)(agenda));
    };
    exports["pruneModel"] = pruneModel;
    exports["countSteps"] = countSteps;
    exports["findSurface"] = findSurface;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Common"] = $PS["Common"] || {
    };
    var exports = $PS["Common"];
    var Control_Applicative = $PS["Control.Applicative"];
    var Control_Bind = $PS["Control.Bind"];
    var Control_Category = $PS["Control.Category"];
    var Control_Monad_Except = $PS["Control.Monad.Except"];
    var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
    var Control_Monad_State = $PS["Control.Monad.State"];
    var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
    var Control_Monad_State_Trans = $PS["Control.Monad.State.Trans"];
    var Data_Either = $PS["Data.Either"];
    var Data_Function = $PS["Data.Function"];
    var Data_Identity = $PS["Data.Identity"];
    var Data_Map_Internal = $PS["Data.Map.Internal"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Data_Ord = $PS["Data.Ord"];
    var Data_Pitches_Class = $PS["Data.Pitches.Class"];
    var Data_Pitches_Spelled = $PS["Data.Pitches.Spelled"];
    var Data_Show = $PS["Data.Show"];
    var Foreign = $PS["Foreign"];
    var Foreign_Index = $PS["Foreign.Index"];
    var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
    var ProtoVoices_Folding = $PS["ProtoVoices.Folding"];
    var ProtoVoices_Model = $PS["ProtoVoices.Model"];
    var Pruning = $PS["Pruning"];
    var Init1 = function() {
        function Init() {
        }
        Init.value = new Init();
        return Init;
    }();
    var NoOp1 = function() {
        function NoOp() {
        }
        NoOp.value = new NoOp();
        return NoOp;
    }();
    var Select1 = function() {
        function Select(value0) {
            this.value0 = value0;
        }
        Select.create = function(value0) {
            return new Select(value0);
        };
        return Select;
    }();
    var Forward1 = function() {
        function Forward() {
        }
        Forward.value = new Forward();
        return Forward;
    }();
    var Backward1 = function() {
        function Backward() {
        }
        Backward.value = new Backward();
        return Backward;
    }();
    var ToFirst1 = function() {
        function ToFirst() {
        }
        ToFirst.value = new ToFirst();
        return ToFirst;
    }();
    var ToLast1 = function() {
        function ToLast() {
        }
        ToLast.value = new ToLast();
        return ToLast;
    }();
    var RegisterScoreElt1 = function() {
        function RegisterScoreElt(value0) {
            this.value0 = value0;
        }
        RegisterScoreElt.create = function(value0) {
            return new RegisterScoreElt(value0);
        };
        return RegisterScoreElt;
    }();
    var ToggleSettings1 = function() {
        function ToggleSettings() {
        }
        ToggleSettings.value = new ToggleSettings();
        return ToggleSettings;
    }();
    var ToggleInner1 = function() {
        function ToggleInner() {
        }
        ToggleInner.value = new ToggleInner();
        return ToggleInner;
    }();
    var ToggleOuter1 = function() {
        function ToggleOuter() {
        }
        ToggleOuter.value = new ToggleOuter();
        return ToggleOuter;
    }();
    var ToggleScore1 = function() {
        function ToggleScore() {
        }
        ToggleScore.value = new ToggleScore();
        return ToggleScore;
    }();
    var SetXScale1 = function() {
        function SetXScale(value0) {
            this.value0 = value0;
        }
        SetXScale.create = function(value0) {
            return new SetXScale(value0);
        };
        return SetXScale;
    }();
    var SetYScale1 = function() {
        function SetYScale(value0) {
            this.value0 = value0;
        }
        SetYScale.create = function(value0) {
            return new SetYScale(value0);
        };
        return SetYScale;
    }();
    var showExplanation = function(v) {
        if (v instanceof ProtoVoices_Model.NoExpl) return "unexplained";
        if (v instanceof ProtoVoices_Model.RootExpl) return "root note";
        if (v instanceof ProtoVoices_Model.DoubleExpl) {
            var ornStr = function() {
                if (v.value0.orn instanceof Data_Maybe.Just && v.value0.orn.value0 instanceof ProtoVoices_Model.FullNeighbor) return "full neighbor";
                if (v.value0.orn instanceof Data_Maybe.Just && v.value0.orn.value0 instanceof ProtoVoices_Model.FullRepeat) return "full repeat";
                if (v.value0.orn instanceof Data_Maybe.Just && v.value0.orn.value0 instanceof ProtoVoices_Model.LeftRepeatOfRight) return "left repeat";
                if (v.value0.orn instanceof Data_Maybe.Just && v.value0.orn.value0 instanceof ProtoVoices_Model.RightRepeatOfLeft) return "right repeat";
                if (v.value0.orn instanceof Data_Maybe.Just && v.value0.orn.value0 instanceof ProtoVoices_Model.PassingMid) return "middle passing note";
                if (v.value0.orn instanceof Data_Maybe.Just && v.value0.orn.value0 instanceof ProtoVoices_Model.PassingLeft) return "left passing note";
                if (v.value0.orn instanceof Data_Maybe.Just && v.value0.orn.value0 instanceof ProtoVoices_Model.PassingRight) return "right passing note";
                if (v.value0.orn instanceof Data_Maybe.Nothing) return "unexplained";
                throw new Error("Failed pattern match at Common (line 89, column 16 - line 97, column 33): " + [
                    v.value0.orn.constructor.name
                ]);
            }();
            return ornStr + (" between " + (Data_Show.show(Data_Pitches_Class.showPitchInst(Data_Pitches_Spelled.showpitchSInterval))(v.value0.leftParent.pitch) + (" and " + Data_Show.show(Data_Pitches_Class.showPitchInst(Data_Pitches_Spelled.showpitchSInterval))(v.value0.rightParent.pitch))));
        }
        if (v instanceof ProtoVoices_Model.RightExpl) {
            var ornStr = function() {
                if (v.value0.orn instanceof Data_Maybe.Just && v.value0.orn.value0 instanceof ProtoVoices_Model.RightRepeat) return "repeat";
                if (v.value0.orn instanceof Data_Maybe.Just && v.value0.orn.value0 instanceof ProtoVoices_Model.RightNeighbor) return "neighbor";
                if (v.value0.orn instanceof Data_Maybe.Nothing) return "ornament (unexplained)";
                throw new Error("Failed pattern match at Common (line 102, column 16 - line 105, column 44): " + [
                    v.value0.orn.constructor.name
                ]);
            }();
            return "right " + (ornStr + (" of " + Data_Show.show(Data_Pitches_Class.showPitchInst(Data_Pitches_Spelled.showpitchSInterval))(v.value0.leftParent.pitch)));
        }
        if (v instanceof ProtoVoices_Model.LeftExpl) {
            var ornStr = function() {
                if (v.value0.orn instanceof Data_Maybe.Just && v.value0.orn.value0 instanceof ProtoVoices_Model.LeftRepeat) return "repeat";
                if (v.value0.orn instanceof Data_Maybe.Just && v.value0.orn.value0 instanceof ProtoVoices_Model.LeftNeighbor) return "neighbor";
                if (v.value0.orn instanceof Data_Maybe.Nothing) return "ornament (unexplained)";
                throw new Error("Failed pattern match at Common (line 110, column 16 - line 113, column 44): " + [
                    v.value0.orn.constructor.name
                ]);
            }();
            return "left " + (ornStr + (" of " + Data_Show.show(Data_Pitches_Class.showPitchInst(Data_Pitches_Spelled.showpitchSInterval))(v.value0.rightParent.pitch)));
        }
        if (v instanceof ProtoVoices_Model.HoriExpl) return "spread from " + Data_Show.show(Data_Pitches_Class.showPitchInst(Data_Pitches_Spelled.showpitchSInterval))(v.value0.pitch);
        throw new Error("Failed pattern match at Common (line 84, column 19 - line 116, column 57): " + [
            v.constructor.name
        ]);
    };
    var noteIsSelected = function(v) {
        return function(v1) {
            if (v instanceof Data_Maybe.Just && v1 instanceof ProtoVoices_Model.Inner) return v.value0.note.id === v1.value0.id;
            return false;
        };
    };
    var fillCache = function(model) {
        return function(step) {
            return function(cache) {
                var insertItem = function(f) {
                    return function(place) {
                        var $38 = Data_Map_Internal.member(Data_Ord.ordInt)(step)(place);
                        if ($38) return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(place);
                        return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.get(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity)))(function(savedMPruned) {
                            return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(function() {
                                if (savedMPruned instanceof Data_Maybe.Nothing) {
                                    var mp = Pruning.pruneModel(step)(model);
                                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(Control_Monad_State_Class.put(Control_Monad_State_Trans.monadStateStateT(Data_Identity.monadIdentity))(new Data_Maybe.Just(mp)))(function() {
                                        return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(mp);
                                    });
                                }
                                if (savedMPruned instanceof Data_Maybe.Just) return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(savedMPruned.value0);
                                throw new Error("Failed pattern match at Common (line 135, column 18 - line 141, column 27): " + [
                                    savedMPruned.constructor.name
                                ]);
                            }())(function(mpruned) {
                                if (mpruned instanceof Data_Either.Left) return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(place);
                                if (mpruned instanceof Data_Either.Right) return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))(Data_Map_Internal.insert(Data_Ord.ordInt)(step)(f(mpruned.value0))(place));
                                throw new Error("Failed pattern match at Common (line 142, column 7 - line 144, column 54): " + [
                                    mpruned.constructor.name
                                ]);
                            });
                        });
                    };
                };
                return Data_Function.flip(Control_Monad_State.evalState)(Data_Maybe.Nothing.value)(Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(insertItem(Control_Category.identity(Control_Category.categoryFn))(cache.modelPruned))(function(pruned$prime) {
                    return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(insertItem(function() {
                        var $50 = ProtoVoices_Folding.evalGraph(true)(true);
                        return function($51) {
                            return $50(function(v) {
                                return v.reduction;
                            }($51));
                        };
                    }())(cache.graph))(function(graph$prime) {
                        return Control_Bind.bind(Control_Monad_State_Trans.bindStateT(Data_Identity.monadIdentity))(insertItem(function($52) {
                            return Pruning.findSurface(function(v) {
                                return v.reduction;
                            }($52));
                        })(cache.surface))(function(surface$prime) {
                            return Control_Applicative.pure(Control_Monad_State_Trans.applicativeStateT(Data_Identity.monadIdentity))({
                                modelPruned: pruned$prime,
                                graph: graph$prime,
                                surface: surface$prime
                            });
                        });
                    });
                }));
            };
        };
    };
    var emptyCache = {
        modelPruned: Data_Map_Internal.empty,
        graph: Data_Map_Internal.empty,
        surface: Data_Map_Internal.empty
    };
    var defaultSettings = {
        flatHori: true,
        xscale: 0,
        yscale: 0,
        showSettings: false,
        showInner: true,
        showOuter: true,
        showScore: true
    };
    var readOptions = function(obj) {
        return {
            flatHori: Data_Either.fromRight(defaultSettings.flatHori)(Control_Monad_Except.runExcept(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign_Index.ix(Foreign_Index.indexableForeign(Data_Identity.monadIdentity))(Foreign_Index.indexString(Data_Identity.monadIdentity))(obj)("flatHori"))(Foreign.readBoolean(Data_Identity.monadIdentity)))),
            xscale: Data_Either.fromRight(defaultSettings.xscale)(Control_Monad_Except.runExcept(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign_Index.ix(Foreign_Index.indexableForeign(Data_Identity.monadIdentity))(Foreign_Index.indexString(Data_Identity.monadIdentity))(obj)("xscale"))(Foreign.readNumber(Data_Identity.monadIdentity)))),
            yscale: Data_Either.fromRight(defaultSettings.yscale)(Control_Monad_Except.runExcept(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign_Index.ix(Foreign_Index.indexableForeign(Data_Identity.monadIdentity))(Foreign_Index.indexString(Data_Identity.monadIdentity))(obj)("yscale"))(Foreign.readNumber(Data_Identity.monadIdentity)))),
            showSettings: Data_Either.fromRight(defaultSettings.showSettings)(Control_Monad_Except.runExcept(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign_Index.ix(Foreign_Index.indexableForeign(Data_Identity.monadIdentity))(Foreign_Index.indexString(Data_Identity.monadIdentity))(obj)("showSettings"))(Foreign.readBoolean(Data_Identity.monadIdentity)))),
            showInner: Data_Either.fromRight(defaultSettings.showInner)(Control_Monad_Except.runExcept(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign_Index.ix(Foreign_Index.indexableForeign(Data_Identity.monadIdentity))(Foreign_Index.indexString(Data_Identity.monadIdentity))(obj)("showInner"))(Foreign.readBoolean(Data_Identity.monadIdentity)))),
            showOuter: Data_Either.fromRight(defaultSettings.showOuter)(Control_Monad_Except.runExcept(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign_Index.ix(Foreign_Index.indexableForeign(Data_Identity.monadIdentity))(Foreign_Index.indexString(Data_Identity.monadIdentity))(obj)("showOuter"))(Foreign.readBoolean(Data_Identity.monadIdentity)))),
            showScore: Data_Either.fromRight(defaultSettings.showScore)(Control_Monad_Except.runExcept(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign_Index.ix(Foreign_Index.indexableForeign(Data_Identity.monadIdentity))(Foreign_Index.indexString(Data_Identity.monadIdentity))(obj)("showScore"))(Foreign.readBoolean(Data_Identity.monadIdentity))))
        };
    };
    var class_ = function(str) {
        return Halogen_HTML_Properties.class_(str);
    };
    var cacheGetSurface = function(mpruned) {
        return function(step) {
            return function(cache) {
                var v = Data_Map_Internal.lookup(Data_Ord.ordInt)(step)(cache.surface);
                if (v instanceof Data_Maybe.Just) return v.value0;
                if (v instanceof Data_Maybe.Nothing) return Pruning.findSurface(mpruned.reduction);
                throw new Error("Failed pattern match at Common (line 157, column 38 - line 159, column 43): " + [
                    v.constructor.name
                ]);
            };
        };
    };
    var cacheGetPruned = function(model) {
        return function(step) {
            return function(cache) {
                var v = Data_Map_Internal.lookup(Data_Ord.ordInt)(step)(cache.modelPruned);
                if (v instanceof Data_Maybe.Just) return new Data_Either.Right(v.value0);
                if (v instanceof Data_Maybe.Nothing) return Pruning.pruneModel(step)(model);
                throw new Error("Failed pattern match at Common (line 147, column 35 - line 149, column 35): " + [
                    v.constructor.name
                ]);
            };
        };
    };
    var cacheGetGraph = function(mpruned) {
        return function(step) {
            return function(cache) {
                var v = Data_Map_Internal.lookup(Data_Ord.ordInt)(step)(cache.graph);
                if (v instanceof Data_Maybe.Just) return v.value0;
                if (v instanceof Data_Maybe.Nothing) return ProtoVoices_Folding.evalGraph(true)(true)(mpruned.reduction);
                throw new Error("Failed pattern match at Common (line 152, column 36 - line 154, column 51): " + [
                    v.constructor.name
                ]);
            };
        };
    };
    exports["class_"] = class_;
    exports["Init"] = Init1;
    exports["NoOp"] = NoOp1;
    exports["Select"] = Select1;
    exports["Forward"] = Forward1;
    exports["Backward"] = Backward1;
    exports["ToFirst"] = ToFirst1;
    exports["ToLast"] = ToLast1;
    exports["RegisterScoreElt"] = RegisterScoreElt1;
    exports["ToggleSettings"] = ToggleSettings1;
    exports["ToggleInner"] = ToggleInner1;
    exports["ToggleOuter"] = ToggleOuter1;
    exports["ToggleScore"] = ToggleScore1;
    exports["SetXScale"] = SetXScale1;
    exports["SetYScale"] = SetYScale1;
    exports["readOptions"] = readOptions;
    exports["noteIsSelected"] = noteIsSelected;
    exports["showExplanation"] = showExplanation;
    exports["emptyCache"] = emptyCache;
    exports["fillCache"] = fillCache;
    exports["cacheGetPruned"] = cacheGetPruned;
    exports["cacheGetGraph"] = cacheGetGraph;
    exports["cacheGetSurface"] = cacheGetSurface;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Control.Applicative.Free"] = $PS["Control.Applicative.Free"] || {
    };
    var exports = $PS["Control.Applicative.Free"];
    var Control_Applicative = $PS["Control.Applicative"];
    var Control_Apply = $PS["Control.Apply"];
    var Control_Category = $PS["Control.Category"];
    var Data_Either = $PS["Data.Either"];
    var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
    var Data_List_Types = $PS["Data.List.Types"];
    var Data_NonEmpty = $PS["Data.NonEmpty"];
    var Data_Tuple = $PS["Data.Tuple"];
    var Pure1 = function() {
        function Pure(value0) {
            this.value0 = value0;
        }
        Pure.create = function(value0) {
            return new Pure(value0);
        };
        return Pure;
    }();
    var Lift1 = function() {
        function Lift(value0) {
            this.value0 = value0;
        }
        Lift.create = function(value0) {
            return new Lift(value0);
        };
        return Lift;
    }();
    var Ap1 = function() {
        function Ap(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        }
        Ap.create = function(value0) {
            return function(value1) {
                return new Ap(value0, value1);
            };
        };
        return Ap;
    }();
    var mkAp = function(fba) {
        return function(fb) {
            return new Ap1(fba, fb);
        };
    };
    var liftFreeAp = Lift1.create;
    var goLeft = function($copy_dictApplicative) {
        return function($copy_fStack) {
            return function($copy_valStack) {
                return function($copy_nat) {
                    return function($copy_func) {
                        return function($copy_count) {
                            var $tco_var_dictApplicative = $copy_dictApplicative;
                            var $tco_var_fStack = $copy_fStack;
                            var $tco_var_valStack = $copy_valStack;
                            var $tco_var_nat = $copy_nat;
                            var $tco_var_func = $copy_func;
                            var $tco_done = false;
                            var $tco_result;
                            function $tco_loop(dictApplicative, fStack, valStack, nat, func, count) {
                                if (func instanceof Pure1) {
                                    $tco_done = true;
                                    return new Data_Tuple.Tuple(new Data_List_Types.Cons({
                                        func: Control_Applicative.pure(dictApplicative)(func.value0),
                                        count: count
                                    }, fStack), valStack);
                                }
                                if (func instanceof Lift1) {
                                    $tco_done = true;
                                    return new Data_Tuple.Tuple(new Data_List_Types.Cons({
                                        func: nat(func.value0),
                                        count: count
                                    }, fStack), valStack);
                                }
                                if (func instanceof Ap1) {
                                    $tco_var_dictApplicative = dictApplicative;
                                    $tco_var_fStack = fStack;
                                    $tco_var_valStack = Data_List_NonEmpty.cons(func.value1)(valStack);
                                    $tco_var_nat = nat;
                                    $tco_var_func = func.value0;
                                    $copy_count = count + 1 | 0;
                                    return;
                                }
                                throw new Error("Failed pattern match at Control.Applicative.Free (line 102, column 41 - line 105, column 81): " + [
                                    func.constructor.name
                                ]);
                            }
                            while(!$tco_done)$tco_result = $tco_loop($tco_var_dictApplicative, $tco_var_fStack, $tco_var_valStack, $tco_var_nat, $tco_var_func, $copy_count);
                            return $tco_result;
                        };
                    };
                };
            };
        };
    };
    var goApply = function($copy_dictApplicative) {
        return function($copy_fStack) {
            return function($copy_vals) {
                return function($copy_gVal) {
                    var $tco_var_dictApplicative = $copy_dictApplicative;
                    var $tco_var_fStack = $copy_fStack;
                    var $tco_var_vals = $copy_vals;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(dictApplicative, fStack, vals, gVal) {
                        if (fStack instanceof Data_List_Types.Nil) {
                            $tco_done = true;
                            return new Data_Either.Left(gVal);
                        }
                        if (fStack instanceof Data_List_Types.Cons) {
                            var gRes = Control_Apply.apply(dictApplicative.Apply0())(fStack.value0.func)(gVal);
                            var $14 = fStack.value0.count === 1;
                            if ($14) {
                                if (fStack.value1 instanceof Data_List_Types.Nil) {
                                    $tco_done = true;
                                    return new Data_Either.Left(gRes);
                                }
                                $tco_var_dictApplicative = dictApplicative;
                                $tco_var_fStack = fStack.value1;
                                $tco_var_vals = vals;
                                $copy_gVal = gRes;
                                return;
                            }
                            if (vals instanceof Data_List_Types.Nil) {
                                $tco_done = true;
                                return new Data_Either.Left(gRes);
                            }
                            if (vals instanceof Data_List_Types.Cons) {
                                $tco_done = true;
                                return Data_Either.Right.create(new Data_Tuple.Tuple(new Data_List_Types.Cons({
                                    func: gRes,
                                    count: fStack.value0.count - 1 | 0
                                }, fStack.value1), new Data_NonEmpty.NonEmpty(vals.value0, vals.value1)));
                            }
                            throw new Error("Failed pattern match at Control.Applicative.Free (line 83, column 11 - line 88, column 50): " + [
                                vals.constructor.name
                            ]);
                        }
                        throw new Error("Failed pattern match at Control.Applicative.Free (line 72, column 3 - line 88, column 50): " + [
                            fStack.constructor.name
                        ]);
                    }
                    while(!$tco_done)$tco_result = $tco_loop($tco_var_dictApplicative, $tco_var_fStack, $tco_var_vals, $copy_gVal);
                    return $tco_result;
                };
            };
        };
    };
    var functorFreeAp = {
        map: function(f) {
            return function(x) {
                return mkAp(new Pure1(f))(x);
            };
        }
    };
    var foldFreeAp = function(dictApplicative) {
        return function(nat) {
            return function(z) {
                var go = function($copy_v) {
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(v) {
                        if (v.value1.value0 instanceof Pure1) {
                            var v1 = goApply(dictApplicative)(v.value0)(v.value1.value1)(Control_Applicative.pure(dictApplicative)(v.value1.value0.value0));
                            if (v1 instanceof Data_Either.Left) {
                                $tco_done = true;
                                return v1.value0;
                            }
                            if (v1 instanceof Data_Either.Right) {
                                $copy_v = v1.value0;
                                return;
                            }
                            throw new Error("Failed pattern match at Control.Applicative.Free (line 54, column 17 - line 56, column 24): " + [
                                v1.constructor.name
                            ]);
                        }
                        if (v.value1.value0 instanceof Lift1) {
                            var v1 = goApply(dictApplicative)(v.value0)(v.value1.value1)(nat(v.value1.value0.value0));
                            if (v1 instanceof Data_Either.Left) {
                                $tco_done = true;
                                return v1.value0;
                            }
                            if (v1 instanceof Data_Either.Right) {
                                $copy_v = v1.value0;
                                return;
                            }
                            throw new Error("Failed pattern match at Control.Applicative.Free (line 57, column 17 - line 59, column 24): " + [
                                v1.constructor.name
                            ]);
                        }
                        if (v.value1.value0 instanceof Ap1) {
                            var nextVals = new Data_NonEmpty.NonEmpty(v.value1.value0.value1, v.value1.value1);
                            $copy_v = goLeft(dictApplicative)(v.value0)(nextVals)(nat)(v.value1.value0.value0)(1);
                            return;
                        }
                        throw new Error("Failed pattern match at Control.Applicative.Free (line 53, column 5 - line 62, column 47): " + [
                            v.value1.value0.constructor.name
                        ]);
                    }
                    while(!$tco_done)$tco_result = $tco_loop($copy_v);
                    return $tco_result;
                };
                return go(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_List_NonEmpty.singleton(z)));
            };
        };
    };
    var retractFreeAp = function(dictApplicative) {
        return foldFreeAp(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
    };
    var applyFreeAp = {
        apply: function(fba) {
            return function(fb) {
                return mkAp(fba)(fb);
            };
        },
        Functor0: function() {
            return functorFreeAp;
        }
    };
    var applicativeFreeAp = {
        pure: Pure1.create,
        Apply0: function() {
            return applyFreeAp;
        }
    };
    var hoistFreeAp = function(f) {
        return foldFreeAp(applicativeFreeAp)(function($37) {
            return liftFreeAp(f($37));
        });
    };
    exports["retractFreeAp"] = retractFreeAp;
    exports["hoistFreeAp"] = hoistFreeAp;
})($a63366291e3889d2$var$PS);
(function(exports) {
    var Aff1 = function() {
        // A unique value for empty.
        var EMPTY = {
        };
        /*

  An awkward approximation. We elide evidence we would otherwise need in PS for
  efficiency sake.

  data Aff eff a
    = Pure a
    | Throw Error
    | Catch (Aff eff a) (Error -> Aff eff a)
    | Sync (Eff eff a)
    | Async ((Either Error a -> Eff eff Unit) -> Eff eff (Canceler eff))
    | forall b. Bind (Aff eff b) (b -> Aff eff a)
    | forall b. Bracket (Aff eff b) (BracketConditions eff b) (b -> Aff eff a)
    | forall b. Fork Boolean (Aff eff b) ?(Fiber eff b -> a)
    | Sequential (ParAff aff a)

  */ var PURE = "Pure";
        var THROW = "Throw";
        var CATCH = "Catch";
        var SYNC = "Sync";
        var ASYNC = "Async";
        var BIND = "Bind";
        var BRACKET = "Bracket";
        var FORK = "Fork";
        var SEQ = "Sequential";
        /*

  data ParAff eff a
    = forall b. Map (b -> a) (ParAff eff b)
    | forall b. Apply (ParAff eff (b -> a)) (ParAff eff b)
    | Alt (ParAff eff a) (ParAff eff a)
    | ?Par (Aff eff a)

  */ var MAP = "Map";
        var APPLY = "Apply";
        var ALT = "Alt";
        // Various constructors used in interpretation
        var CONS = "Cons"; // Cons-list, for stacks
        var RESUME = "Resume"; // Continue indiscriminately
        var RELEASE = "Release"; // Continue with bracket finalizers
        var FINALIZER = "Finalizer"; // A non-interruptible effect
        var FINALIZED = "Finalized"; // Marker for finalization
        var FORKED = "Forked"; // Reference to a forked fiber, with resumption stack
        var FIBER = "Fiber"; // Actual fiber reference
        var THUNK = "Thunk"; // Primed effect, ready to invoke
        function Aff(tag, _1, _2, _3) {
            this.tag = tag;
            this._1 = _1;
            this._2 = _2;
            this._3 = _3;
        }
        function AffCtr(tag) {
            var fn = function(_1, _2, _3) {
                return new Aff(tag, _1, _2, _3);
            };
            fn.tag = tag;
            return fn;
        }
        function nonCanceler(error) {
            return new Aff(PURE, void 0);
        }
        function runEff(eff) {
            try {
                eff();
            } catch (error) {
                setTimeout(function() {
                    throw error;
                }, 0);
            }
        }
        function runSync(left, right, eff) {
            try {
                return right(eff());
            } catch (error) {
                return left(error);
            }
        }
        function runAsync(left, eff, k) {
            try {
                return eff(k)();
            } catch (error) {
                k(left(error))();
                return nonCanceler;
            }
        }
        var Scheduler = function() {
            var limit = 1024;
            var size = 0;
            var ix = 0;
            var queue = new Array(limit);
            var draining = false;
            function drain() {
                var thunk;
                draining = true;
                while(size !== 0){
                    size--;
                    thunk = queue[ix];
                    queue[ix] = void 0;
                    ix = (ix + 1) % limit;
                    thunk();
                }
                draining = false;
            }
            return {
                isDraining: function() {
                    return draining;
                },
                enqueue: function(cb) {
                    var i, tmp;
                    if (size === limit) {
                        tmp = draining;
                        drain();
                        draining = tmp;
                    }
                    queue[(ix + size) % limit] = cb;
                    size++;
                    if (!draining) drain();
                }
            };
        }();
        function Supervisor(util) {
            var fibers = {
            };
            var fiberId = 0;
            var count = 0;
            return {
                register: function(fiber) {
                    var fid = fiberId++;
                    fiber.onComplete({
                        rethrow: true,
                        handler: function(result) {
                            return function() {
                                count--;
                                delete fibers[fid];
                            };
                        }
                    })();
                    fibers[fid] = fiber;
                    count++;
                },
                isEmpty: function() {
                    return count === 0;
                },
                killAll: function(killError, cb) {
                    return function() {
                        if (count === 0) return cb();
                        var killCount = 0;
                        var kills = {
                        };
                        function kill(fid) {
                            kills[fid] = fibers[fid].kill(killError, function(result) {
                                return function() {
                                    delete kills[fid];
                                    killCount--;
                                    if (util.isLeft(result) && util.fromLeft(result)) setTimeout(function() {
                                        throw util.fromLeft(result);
                                    }, 0);
                                    if (killCount === 0) cb();
                                };
                            })();
                        }
                        for(var k1 in fibers)if (fibers.hasOwnProperty(k1)) {
                            killCount++;
                            kill(k1);
                        }
                        fibers = {
                        };
                        fiberId = 0;
                        count = 0;
                        return function(error) {
                            return new Aff(SYNC, function() {
                                for(var k in kills)if (kills.hasOwnProperty(k)) kills[k]();
                            });
                        };
                    };
                }
            };
        }
        // Fiber state machine
        var SUSPENDED = 0; // Suspended, pending a join.
        var CONTINUE = 1; // Interpret the next instruction.
        var STEP_BIND = 2; // Apply the next bind.
        var STEP_RESULT = 3; // Handle potential failure from a result.
        var PENDING = 4; // An async effect is running.
        var RETURN = 5; // The current stack has returned.
        var COMPLETED = 6; // The entire fiber has completed.
        function Fiber(util, supervisor, aff) {
            // Monotonically increasing tick, increased on each asynchronous turn.
            var runTick = 0;
            // The current branch of the state machine.
            var status = SUSPENDED;
            // The current point of interest for the state machine branch.
            var step = aff; // Successful step
            var fail = null; // Failure step
            var interrupt = null; // Asynchronous interrupt
            // Stack of continuations for the current fiber.
            var bhead = null;
            var btail = null;
            // Stack of attempts and finalizers for error recovery. Every `Cons` is also
            // tagged with current `interrupt` state. We use this to track which items
            // should be ignored or evaluated as a result of a kill.
            var attempts = null;
            // A special state is needed for Bracket, because it cannot be killed. When
            // we enter a bracket acquisition or finalizer, we increment the counter,
            // and then decrement once complete.
            var bracketCount = 0;
            // Each join gets a new id so they can be revoked.
            var joinId = 0;
            var joins = null;
            var rethrow = true;
            // Each invocation of `run` requires a tick. When an asynchronous effect is
            // resolved, we must check that the local tick coincides with the fiber
            // tick before resuming. This prevents multiple async continuations from
            // accidentally resuming the same fiber. A common example may be invoking
            // the provided callback in `makeAff` more than once, but it may also be an
            // async effect resuming after the fiber was already cancelled.
            function run(localRunTick) {
                var tmp, result1, attempt;
                while(true){
                    tmp = null;
                    result1 = null;
                    attempt = null;
                    switch(status){
                        case STEP_BIND:
                            status = CONTINUE;
                            try {
                                step = bhead(step);
                                if (btail === null) bhead = null;
                                else {
                                    bhead = btail._1;
                                    btail = btail._2;
                                }
                            } catch (e) {
                                status = RETURN;
                                fail = util.left(e);
                                step = null;
                            }
                            break;
                        case STEP_RESULT:
                            if (util.isLeft(step)) {
                                status = RETURN;
                                fail = step;
                                step = null;
                            } else if (bhead === null) status = RETURN;
                            else {
                                status = STEP_BIND;
                                step = util.fromRight(step);
                            }
                            break;
                        case CONTINUE:
                            switch(step.tag){
                                case BIND:
                                    if (bhead) btail = new Aff(CONS, bhead, btail);
                                    bhead = step._2;
                                    status = CONTINUE;
                                    step = step._1;
                                    break;
                                case PURE:
                                    if (bhead === null) {
                                        status = RETURN;
                                        step = util.right(step._1);
                                    } else {
                                        status = STEP_BIND;
                                        step = step._1;
                                    }
                                    break;
                                case SYNC:
                                    status = STEP_RESULT;
                                    step = runSync(util.left, util.right, step._1);
                                    break;
                                case ASYNC:
                                    status = PENDING;
                                    step = runAsync(util.left, step._1, function(result) {
                                        return function() {
                                            if (runTick !== localRunTick) return;
                                            runTick++;
                                            Scheduler.enqueue(function() {
                                                // It's possible to interrupt the fiber between enqueuing and
                                                // resuming, so we need to check that the runTick is still
                                                // valid.
                                                if (runTick !== localRunTick + 1) return;
                                                status = STEP_RESULT;
                                                step = result;
                                                run(runTick);
                                            });
                                        };
                                    });
                                    return;
                                case THROW:
                                    status = RETURN;
                                    fail = util.left(step._1);
                                    step = null;
                                    break;
                                // Enqueue the Catch so that we can call the error handler later on
                                // in case of an exception.
                                case CATCH:
                                    if (bhead === null) attempts = new Aff(CONS, step, attempts, interrupt);
                                    else attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
                                    bhead = null;
                                    btail = null;
                                    status = CONTINUE;
                                    step = step._1;
                                    break;
                                // Enqueue the Bracket so that we can call the appropriate handlers
                                // after resource acquisition.
                                case BRACKET:
                                    bracketCount++;
                                    if (bhead === null) attempts = new Aff(CONS, step, attempts, interrupt);
                                    else attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
                                    bhead = null;
                                    btail = null;
                                    status = CONTINUE;
                                    step = step._1;
                                    break;
                                case FORK:
                                    status = STEP_RESULT;
                                    tmp = Fiber(util, supervisor, step._2);
                                    if (supervisor) supervisor.register(tmp);
                                    if (step._1) tmp.run();
                                    step = util.right(tmp);
                                    break;
                                case SEQ:
                                    status = CONTINUE;
                                    step = sequential(util, supervisor, step._1);
                                    break;
                            }
                            break;
                        case RETURN:
                            bhead = null;
                            btail = null;
                            // If the current stack has returned, and we have no other stacks to
                            // resume or finalizers to run, the fiber has halted and we can
                            // invoke all join callbacks. Otherwise we need to resume.
                            if (attempts === null) {
                                status = COMPLETED;
                                step = interrupt || fail || step;
                            } else {
                                // The interrupt status for the enqueued item.
                                tmp = attempts._3;
                                attempt = attempts._1;
                                attempts = attempts._2;
                                switch(attempt.tag){
                                    // We cannot recover from an unmasked interrupt. Otherwise we should
                                    // continue stepping, or run the exception handler if an exception
                                    // was raised.
                                    case CATCH:
                                        // We should compare the interrupt status as well because we
                                        // only want it to apply if there has been an interrupt since
                                        // enqueuing the catch.
                                        if (interrupt && interrupt !== tmp && bracketCount === 0) status = RETURN;
                                        else if (fail) {
                                            status = CONTINUE;
                                            step = attempt._2(util.fromLeft(fail));
                                            fail = null;
                                        }
                                        break;
                                    // We cannot resume from an unmasked interrupt or exception.
                                    case RESUME:
                                        // As with Catch, we only want to ignore in the case of an
                                        // interrupt since enqueing the item.
                                        if (interrupt && interrupt !== tmp && bracketCount === 0 || fail) status = RETURN;
                                        else {
                                            bhead = attempt._1;
                                            btail = attempt._2;
                                            status = STEP_BIND;
                                            step = util.fromRight(step);
                                        }
                                        break;
                                    // If we have a bracket, we should enqueue the handlers,
                                    // and continue with the success branch only if the fiber has
                                    // not been interrupted. If the bracket acquisition failed, we
                                    // should not run either.
                                    case BRACKET:
                                        bracketCount--;
                                        if (fail === null) {
                                            result1 = util.fromRight(step);
                                            // We need to enqueue the Release with the same interrupt
                                            // status as the Bracket that is initiating it.
                                            attempts = new Aff(CONS, new Aff(RELEASE, attempt._2, result1), attempts, tmp);
                                            // We should only coninue as long as the interrupt status has not changed or
                                            // we are currently within a non-interruptable finalizer.
                                            if (interrupt === tmp || bracketCount > 0) {
                                                status = CONTINUE;
                                                step = attempt._3(result1);
                                            }
                                        }
                                        break;
                                    // Enqueue the appropriate handler. We increase the bracket count
                                    // because it should not be cancelled.
                                    case RELEASE:
                                        attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                                        status = CONTINUE;
                                        // It has only been killed if the interrupt status has changed
                                        // since we enqueued the item, and the bracket count is 0. If the
                                        // bracket count is non-zero then we are in a masked state so it's
                                        // impossible to be killed.
                                        if (interrupt && interrupt !== tmp && bracketCount === 0) step = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);
                                        else if (fail) step = attempt._1.failed(util.fromLeft(fail))(attempt._2);
                                        else step = attempt._1.completed(util.fromRight(step))(attempt._2);
                                        fail = null;
                                        bracketCount++;
                                        break;
                                    case FINALIZER:
                                        bracketCount++;
                                        attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                                        status = CONTINUE;
                                        step = attempt._1;
                                        break;
                                    case FINALIZED:
                                        bracketCount--;
                                        status = RETURN;
                                        step = attempt._1;
                                        fail = attempt._2;
                                        break;
                                }
                            }
                            break;
                        case COMPLETED:
                            for(var k in joins)if (joins.hasOwnProperty(k)) {
                                rethrow = rethrow && joins[k].rethrow;
                                runEff(joins[k].handler(step));
                            }
                            joins = null;
                            // If we have an interrupt and a fail, then the thread threw while
                            // running finalizers. This should always rethrow in a fresh stack.
                            if (interrupt && fail) setTimeout(function() {
                                throw util.fromLeft(fail);
                            }, 0);
                            else if (util.isLeft(step) && rethrow) setTimeout(function() {
                                // Guard on reathrow because a completely synchronous fiber can
                                // still have an observer which was added after-the-fact.
                                if (rethrow) throw util.fromLeft(step);
                            }, 0);
                            return;
                        case SUSPENDED:
                            status = CONTINUE;
                            break;
                        case PENDING:
                            return;
                    }
                }
            }
            function onComplete(join) {
                return function() {
                    if (status === COMPLETED) {
                        rethrow = rethrow && join.rethrow;
                        join.handler(step)();
                        return function() {
                        };
                    }
                    var jid = joinId++;
                    joins = joins || {
                    };
                    joins[jid] = join;
                    return function() {
                        if (joins !== null) delete joins[jid];
                    };
                };
            }
            function kill(error, cb) {
                return function() {
                    if (status === COMPLETED) {
                        cb(util.right(void 0))();
                        return function() {
                        };
                    }
                    var canceler = onComplete({
                        rethrow: false,
                        handler: function() {
                            return cb(util.right(void 0));
                        }
                    })();
                    switch(status){
                        case SUSPENDED:
                            interrupt = util.left(error);
                            status = COMPLETED;
                            step = interrupt;
                            run(runTick);
                            break;
                        case PENDING:
                            if (interrupt === null) interrupt = util.left(error);
                            if (bracketCount === 0) {
                                if (status === PENDING) attempts = new Aff(CONS, new Aff(FINALIZER, step(error)), attempts, interrupt);
                                status = RETURN;
                                step = null;
                                fail = null;
                                run(++runTick);
                            }
                            break;
                        default:
                            if (interrupt === null) interrupt = util.left(error);
                            if (bracketCount === 0) {
                                status = RETURN;
                                step = null;
                                fail = null;
                            }
                    }
                    return canceler;
                };
            }
            function join1(cb) {
                return function() {
                    var canceler = onComplete({
                        rethrow: false,
                        handler: cb
                    })();
                    if (status === SUSPENDED) run(runTick);
                    return canceler;
                };
            }
            return {
                kill: kill,
                join: join1,
                onComplete: onComplete,
                isSuspended: function() {
                    return status === SUSPENDED;
                },
                run: function() {
                    if (status === SUSPENDED) {
                        if (!Scheduler.isDraining()) Scheduler.enqueue(function() {
                            run(runTick);
                        });
                        else run(runTick);
                    }
                }
            };
        }
        function runPar(util, supervisor, par1, cb1) {
            // Table of all forked fibers.
            var fiberId = 0;
            var fibers = {
            };
            // Table of currently running cancelers, as a product of `Alt` behavior.
            var killId = 0;
            var kills1 = {
            };
            // Error used for early cancelation on Alt branches.
            var early = new Error("[ParAff] Early exit");
            // Error used to kill the entire tree.
            var interrupt = null;
            // The root pointer of the tree.
            var root = EMPTY;
            // Walks a tree, invoking all the cancelers. Returns the table of pending
            // cancellation fibers.
            function kill(error, par, cb) {
                var step = par;
                var head = null;
                var tail = null;
                var count = 0;
                var kills = {
                };
                var tmp, kid;
                loop: while(true){
                    tmp = null;
                    switch(step.tag){
                        case FORKED:
                            if (step._3 === EMPTY) {
                                tmp = fibers[step._1];
                                kills[count++] = tmp.kill(error, function(result) {
                                    return function() {
                                        count--;
                                        if (count === 0) cb(result)();
                                    };
                                });
                            }
                            // Terminal case.
                            if (head === null) break loop;
                            // Go down the right side of the tree.
                            step = head._2;
                            if (tail === null) head = null;
                            else {
                                head = tail._1;
                                tail = tail._2;
                            }
                            break;
                        case MAP:
                            step = step._2;
                            break;
                        case APPLY:
                        case ALT:
                            if (head) tail = new Aff(CONS, head, tail);
                            head = step;
                            step = step._1;
                            break;
                    }
                }
                if (count === 0) cb(util.right(void 0))();
                else {
                    // Run the cancelation effects. We alias `count` because it's mutable.
                    kid = 0;
                    tmp = count;
                    for(; kid < tmp; kid++)kills[kid] = kills[kid]();
                }
                return kills;
            }
            // When a fiber resolves, we need to bubble back up the tree with the
            // result, computing the applicative nodes.
            function join(result, head, tail) {
                var fail, step, lhs, rhs, tmp, kid;
                if (util.isLeft(result)) {
                    fail = result;
                    step = null;
                } else {
                    step = result;
                    fail = null;
                }
                loop: while(true){
                    lhs = null;
                    rhs = null;
                    tmp = null;
                    kid = null;
                    // We should never continue if the entire tree has been interrupted.
                    if (interrupt !== null) return;
                    // We've made it all the way to the root of the tree, which means
                    // the tree has fully evaluated.
                    if (head === null) {
                        cb1(fail || step)();
                        return;
                    }
                    // The tree has already been computed, so we shouldn't try to do it
                    // again. This should never happen.
                    // TODO: Remove this?
                    if (head._3 !== EMPTY) return;
                    switch(head.tag){
                        case MAP:
                            if (fail === null) {
                                head._3 = util.right(head._1(util.fromRight(step)));
                                step = head._3;
                            } else head._3 = fail;
                            break;
                        case APPLY:
                            lhs = head._1._3;
                            rhs = head._2._3;
                            // If we have a failure we should kill the other side because we
                            // can't possible yield a result anymore.
                            if (fail) {
                                head._3 = fail;
                                tmp = true;
                                kid = killId++;
                                kills1[kid] = kill(early, fail === lhs ? head._2 : head._1, function() {
                                    return function() {
                                        delete kills1[kid];
                                        if (tmp) tmp = false;
                                        else if (tail === null) join(fail, null, null);
                                        else join(fail, tail._1, tail._2);
                                    };
                                });
                                if (tmp) {
                                    tmp = false;
                                    return;
                                }
                            } else if (lhs === EMPTY || rhs === EMPTY) // We can only proceed if both sides have resolved.
                            return;
                            else {
                                step = util.right(util.fromRight(lhs)(util.fromRight(rhs)));
                                head._3 = step;
                            }
                            break;
                        case ALT:
                            lhs = head._1._3;
                            rhs = head._2._3;
                            // We can only proceed if both have resolved or we have a success
                            if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) return;
                            // If both sides resolve with an error, we should continue with the
                            // first error
                            if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {
                                fail = step === lhs ? rhs : lhs;
                                step = null;
                                head._3 = fail;
                            } else {
                                head._3 = step;
                                tmp = true;
                                kid = killId++;
                                // Once a side has resolved, we need to cancel the side that is still
                                // pending before we can continue.
                                kills1[kid] = kill(early, step === lhs ? head._2 : head._1, function() {
                                    return function() {
                                        delete kills1[kid];
                                        if (tmp) tmp = false;
                                        else if (tail === null) join(step, null, null);
                                        else join(step, tail._1, tail._2);
                                    };
                                });
                                if (tmp) {
                                    tmp = false;
                                    return;
                                }
                            }
                            break;
                    }
                    if (tail === null) head = null;
                    else {
                        head = tail._1;
                        tail = tail._2;
                    }
                }
            }
            function resolve(fiber) {
                return function(result) {
                    return function() {
                        delete fibers[fiber._1];
                        fiber._3 = result;
                        join(result, fiber._2._1, fiber._2._2);
                    };
                };
            }
            // Walks the applicative tree, substituting non-applicative nodes with
            // `FORKED` nodes. In this tree, all applicative nodes use the `_3` slot
            // as a mutable slot for memoization. In an unresolved state, the `_3`
            // slot is `EMPTY`. In the cases of `ALT` and `APPLY`, we always walk
            // the left side first, because both operations are left-associative. As
            // we `RETURN` from those branches, we then walk the right side.
            function run() {
                var status = CONTINUE;
                var step = par1;
                var head = null;
                var tail = null;
                var tmp, fid;
                loop: while(true){
                    tmp = null;
                    fid = null;
                    switch(status){
                        case CONTINUE:
                            switch(step.tag){
                                case MAP:
                                    if (head) tail = new Aff(CONS, head, tail);
                                    head = new Aff(MAP, step._1, EMPTY, EMPTY);
                                    step = step._2;
                                    break;
                                case APPLY:
                                    if (head) tail = new Aff(CONS, head, tail);
                                    head = new Aff(APPLY, EMPTY, step._2, EMPTY);
                                    step = step._1;
                                    break;
                                case ALT:
                                    if (head) tail = new Aff(CONS, head, tail);
                                    head = new Aff(ALT, EMPTY, step._2, EMPTY);
                                    step = step._1;
                                    break;
                                default:
                                    // When we hit a leaf value, we suspend the stack in the `FORKED`.
                                    // When the fiber resolves, it can bubble back up the tree.
                                    fid = fiberId++;
                                    status = RETURN;
                                    tmp = step;
                                    step = new Aff(FORKED, fid, new Aff(CONS, head, tail), EMPTY);
                                    tmp = Fiber(util, supervisor, tmp);
                                    tmp.onComplete({
                                        rethrow: false,
                                        handler: resolve(step)
                                    })();
                                    fibers[fid] = tmp;
                                    if (supervisor) supervisor.register(tmp);
                            }
                            break;
                        case RETURN:
                            // Terminal case, we are back at the root.
                            if (head === null) break loop;
                            // If we are done with the right side, we need to continue down the
                            // left. Otherwise we should continue up the stack.
                            if (head._1 === EMPTY) {
                                head._1 = step;
                                status = CONTINUE;
                                step = head._2;
                                head._2 = EMPTY;
                            } else {
                                head._2 = step;
                                step = head;
                                if (tail === null) head = null;
                                else {
                                    head = tail._1;
                                    tail = tail._2;
                                }
                            }
                    }
                }
                // Keep a reference to the tree root so it can be cancelled.
                root = step;
                for(fid = 0; fid < fiberId; fid++)fibers[fid].run();
            }
            // Cancels the entire tree. If there are already subtrees being canceled,
            // we need to first cancel those joins. We will then add fresh joins for
            // all pending branches including those that were in the process of being
            // canceled.
            function cancel(error, cb) {
                interrupt = util.left(error);
                var innerKills;
                for(var kid1 in kills1)if (kills1.hasOwnProperty(kid1)) {
                    innerKills = kills1[kid1];
                    for(kid1 in innerKills)if (innerKills.hasOwnProperty(kid1)) innerKills[kid1]();
                }
                kills1 = null;
                var newKills = kill(error, root, cb);
                return function(killError) {
                    return new Aff(ASYNC, function(killCb) {
                        return function() {
                            for(var kid in newKills)if (newKills.hasOwnProperty(kid)) newKills[kid]();
                            return nonCanceler;
                        };
                    });
                };
            }
            run();
            return function(killError) {
                return new Aff(ASYNC, function(killCb) {
                    return function() {
                        return cancel(killError, killCb);
                    };
                });
            };
        }
        function sequential(util, supervisor, par) {
            return new Aff(ASYNC, function(cb) {
                return function() {
                    return runPar(util, supervisor, par, cb);
                };
            });
        }
        Aff.EMPTY = EMPTY;
        Aff.Pure = AffCtr(PURE);
        Aff.Throw = AffCtr(THROW);
        Aff.Catch = AffCtr(CATCH);
        Aff.Sync = AffCtr(SYNC);
        Aff.Async = AffCtr(ASYNC);
        Aff.Bind = AffCtr(BIND);
        Aff.Bracket = AffCtr(BRACKET);
        Aff.Fork = AffCtr(FORK);
        Aff.Seq = AffCtr(SEQ);
        Aff.ParMap = AffCtr(MAP);
        Aff.ParApply = AffCtr(APPLY);
        Aff.ParAlt = AffCtr(ALT);
        Aff.Fiber = Fiber;
        Aff.Supervisor = Supervisor;
        Aff.Scheduler = Scheduler;
        Aff.nonCanceler = nonCanceler;
        return Aff;
    }();
    exports._pure = Aff1.Pure;
    exports._throwError = Aff1.Throw;
    exports._catchError = function(aff) {
        return function(k) {
            return Aff1.Catch(aff, k);
        };
    };
    exports._map = function(f) {
        return function(aff) {
            if (aff.tag === Aff1.Pure.tag) return Aff1.Pure(f(aff._1));
            else return Aff1.Bind(aff, function(value) {
                return Aff1.Pure(f(value));
            });
        };
    };
    exports._bind = function(aff) {
        return function(k) {
            return Aff1.Bind(aff, k);
        };
    };
    exports._fork = function(immediate) {
        return function(aff) {
            return Aff1.Fork(immediate, aff);
        };
    };
    exports._liftEffect = Aff1.Sync;
    exports._parAffMap = function(f) {
        return function(aff) {
            return Aff1.ParMap(f, aff);
        };
    };
    exports._parAffApply = function(aff1) {
        return function(aff2) {
            return Aff1.ParApply(aff1, aff2);
        };
    };
    exports.makeAff = Aff1.Async;
    exports.generalBracket = function(acquire) {
        return function(options) {
            return function(k) {
                return Aff1.Bracket(acquire, options, k);
            };
        };
    };
    exports._makeFiber = function(util, aff) {
        return function() {
            return Aff1.Fiber(util, null, aff);
        };
    };
    exports._sequential = Aff1.Seq;
})($a63366291e3889d2$var$PS["Effect.Aff"] = $a63366291e3889d2$var$PS["Effect.Aff"] || {
});
(function($PS) {
    $PS["Control.Parallel.Class"] = $PS["Control.Parallel.Class"] || {
    };
    var exports = $PS["Control.Parallel.Class"];
    var sequential = function(dict) {
        return dict.sequential;
    };
    var parallel = function(dict) {
        return dict.parallel;
    };
    exports["parallel"] = parallel;
    exports["sequential"] = sequential;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Effect.Class"] = $PS["Effect.Class"] || {
    };
    var exports = $PS["Effect.Class"];
    var Control_Category = $PS["Control.Category"];
    var Effect = $PS["Effect"];
    var monadEffectEffect = {
        liftEffect: Control_Category.identity(Control_Category.categoryFn),
        Monad0: function() {
            return Effect.monadEffect;
        }
    };
    var liftEffect = function(dict) {
        return dict.liftEffect;
    };
    exports["liftEffect"] = liftEffect;
    exports["monadEffectEffect"] = monadEffectEffect;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Effect.Aff"] = $PS["Effect.Aff"] || {
    };
    var exports = $PS["Effect.Aff"];
    var $foreign = $PS["Effect.Aff"];
    var Control_Applicative = $PS["Control.Applicative"];
    var Control_Bind = $PS["Control.Bind"];
    var Control_Monad = $PS["Control.Monad"];
    var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
    var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
    var Control_Parallel_Class = $PS["Control.Parallel.Class"];
    var Data_Either = $PS["Data.Either"];
    var Data_Function = $PS["Data.Function"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_Unit = $PS["Data.Unit"];
    var Effect = $PS["Effect"];
    var Effect_Class = $PS["Effect.Class"];
    var Effect_Unsafe = $PS["Effect.Unsafe"];
    var Partial_Unsafe = $PS["Partial.Unsafe"];
    var Unsafe_Coerce = $PS["Unsafe.Coerce"];
    var Canceler = function(x) {
        return x;
    };
    var suspendAff = $foreign["_fork"](false);
    var functorParAff = {
        map: $foreign["_parAffMap"]
    };
    var functorAff = {
        map: $foreign["_map"]
    };
    var forkAff = $foreign["_fork"](true);
    var ffiUtil = function() {
        var unsafeFromRight = function(v) {
            if (v instanceof Data_Either.Right) return v.value0;
            if (v instanceof Data_Either.Left) return Partial_Unsafe.unsafeCrashWith("unsafeFromRight: Left");
            throw new Error("Failed pattern match at Effect.Aff (line 404, column 21 - line 406, column 54): " + [
                v.constructor.name
            ]);
        };
        var unsafeFromLeft = function(v) {
            if (v instanceof Data_Either.Left) return v.value0;
            if (v instanceof Data_Either.Right) return Partial_Unsafe.unsafeCrashWith("unsafeFromLeft: Right");
            throw new Error("Failed pattern match at Effect.Aff (line 399, column 20 - line 401, column 54): " + [
                v.constructor.name
            ]);
        };
        var isLeft = function(v) {
            if (v instanceof Data_Either.Left) return true;
            if (v instanceof Data_Either.Right) return false;
            throw new Error("Failed pattern match at Effect.Aff (line 394, column 12 - line 396, column 20): " + [
                v.constructor.name
            ]);
        };
        return {
            isLeft: isLeft,
            fromLeft: unsafeFromLeft,
            fromRight: unsafeFromRight,
            left: Data_Either.Left.create,
            right: Data_Either.Right.create
        };
    }();
    var makeFiber = function(aff) {
        return $foreign["_makeFiber"](ffiUtil, aff);
    };
    var launchAff = function(aff) {
        return function __do() {
            var fiber = makeFiber(aff)();
            fiber.run();
            return fiber;
        };
    };
    var bracket = function(acquire) {
        return function(completed) {
            return $foreign.generalBracket(acquire)({
                killed: Data_Function["const"](completed),
                failed: Data_Function["const"](completed),
                completed: Data_Function["const"](completed)
            });
        };
    };
    var applyParAff = {
        apply: $foreign["_parAffApply"],
        Functor0: function() {
            return functorParAff;
        }
    };
    var monadAff = {
        Applicative0: function() {
            return applicativeAff;
        },
        Bind1: function() {
            return bindAff;
        }
    };
    var bindAff = {
        bind: $foreign["_bind"],
        Apply0: function() {
            return applyAff;
        }
    };
    var applyAff = {
        apply: Control_Monad.ap(monadAff),
        Functor0: function() {
            return functorAff;
        }
    };
    var applicativeAff = {
        pure: $foreign["_pure"],
        Apply0: function() {
            return applyAff;
        }
    };
    var $$finally = function(fin) {
        return function(a) {
            return bracket(Control_Applicative.pure(applicativeAff)(Data_Unit.unit))(Data_Function["const"](fin))(Data_Function["const"](a));
        };
    };
    var monadEffectAff = {
        liftEffect: $foreign["_liftEffect"],
        Monad0: function() {
            return monadAff;
        }
    };
    var effectCanceler = function() {
        var $42 = Effect_Class.liftEffect(monadEffectAff);
        return function($43) {
            return Canceler(Data_Function["const"]($42($43)));
        };
    }();
    var joinFiber = function(v) {
        return $foreign.makeAff(function(k) {
            return Data_Functor.map(Effect.functorEffect)(effectCanceler)(v.join(k));
        });
    };
    var functorFiber = {
        map: function(f) {
            return function(t) {
                return Effect_Unsafe.unsafePerformEffect(makeFiber(Data_Functor.map(functorAff)(f)(joinFiber(t))));
            };
        }
    };
    var killFiber = function(e) {
        return function(v) {
            return Control_Bind.bind(bindAff)(Effect_Class.liftEffect(monadEffectAff)(v.isSuspended))(function(v1) {
                if (v1) return Effect_Class.liftEffect(monadEffectAff)(Data_Functor["void"](Effect.functorEffect)(v.kill(e, Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit)))));
                return $foreign.makeAff(function(k) {
                    return Data_Functor.map(Effect.functorEffect)(effectCanceler)(v.kill(e, k));
                });
            });
        };
    };
    var monadThrowAff = {
        throwError: $foreign["_throwError"],
        Monad0: function() {
            return monadAff;
        }
    };
    var monadErrorAff = {
        catchError: $foreign["_catchError"],
        MonadThrow0: function() {
            return monadThrowAff;
        }
    };
    var runAff = function(k) {
        return function(aff) {
            return launchAff(Control_Bind.bindFlipped(bindAff)(function() {
                var $46 = Effect_Class.liftEffect(monadEffectAff);
                return function($47) {
                    return $46(k($47));
                };
            }())(Control_Monad_Error_Class["try"](monadErrorAff)(aff)));
        };
    };
    var runAff_ = function(k) {
        return function(aff) {
            return Data_Functor["void"](Effect.functorEffect)(runAff(k)(aff));
        };
    };
    var parallelAff = {
        parallel: Unsafe_Coerce.unsafeCoerce,
        sequential: $foreign["_sequential"],
        Monad0: function() {
            return monadAff;
        },
        Applicative1: function() {
            return applicativeParAff;
        }
    };
    var applicativeParAff = {
        pure: function() {
            var $50 = Control_Parallel_Class.parallel(parallelAff);
            var $51 = Control_Applicative.pure(applicativeAff);
            return function($52) {
                return $50($51($52));
            };
        }(),
        Apply0: function() {
            return applyParAff;
        }
    };
    var monadRecAff = {
        tailRecM: function(k) {
            var go = function(a) {
                return Control_Bind.bind(bindAff)(k(a))(function(res) {
                    if (res instanceof Control_Monad_Rec_Class.Done) return Control_Applicative.pure(applicativeAff)(res.value0);
                    if (res instanceof Control_Monad_Rec_Class.Loop) return go(res.value0);
                    throw new Error("Failed pattern match at Effect.Aff (line 102, column 7 - line 104, column 22): " + [
                        res.constructor.name
                    ]);
                });
            };
            return go;
        },
        Monad0: function() {
            return monadAff;
        }
    };
    var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(Data_Unit.unit));
    exports["runAff_"] = runAff_;
    exports["forkAff"] = forkAff;
    exports["suspendAff"] = suspendAff;
    exports["finally"] = $$finally;
    exports["killFiber"] = killFiber;
    exports["joinFiber"] = joinFiber;
    exports["nonCanceler"] = nonCanceler;
    exports["effectCanceler"] = effectCanceler;
    exports["functorAff"] = functorAff;
    exports["applicativeAff"] = applicativeAff;
    exports["bindAff"] = bindAff;
    exports["monadAff"] = monadAff;
    exports["monadRecAff"] = monadRecAff;
    exports["monadEffectAff"] = monadEffectAff;
    exports["applicativeParAff"] = applicativeParAff;
    exports["parallelAff"] = parallelAff;
    exports["functorFiber"] = functorFiber;
    exports["makeAff"] = $foreign.makeAff;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Control.Monad.Fork.Class"] = $PS["Control.Monad.Fork.Class"] || {
    };
    var exports = $PS["Control.Monad.Fork.Class"];
    var Effect_Aff = $PS["Effect.Aff"];
    var monadForkAff = {
        suspend: Effect_Aff.suspendAff,
        fork: Effect_Aff.forkAff,
        join: Effect_Aff.joinFiber,
        Monad0: function() {
            return Effect_Aff.monadAff;
        },
        Functor1: function() {
            return Effect_Aff.functorFiber;
        }
    };
    var fork = function(dict) {
        return dict.fork;
    };
    exports["fork"] = fork;
    exports["monadForkAff"] = monadForkAff;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.CatQueue"] = $PS["Data.CatQueue"] || {
    };
    var exports = $PS["Data.CatQueue"];
    var Data_List = $PS["Data.List"];
    var Data_List_Types = $PS["Data.List.Types"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Data_Tuple = $PS["Data.Tuple"];
    var CatQueue1 = function() {
        function CatQueue(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        }
        CatQueue.create = function(value0) {
            return function(value1) {
                return new CatQueue(value0, value1);
            };
        };
        return CatQueue;
    }();
    var uncons = function($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return Data_Maybe.Nothing.value;
            }
            if (v.value0 instanceof Data_List_Types.Nil) {
                $copy_v = new CatQueue1(Data_List.reverse(v.value1), Data_List_Types.Nil.value);
                return;
            }
            if (v.value0 instanceof Data_List_Types.Cons) {
                $tco_done = true;
                return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0.value0, new CatQueue1(v.value0.value1, v.value1)));
            }
            throw new Error("Failed pattern match at Data.CatQueue (line 83, column 1 - line 83, column 63): " + [
                v.constructor.name
            ]);
        }
        while(!$tco_done)$tco_result = $tco_loop($copy_v);
        return $tco_result;
    };
    var snoc = function(v) {
        return function(a) {
            return new CatQueue1(v.value0, new Data_List_Types.Cons(a, v.value1));
        };
    };
    var $$null = function(v) {
        if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) return true;
        return false;
    };
    var empty = new CatQueue1(Data_List_Types.Nil.value, Data_List_Types.Nil.value);
    exports["empty"] = empty;
    exports["null"] = $$null;
    exports["snoc"] = snoc;
    exports["uncons"] = uncons;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.CatList"] = $PS["Data.CatList"] || {
    };
    var exports = $PS["Data.CatList"];
    var Data_CatQueue = $PS["Data.CatQueue"];
    var Data_List_Types = $PS["Data.List.Types"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Data_Tuple = $PS["Data.Tuple"];
    var CatNil1 = function() {
        function CatNil() {
        }
        CatNil.value = new CatNil();
        return CatNil;
    }();
    var CatCons1 = function() {
        function CatCons(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        }
        CatCons.create = function(value0) {
            return function(value1) {
                return new CatCons(value0, value1);
            };
        };
        return CatCons;
    }();
    var link = function(v) {
        return function(v1) {
            if (v instanceof CatNil1) return v1;
            if (v1 instanceof CatNil1) return v;
            if (v instanceof CatCons1) return new CatCons1(v.value0, Data_CatQueue.snoc(v.value1)(v1));
            throw new Error("Failed pattern match at Data.CatList (line 109, column 1 - line 109, column 54): " + [
                v.constructor.name,
                v1.constructor.name
            ]);
        };
    };
    var foldr = function(k) {
        return function(b) {
            return function(q) {
                var foldl = function($copy_v) {
                    return function($copy_c) {
                        return function($copy_v1) {
                            var $tco_var_v = $copy_v;
                            var $tco_var_c = $copy_c;
                            var $tco_done = false;
                            var $tco_result;
                            function $tco_loop(v, c, v1) {
                                if (v1 instanceof Data_List_Types.Nil) {
                                    $tco_done = true;
                                    return c;
                                }
                                if (v1 instanceof Data_List_Types.Cons) {
                                    $tco_var_v = v;
                                    $tco_var_c = v(c)(v1.value0);
                                    $copy_v1 = v1.value1;
                                    return;
                                }
                                throw new Error("Failed pattern match at Data.CatList (line 125, column 3 - line 125, column 59): " + [
                                    v.constructor.name,
                                    c.constructor.name,
                                    v1.constructor.name
                                ]);
                            }
                            while(!$tco_done)$tco_result = $tco_loop($tco_var_v, $tco_var_c, $copy_v1);
                            return $tco_result;
                        };
                    };
                };
                var go = function($copy_xs) {
                    return function($copy_ys) {
                        var $tco_var_xs = $copy_xs;
                        var $tco_done1 = false;
                        var $tco_result;
                        function $tco_loop(xs, ys) {
                            var v = Data_CatQueue.uncons(xs);
                            if (v instanceof Data_Maybe.Nothing) {
                                $tco_done1 = true;
                                return foldl(function(x) {
                                    return function(i) {
                                        return i(x);
                                    };
                                })(b)(ys);
                            }
                            if (v instanceof Data_Maybe.Just) {
                                $tco_var_xs = v.value0.value1;
                                $copy_ys = new Data_List_Types.Cons(k(v.value0.value0), ys);
                                return;
                            }
                            throw new Error("Failed pattern match at Data.CatList (line 121, column 14 - line 123, column 67): " + [
                                v.constructor.name
                            ]);
                        }
                        while(!$tco_done1)$tco_result = $tco_loop($tco_var_xs, $copy_ys);
                        return $tco_result;
                    };
                };
                return go(q)(Data_List_Types.Nil.value);
            };
        };
    };
    var uncons = function(v) {
        if (v instanceof CatNil1) return Data_Maybe.Nothing.value;
        if (v instanceof CatCons1) return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, function() {
            var $44 = Data_CatQueue["null"](v.value1);
            if ($44) return CatNil1.value;
            return foldr(link)(CatNil1.value)(v.value1);
        }()));
        throw new Error("Failed pattern match at Data.CatList (line 100, column 1 - line 100, column 61): " + [
            v.constructor.name
        ]);
    };
    var empty = CatNil1.value;
    var append = link;
    var semigroupCatList = {
        append: append
    };
    var snoc = function(cat) {
        return function(a) {
            return append(cat)(new CatCons1(a, Data_CatQueue.empty));
        };
    };
    exports["empty"] = empty;
    exports["snoc"] = snoc;
    exports["uncons"] = uncons;
    exports["semigroupCatList"] = semigroupCatList;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Control.Monad.Free"] = $PS["Control.Monad.Free"] || {
    };
    var exports = $PS["Control.Monad.Free"];
    var Control_Applicative = $PS["Control.Applicative"];
    var Control_Bind = $PS["Control.Bind"];
    var Control_Monad = $PS["Control.Monad"];
    var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
    var Data_CatList = $PS["Data.CatList"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Data_Semigroup = $PS["Data.Semigroup"];
    var Free1 = function() {
        function Free(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        }
        Free.create = function(value0) {
            return function(value1) {
                return new Free(value0, value1);
            };
        };
        return Free;
    }();
    var Return1 = function() {
        function Return(value0) {
            this.value0 = value0;
        }
        Return.create = function(value0) {
            return new Return(value0);
        };
        return Return;
    }();
    var Bind1 = function() {
        function Bind(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        }
        Bind.create = function(value0) {
            return function(value1) {
                return new Bind(value0, value1);
            };
        };
        return Bind;
    }();
    var toView = function($copy_v) {
        var $tco_done = false;
        var $tco_result;
        function $tco_loop(v) {
            var runExpF = function(v2) {
                return v2;
            };
            var concatF = function(v2) {
                return function(r) {
                    return new Free1(v2.value0, Data_Semigroup.append(Data_CatList.semigroupCatList)(v2.value1)(r));
                };
            };
            if (v.value0 instanceof Return1) {
                var v21 = Data_CatList.uncons(v.value1);
                if (v21 instanceof Data_Maybe.Nothing) {
                    $tco_done = true;
                    return new Return1(v.value0.value0);
                }
                if (v21 instanceof Data_Maybe.Just) {
                    $copy_v = concatF(runExpF(v21.value0.value0)(v.value0.value0))(v21.value0.value1);
                    return;
                }
                throw new Error("Failed pattern match at Control.Monad.Free (line 227, column 7 - line 231, column 64): " + [
                    v21.constructor.name
                ]);
            }
            if (v.value0 instanceof Bind1) {
                $tco_done = true;
                return new Bind1(v.value0.value0, function(a) {
                    return concatF(v.value0.value1(a))(v.value1);
                });
            }
            throw new Error("Failed pattern match at Control.Monad.Free (line 225, column 3 - line 233, column 56): " + [
                v.value0.constructor.name
            ]);
        }
        while(!$tco_done)$tco_result = $tco_loop($copy_v);
        return $tco_result;
    };
    var fromView = function(f) {
        return new Free1(f, Data_CatList.empty);
    };
    var freeMonad = {
        Applicative0: function() {
            return freeApplicative;
        },
        Bind1: function() {
            return freeBind;
        }
    };
    var freeFunctor = {
        map: function(k) {
            return function(f) {
                return Control_Bind.bindFlipped(freeBind)(function() {
                    var $120 = Control_Applicative.pure(freeApplicative);
                    return function($121) {
                        return $120(k($121));
                    };
                }())(f);
            };
        }
    };
    var freeBind = {
        bind: function(v) {
            return function(k) {
                return new Free1(v.value0, Data_CatList.snoc(v.value1)(k));
            };
        },
        Apply0: function() {
            return freeApply;
        }
    };
    var freeApply = {
        apply: Control_Monad.ap(freeMonad),
        Functor0: function() {
            return freeFunctor;
        }
    };
    var freeApplicative = {
        pure: function($122) {
            return fromView(Return1.create($122));
        },
        Apply0: function() {
            return freeApply;
        }
    };
    var liftF = function(f) {
        return fromView(new Bind1(f, function() {
            var $123 = Control_Applicative.pure(freeApplicative);
            return function($124) {
                return $123($124);
            };
        }()));
    };
    var foldFree = function(dictMonadRec) {
        return function(k) {
            var go = function(f) {
                var v = toView(f);
                if (v instanceof Return1) return Data_Functor.map(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(Control_Monad_Rec_Class.Done.create)(Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(v.value0));
                if (v instanceof Bind1) return Data_Functor.map(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(function($136) {
                    return Control_Monad_Rec_Class.Loop.create(v.value1($136));
                })(k(v.value0));
                throw new Error("Failed pattern match at Control.Monad.Free (line 158, column 10 - line 160, column 37): " + [
                    v.constructor.name
                ]);
            };
            return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
        };
    };
    exports["liftF"] = liftF;
    exports["foldFree"] = foldFree;
    exports["freeFunctor"] = freeFunctor;
    exports["freeBind"] = freeBind;
    exports["freeApplicative"] = freeApplicative;
    exports["freeMonad"] = freeMonad;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Control.Parallel"] = $PS["Control.Parallel"] || {
    };
    var exports = $PS["Control.Parallel"];
    var Control_Category = $PS["Control.Category"];
    var Control_Parallel_Class = $PS["Control.Parallel.Class"];
    var Data_Foldable = $PS["Data.Foldable"];
    var parTraverse_ = function(dictParallel) {
        return function(dictFoldable) {
            return function(f) {
                var $17 = Control_Parallel_Class.sequential(dictParallel);
                var $18 = Data_Foldable.traverse_(dictParallel.Applicative1())(dictFoldable)(function() {
                    var $20 = Control_Parallel_Class.parallel(dictParallel);
                    return function($21) {
                        return $20(f($21));
                    };
                }());
                return function($19) {
                    return $17($18($19));
                };
            };
        };
    };
    var parSequence_ = function(dictParallel) {
        return function(dictFoldable) {
            return parTraverse_(dictParallel)(dictFoldable)(Control_Category.identity(Control_Category.categoryFn));
        };
    };
    exports["parSequence_"] = parSequence_;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.Exists"] = $PS["Data.Exists"] || {
    };
    var exports = $PS["Data.Exists"];
    var Unsafe_Coerce = $PS["Unsafe.Coerce"];
    var runExists = Unsafe_Coerce.unsafeCoerce;
    var mkExists = Unsafe_Coerce.unsafeCoerce;
    exports["mkExists"] = mkExists;
    exports["runExists"] = runExists;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.Coyoneda"] = $PS["Data.Coyoneda"] || {
    };
    var exports = $PS["Data.Coyoneda"];
    var Control_Category = $PS["Control.Category"];
    var Data_Exists = $PS["Data.Exists"];
    var CoyonedaF1 = function() {
        function CoyonedaF(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        }
        CoyonedaF.create = function(value0) {
            return function(value1) {
                return new CoyonedaF(value0, value1);
            };
        };
        return CoyonedaF;
    }();
    var Coyoneda = function(x) {
        return x;
    };
    var unCoyoneda = function(f) {
        return function(v) {
            return Data_Exists.runExists(function(v1) {
                return f(v1.value0)(v1.value1);
            })(v);
        };
    };
    var coyoneda = function(k) {
        return function(fi) {
            return Coyoneda(Data_Exists.mkExists(new CoyonedaF1(k, fi)));
        };
    };
    var functorCoyoneda = {
        map: function(f) {
            return function(v) {
                return Data_Exists.runExists(function(v1) {
                    return coyoneda(function($84) {
                        return f(v1.value0($84));
                    })(v1.value1);
                })(v);
            };
        }
    };
    var liftCoyoneda = coyoneda(Control_Category.identity(Control_Category.categoryFn));
    exports["unCoyoneda"] = unCoyoneda;
    exports["liftCoyoneda"] = liftCoyoneda;
    exports["functorCoyoneda"] = functorCoyoneda;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports.isFinite = isFinite;
    exports.fromStringImpl = function(str, isFinite, just, nothing) {
        var num = parseFloat(str);
        if (isFinite(num)) return just(num);
        else return nothing;
    };
})($a63366291e3889d2$var$PS["Data.Number"] = $a63366291e3889d2$var$PS["Data.Number"] || {
});
(function($PS) {
    $PS["Data.Number"] = $PS["Data.Number"] || {
    };
    var exports = $PS["Data.Number"];
    var $foreign = $PS["Data.Number"];
    var Data_Maybe = $PS["Data.Maybe"];
    var fromString = function(str) {
        return $foreign.fromStringImpl(str, $foreign["isFinite"], Data_Maybe.Just.create, Data_Maybe.Nothing.value);
    };
    exports["fromString"] = fromString;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Data.Ratio"] = $PS["Data.Ratio"] || {
    };
    var exports = $PS["Data.Ratio"];
    var Data_Eq = $PS["Data.Eq"];
    var Data_EuclideanRing = $PS["Data.EuclideanRing"];
    var Data_Ord = $PS["Data.Ord"];
    var Data_Semiring = $PS["Data.Semiring"];
    var Ratio1 = function() {
        function Ratio(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        }
        Ratio.create = function(value0) {
            return function(value1) {
                return new Ratio(value0, value1);
            };
        };
        return Ratio;
    }();
    var reduce = function(dictOrd) {
        return function(dictEuclideanRing) {
            return function(n) {
                return function(d) {
                    var g = Data_EuclideanRing.gcd(dictOrd.Eq0())(dictEuclideanRing)(n)(d);
                    var d$prime = Data_EuclideanRing.div(dictEuclideanRing)(d)(g);
                    return new Ratio1(Data_Semiring.mul(dictEuclideanRing.CommutativeRing0().Ring0().Semiring0())(Data_EuclideanRing.div(dictEuclideanRing)(n)(g))(Data_Ord.signum(dictOrd)(dictEuclideanRing.CommutativeRing0().Ring0())(d$prime)), Data_Ord.abs(dictOrd)(dictEuclideanRing.CommutativeRing0().Ring0())(d$prime));
                };
            };
        };
    };
    var eqRatio = function(dictEq) {
        return {
            eq: function(v) {
                return function(v1) {
                    return Data_Eq.eq(dictEq)(v.value0)(v1.value0) && Data_Eq.eq(dictEq)(v.value1)(v1.value1);
                };
            }
        };
    };
    exports["reduce"] = reduce;
    exports["eqRatio"] = eqRatio;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Effect.Aff.Class"] = $PS["Effect.Aff.Class"] || {
    };
    var exports = $PS["Effect.Aff.Class"];
    var Control_Category = $PS["Control.Category"];
    var Effect_Aff = $PS["Effect.Aff"];
    var monadAffAff = {
        liftAff: Control_Category.identity(Control_Category.categoryFn),
        MonadEffect0: function() {
            return Effect_Aff.monadEffectAff;
        }
    };
    exports["monadAffAff"] = monadAffAff;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports.log = function(s) {
        return function() {
            console.log(s);
        };
    };
    exports.warn = function(s) {
        return function() {
            console.warn(s);
        };
    };
})($a63366291e3889d2$var$PS["Effect.Console"] = $a63366291e3889d2$var$PS["Effect.Console"] || {
});
(function($PS) {
    $PS["Effect.Console"] = $PS["Effect.Console"] || {
    };
    var exports = $PS["Effect.Console"];
    var $foreign = $PS["Effect.Console"];
    exports["log"] = $foreign.log;
    exports["warn"] = $foreign.warn;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Effect.Class.Console"] = $PS["Effect.Class.Console"] || {
    };
    var exports = $PS["Effect.Class.Console"];
    var Effect_Class = $PS["Effect.Class"];
    var Effect_Console = $PS["Effect.Console"];
    var log = function(dictMonadEffect) {
        var $30 = Effect_Class.liftEffect(dictMonadEffect);
        return function($31) {
            return $30(Effect_Console.log($31));
        };
    };
    exports["log"] = log;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports.random = Math.random;
})($a63366291e3889d2$var$PS["Effect.Random"] = $a63366291e3889d2$var$PS["Effect.Random"] || {
});
(function($PS) {
    $PS["Effect.Random"] = $PS["Effect.Random"] || {
    };
    var exports = $PS["Effect.Random"];
    var $foreign = $PS["Effect.Random"];
    exports["random"] = $foreign.random;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Halogen.Data.Slot"] = $PS["Halogen.Data.Slot"] || {
    };
    var exports = $PS["Halogen.Data.Slot"];
    var Data_Foldable = $PS["Data.Foldable"];
    var Data_Map_Internal = $PS["Data.Map.Internal"];
    var foreachSlot = function(dictApplicative) {
        return function(v) {
            return function(k) {
                return Data_Foldable.traverse_(dictApplicative)(Data_Map_Internal.foldableMap)(function($37) {
                    return k($37);
                })(v);
            };
        };
    };
    var empty = Data_Map_Internal.empty;
    exports["empty"] = empty;
    exports["foreachSlot"] = foreachSlot;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Halogen.Aff.Driver.State"] = $PS["Halogen.Aff.Driver.State"] || {
    };
    var exports = $PS["Halogen.Aff.Driver.State"];
    var Data_Foldable = $PS["Data.Foldable"];
    var Data_List_Types = $PS["Data.List.Types"];
    var Data_Map_Internal = $PS["Data.Map.Internal"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Effect_Ref = $PS["Effect.Ref"];
    var Halogen_Data_Slot = $PS["Halogen.Data.Slot"];
    var Unsafe_Coerce = $PS["Unsafe.Coerce"];
    var unRenderStateX = Unsafe_Coerce.unsafeCoerce;
    var unDriverStateX = Unsafe_Coerce.unsafeCoerce;
    var renderStateX_ = function(dictApplicative) {
        return function(f) {
            return unDriverStateX(function(st) {
                return Data_Foldable.traverse_(dictApplicative)(Data_Foldable.foldableMaybe)(f)(st.rendering);
            });
        };
    };
    var mkRenderStateX = Unsafe_Coerce.unsafeCoerce;
    var renderStateX = function(dictFunctor) {
        return function(f) {
            return unDriverStateX(function(st) {
                return mkRenderStateX(f(st.rendering));
            });
        };
    };
    var mkDriverStateXRef = Unsafe_Coerce.unsafeCoerce;
    var mapDriverState = function(f) {
        return function(v) {
            return f(v);
        };
    };
    var initDriverState = function(component) {
        return function(input) {
            return function(handler) {
                return function(lchs) {
                    return function __do() {
                        var selfRef = Effect_Ref["new"]({
                        })();
                        var childrenIn = Effect_Ref["new"](Halogen_Data_Slot.empty)();
                        var childrenOut = Effect_Ref["new"](Halogen_Data_Slot.empty)();
                        var handlerRef = Effect_Ref["new"](handler)();
                        var pendingQueries = Effect_Ref["new"](new Data_Maybe.Just(Data_List_Types.Nil.value))();
                        var pendingOuts = Effect_Ref["new"](new Data_Maybe.Just(Data_List_Types.Nil.value))();
                        var pendingHandlers = Effect_Ref["new"](Data_Maybe.Nothing.value)();
                        var fresh = Effect_Ref["new"](1)();
                        var subscriptions = Effect_Ref["new"](new Data_Maybe.Just(Data_Map_Internal.empty))();
                        var forks = Effect_Ref["new"](Data_Map_Internal.empty)();
                        var ds = {
                            component: component,
                            state: component.initialState(input),
                            refs: Data_Map_Internal.empty,
                            children: Halogen_Data_Slot.empty,
                            childrenIn: childrenIn,
                            childrenOut: childrenOut,
                            selfRef: selfRef,
                            handlerRef: handlerRef,
                            pendingQueries: pendingQueries,
                            pendingOuts: pendingOuts,
                            pendingHandlers: pendingHandlers,
                            rendering: Data_Maybe.Nothing.value,
                            fresh: fresh,
                            subscriptions: subscriptions,
                            forks: forks,
                            lifecycleHandlers: lchs
                        };
                        Effect_Ref.write(ds)(selfRef)();
                        return mkDriverStateXRef(selfRef);
                    };
                };
            };
        };
    };
    exports["mapDriverState"] = mapDriverState;
    exports["unDriverStateX"] = unDriverStateX;
    exports["renderStateX"] = renderStateX;
    exports["renderStateX_"] = renderStateX_;
    exports["unRenderStateX"] = unRenderStateX;
    exports["initDriverState"] = initDriverState;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Halogen.Query.ChildQuery"] = $PS["Halogen.Query.ChildQuery"] || {
    };
    var exports = $PS["Halogen.Query.ChildQuery"];
    var Unsafe_Coerce = $PS["Unsafe.Coerce"];
    var unChildQueryBox = Unsafe_Coerce.unsafeCoerce;
    exports["unChildQueryBox"] = unChildQueryBox;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Halogen.Query.HalogenM"] = $PS["Halogen.Query.HalogenM"] || {
    };
    var exports = $PS["Halogen.Query.HalogenM"];
    var Control_Monad_Free = $PS["Control.Monad.Free"];
    var Data_Ord = $PS["Data.Ord"];
    var Effect_Class = $PS["Effect.Class"];
    var SubscriptionId = function(x) {
        return x;
    };
    var ForkId = function(x) {
        return x;
    };
    var State1 = function() {
        function State(value0) {
            this.value0 = value0;
        }
        State.create = function(value0) {
            return new State(value0);
        };
        return State;
    }();
    var Subscribe1 = function() {
        function Subscribe(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        }
        Subscribe.create = function(value0) {
            return function(value1) {
                return new Subscribe(value0, value1);
            };
        };
        return Subscribe;
    }();
    var Unsubscribe1 = function() {
        function Unsubscribe(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        }
        Unsubscribe.create = function(value0) {
            return function(value1) {
                return new Unsubscribe(value0, value1);
            };
        };
        return Unsubscribe;
    }();
    var Lift2 = function() {
        function Lift(value0) {
            this.value0 = value0;
        }
        Lift.create = function(value0) {
            return new Lift(value0);
        };
        return Lift;
    }();
    var ChildQuery1 = function() {
        function ChildQuery(value0) {
            this.value0 = value0;
        }
        ChildQuery.create = function(value0) {
            return new ChildQuery(value0);
        };
        return ChildQuery;
    }();
    var Raise1 = function() {
        function Raise(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        }
        Raise.create = function(value0) {
            return function(value1) {
                return new Raise(value0, value1);
            };
        };
        return Raise;
    }();
    var Par1 = function() {
        function Par(value0) {
            this.value0 = value0;
        }
        Par.create = function(value0) {
            return new Par(value0);
        };
        return Par;
    }();
    var Fork1 = function() {
        function Fork(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        }
        Fork.create = function(value0) {
            return function(value1) {
                return new Fork(value0, value1);
            };
        };
        return Fork;
    }();
    var Kill1 = function() {
        function Kill(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        }
        Kill.create = function(value0) {
            return function(value1) {
                return new Kill(value0, value1);
            };
        };
        return Kill;
    }();
    var GetRef1 = function() {
        function GetRef(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        }
        GetRef.create = function(value0) {
            return function(value1) {
                return new GetRef(value0, value1);
            };
        };
        return GetRef;
    }();
    var HalogenM = function(x) {
        return x;
    };
    var ordSubscriptionId = Data_Ord.ordInt;
    var ordForkId = Data_Ord.ordInt;
    var monadHalogenM = Control_Monad_Free.freeMonad;
    var monadStateHalogenM = {
        state: function($136) {
            return HalogenM(Control_Monad_Free.liftF(State1.create($136)));
        },
        Monad0: function() {
            return monadHalogenM;
        }
    };
    var monadEffectHalogenM = function(dictMonadEffect) {
        return {
            liftEffect: (function() {
                var $141 = Effect_Class.liftEffect(dictMonadEffect);
                return function($142) {
                    return HalogenM(Control_Monad_Free.liftF(Lift2.create($141($142))));
                };
            })(),
            Monad0: function() {
                return monadHalogenM;
            }
        };
    };
    var functorHalogenM = Control_Monad_Free.freeFunctor;
    var bindHalogenM = Control_Monad_Free.freeBind;
    var applicativeHalogenM = Control_Monad_Free.freeApplicative;
    exports["State"] = State1;
    exports["Subscribe"] = Subscribe1;
    exports["Unsubscribe"] = Unsubscribe1;
    exports["Lift"] = Lift2;
    exports["ChildQuery"] = ChildQuery1;
    exports["Raise"] = Raise1;
    exports["Par"] = Par1;
    exports["Fork"] = Fork1;
    exports["Kill"] = Kill1;
    exports["GetRef"] = GetRef1;
    exports["SubscriptionId"] = SubscriptionId;
    exports["ForkId"] = ForkId;
    exports["functorHalogenM"] = functorHalogenM;
    exports["applicativeHalogenM"] = applicativeHalogenM;
    exports["bindHalogenM"] = bindHalogenM;
    exports["monadEffectHalogenM"] = monadEffectHalogenM;
    exports["monadStateHalogenM"] = monadStateHalogenM;
    exports["ordSubscriptionId"] = ordSubscriptionId;
    exports["ordForkId"] = ordForkId;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Halogen.Query.HalogenQ"] = $PS["Halogen.Query.HalogenQ"] || {
    };
    var exports = $PS["Halogen.Query.HalogenQ"];
    var Initialize1 = function() {
        function Initialize(value0) {
            this.value0 = value0;
        }
        Initialize.create = function(value0) {
            return new Initialize(value0);
        };
        return Initialize;
    }();
    var Finalize1 = function() {
        function Finalize(value0) {
            this.value0 = value0;
        }
        Finalize.create = function(value0) {
            return new Finalize(value0);
        };
        return Finalize;
    }();
    var Receive1 = function() {
        function Receive(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        }
        Receive.create = function(value0) {
            return function(value1) {
                return new Receive(value0, value1);
            };
        };
        return Receive;
    }();
    var Action2 = function() {
        function Action(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        }
        Action.create = function(value0) {
            return function(value1) {
                return new Action(value0, value1);
            };
        };
        return Action;
    }();
    var Query1 = function() {
        function Query(value0, value1) {
            this.value0 = value0;
            this.value1 = value1;
        }
        Query.create = function(value0) {
            return function(value1) {
                return new Query(value0, value1);
            };
        };
        return Query;
    }();
    exports["Initialize"] = Initialize1;
    exports["Finalize"] = Finalize1;
    exports["Receive"] = Receive1;
    exports["Action"] = Action2;
    exports["Query"] = Query1;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports.reallyUnsafeRefEq = function(a) {
        return function(b) {
            return a === b;
        };
    };
})($a63366291e3889d2$var$PS["Unsafe.Reference"] = $a63366291e3889d2$var$PS["Unsafe.Reference"] || {
});
(function($PS) {
    $PS["Unsafe.Reference"] = $PS["Unsafe.Reference"] || {
    };
    var exports = $PS["Unsafe.Reference"];
    var $foreign = $PS["Unsafe.Reference"];
    var unsafeRefEq = $foreign.reallyUnsafeRefEq;
    exports["unsafeRefEq"] = unsafeRefEq;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Halogen.Subscription"] = $PS["Halogen.Subscription"] || {
    };
    var exports = $PS["Halogen.Subscription"];
    var Control_Bind = $PS["Control.Bind"];
    var Data_Array = $PS["Data.Array"];
    var Data_Foldable = $PS["Data.Foldable"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_Semigroup = $PS["Data.Semigroup"];
    var Effect = $PS["Effect"];
    var Effect_Ref = $PS["Effect.Ref"];
    var Unsafe_Reference = $PS["Unsafe.Reference"];
    var unsubscribe = function(v) {
        return v;
    };
    var subscribe = function(v) {
        return function(k) {
            return v(function() {
                var $55 = Data_Functor["void"](Effect.functorEffect);
                return function($56) {
                    return $55(k($56));
                };
            }());
        };
    };
    var notify = function(v) {
        return function(a) {
            return v(a);
        };
    };
    var create = function __do() {
        var subscribers = Effect_Ref["new"]([])();
        return {
            emitter: function(k) {
                return function __do() {
                    Effect_Ref.modify_(function(v) {
                        return Data_Semigroup.append(Data_Semigroup.semigroupArray)(v)([
                            k
                        ]);
                    })(subscribers)();
                    return Effect_Ref.modify_(Data_Array.deleteBy(Unsafe_Reference.unsafeRefEq)(k))(subscribers);
                };
            },
            listener: function(a) {
                return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(subscribers))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableArray)(function(k) {
                    return k(a);
                }));
            }
        };
    };
    exports["create"] = create;
    exports["notify"] = notify;
    exports["subscribe"] = subscribe;
    exports["unsubscribe"] = unsubscribe;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Halogen.Aff.Driver.Eval"] = $PS["Halogen.Aff.Driver.Eval"] || {
    };
    var exports = $PS["Halogen.Aff.Driver.Eval"];
    var Control_Applicative = $PS["Control.Applicative"];
    var Control_Applicative_Free = $PS["Control.Applicative.Free"];
    var Control_Bind = $PS["Control.Bind"];
    var Control_Monad = $PS["Control.Monad"];
    var Control_Monad_Fork_Class = $PS["Control.Monad.Fork.Class"];
    var Control_Monad_Free = $PS["Control.Monad.Free"];
    var Control_Parallel = $PS["Control.Parallel"];
    var Control_Parallel_Class = $PS["Control.Parallel.Class"];
    var Data_Boolean = $PS["Data.Boolean"];
    var Data_Coyoneda = $PS["Data.Coyoneda"];
    var Data_Either = $PS["Data.Either"];
    var Data_Foldable = $PS["Data.Foldable"];
    var Data_Function = $PS["Data.Function"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_List_Types = $PS["Data.List.Types"];
    var Data_Map_Internal = $PS["Data.Map.Internal"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Data_Ord = $PS["Data.Ord"];
    var Data_Unit = $PS["Data.Unit"];
    var Effect = $PS["Effect"];
    var Effect_Aff = $PS["Effect.Aff"];
    var Effect_Class = $PS["Effect.Class"];
    var Effect_Exception = $PS["Effect.Exception"];
    var Effect_Ref = $PS["Effect.Ref"];
    var Halogen_Aff_Driver_State = $PS["Halogen.Aff.Driver.State"];
    var Halogen_Query_ChildQuery = $PS["Halogen.Query.ChildQuery"];
    var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
    var Halogen_Query_HalogenQ = $PS["Halogen.Query.HalogenQ"];
    var Halogen_Query_Input = $PS["Halogen.Query.Input"];
    var Halogen_Subscription = $PS["Halogen.Subscription"];
    var Unsafe_Reference = $PS["Unsafe.Reference"];
    var unsubscribe = function(sid) {
        return function(ref) {
            return function __do() {
                var v = Effect_Ref.read(ref)();
                var subs = Effect_Ref.read(v.subscriptions)();
                return Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(Halogen_Subscription.unsubscribe)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Map_Internal.lookup(Halogen_Query_HalogenM.ordSubscriptionId)(sid))(subs))();
            };
        };
    };
    var queueOrRun = function(ref) {
        return function(au) {
            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function(v) {
                if (v instanceof Data_Maybe.Nothing) return au;
                if (v instanceof Data_Maybe.Just) return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write(new Data_Maybe.Just(new Data_List_Types.Cons(au, v.value0)))(ref));
                throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 182, column 33 - line 184, column 57): " + [
                    v.constructor.name
                ]);
            });
        };
    };
    var handleLifecycle = function(lchs) {
        return function(f) {
            return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write({
                initializers: Data_List_Types.Nil.value,
                finalizers: Data_List_Types.Nil.value
            })(lchs)))(function() {
                return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(f))(function(result) {
                    return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(lchs)))(function(v) {
                        return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(v.finalizers))(function() {
                            return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Parallel.parSequence_(Effect_Aff.parallelAff)(Data_List_Types.foldableList)(v.initializers))(function() {
                                return Control_Applicative.pure(Effect_Aff.applicativeAff)(result);
                            });
                        });
                    });
                });
            });
        };
    };
    var handleAff = Effect_Aff.runAff_(Data_Either.either(Effect_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))));
    var fresh = function(f) {
        return function(ref) {
            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function(v) {
                return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["modify'"](function(i) {
                    return {
                        state: i + 1 | 0,
                        value: f(i)
                    };
                })(v.fresh));
            });
        };
    };
    var evalQ = function(render) {
        return function(ref) {
            return function(q) {
                return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function(v) {
                    return evalM(render)(ref)(v["component"]["eval"](new Halogen_Query_HalogenQ.Query(Data_Functor.map(Data_Coyoneda.functorCoyoneda)(Data_Maybe.Just.create)(Data_Coyoneda.liftCoyoneda(q)), Data_Function["const"](Data_Maybe.Nothing.value))));
                });
            };
        };
    };
    var evalM = function(render) {
        return function(initRef) {
            return function(v) {
                var evalChildQuery = function(ref) {
                    return function(cqb) {
                        return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function(v1) {
                            return Halogen_Query_ChildQuery.unChildQueryBox(function(v2) {
                                var evalChild = function(v3) {
                                    return Control_Parallel_Class.parallel(Effect_Aff.parallelAff)(Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v3)))(function(dsx) {
                                        return Halogen_Aff_Driver_State.unDriverStateX(function(ds) {
                                            return evalQ(render)(ds.selfRef)(v2.value1);
                                        })(dsx);
                                    }));
                                };
                                return Data_Functor.map(Effect_Aff.functorAff)(v2.value2)(Control_Parallel_Class.sequential(Effect_Aff.parallelAff)(v2.value0(Effect_Aff.applicativeParAff)(evalChild)(v1.children)));
                            })(cqb);
                        });
                    };
                };
                var go = function(ref) {
                    return function(v1) {
                        if (v1 instanceof Halogen_Query_HalogenM.State) return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function(v2) {
                            var v3 = v1.value0(v2.state);
                            if (Unsafe_Reference.unsafeRefEq(v2.state)(v3.value1)) return Control_Applicative.pure(Effect_Aff.applicativeAff)(v3.value0);
                            if (Data_Boolean.otherwise) return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write({
                                component: v2.component,
                                state: v3.value1,
                                refs: v2.refs,
                                children: v2.children,
                                childrenIn: v2.childrenIn,
                                childrenOut: v2.childrenOut,
                                selfRef: v2.selfRef,
                                handlerRef: v2.handlerRef,
                                pendingQueries: v2.pendingQueries,
                                pendingOuts: v2.pendingOuts,
                                pendingHandlers: v2.pendingHandlers,
                                rendering: v2.rendering,
                                fresh: v2.fresh,
                                subscriptions: v2.subscriptions,
                                forks: v2.forks,
                                lifecycleHandlers: v2.lifecycleHandlers
                            })(ref)))(function() {
                                return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(handleLifecycle(v2.lifecycleHandlers)(render(v2.lifecycleHandlers)(ref)))(function() {
                                    return Control_Applicative.pure(Effect_Aff.applicativeAff)(v3.value0);
                                });
                            });
                            throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 86, column 7 - line 92, column 21): " + [
                                v3.constructor.name
                            ]);
                        });
                        if (v1 instanceof Halogen_Query_HalogenM.Subscribe) return Control_Bind.bind(Effect_Aff.bindAff)(fresh(Halogen_Query_HalogenM.SubscriptionId)(ref))(function(sid) {
                            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Halogen_Subscription.subscribe(v1.value0(sid))(function(act) {
                                return handleAff(evalF(render)(ref)(new Halogen_Query_Input.Action(act)));
                            })))(function(finalize) {
                                return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function(v2) {
                                    return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify_(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal.insert(Halogen_Query_HalogenM.ordSubscriptionId)(sid)(finalize)))(v2.subscriptions)))(function() {
                                        return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1(sid));
                                    });
                                });
                            });
                        });
                        if (v1 instanceof Halogen_Query_HalogenM.Unsubscribe) return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(unsubscribe(v1.value0)(ref)))(function() {
                            return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1);
                        });
                        if (v1 instanceof Halogen_Query_HalogenM.Lift) return v1.value0;
                        if (v1 instanceof Halogen_Query_HalogenM.ChildQuery) return evalChildQuery(ref)(v1.value0);
                        if (v1 instanceof Halogen_Query_HalogenM.Raise) return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function(v2) {
                            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v2.handlerRef)))(function(handler) {
                                return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(queueOrRun(v2.pendingOuts)(handler(v1.value0)))(function() {
                                    return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1);
                                });
                            });
                        });
                        if (v1 instanceof Halogen_Query_HalogenM.Par) return Control_Parallel_Class.sequential(Effect_Aff.parallelAff)(Control_Applicative_Free.retractFreeAp(Effect_Aff.applicativeParAff)(Control_Applicative_Free.hoistFreeAp(function() {
                            var $79 = Control_Parallel_Class.parallel(Effect_Aff.parallelAff);
                            var $80 = evalM(render)(ref);
                            return function($81) {
                                return $79($80($81));
                            };
                        }())(v1.value0)));
                        if (v1 instanceof Halogen_Query_HalogenM.Fork) return Control_Bind.bind(Effect_Aff.bindAff)(fresh(Halogen_Query_HalogenM.ForkId)(ref))(function(fid) {
                            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function(v2) {
                                return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["new"](false)))(function(doneRef) {
                                    return Control_Bind.bind(Effect_Aff.bindAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(Effect_Aff["finally"](Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                                        Effect_Ref.modify_(Data_Map_Internal["delete"](Halogen_Query_HalogenM.ordForkId)(fid))(v2.forks)();
                                        return Effect_Ref.write(true)(doneRef)();
                                    }))(evalM(render)(ref)(v1.value0))))(function(fiber) {
                                        return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Control_Monad.unlessM(Effect.monadEffect)(Effect_Ref.read(doneRef))(Effect_Ref.modify_(Data_Map_Internal.insert(Halogen_Query_HalogenM.ordForkId)(fid)(fiber))(v2.forks))))(function() {
                                            return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1(fid));
                                        });
                                    });
                                });
                            });
                        });
                        if (v1 instanceof Halogen_Query_HalogenM.Kill) return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function(v2) {
                            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v2.forks)))(function(forkMap) {
                                return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_Foldable.foldableMaybe)(Effect_Aff.killFiber(Effect_Exception.error("Cancelled")))(Data_Map_Internal.lookup(Halogen_Query_HalogenM.ordForkId)(v1.value0)(forkMap)))(function() {
                                    return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1);
                                });
                            });
                        });
                        if (v1 instanceof Halogen_Query_HalogenM.GetRef) return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function(v2) {
                            return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1(Data_Map_Internal.lookup(Data_Ord.ordString)(v1.value0)(v2.refs)));
                        });
                        throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 83, column 12 - line 133, column 33): " + [
                            v1.constructor.name
                        ]);
                    };
                };
                return Control_Monad_Free.foldFree(Effect_Aff.monadRecAff)(go(initRef))(v);
            };
        };
    };
    var evalF = function(render) {
        return function(ref) {
            return function(v) {
                if (v instanceof Halogen_Query_Input.RefUpdate) return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Data_Function.flip(Effect_Ref.modify_)(ref)(Halogen_Aff_Driver_State.mapDriverState(function(st) {
                    return {
                        component: st.component,
                        state: st.state,
                        refs: Data_Map_Internal.alter(Data_Ord.ordString)(Data_Function["const"](v.value1))(v.value0)(st.refs),
                        children: st.children,
                        childrenIn: st.childrenIn,
                        childrenOut: st.childrenOut,
                        selfRef: st.selfRef,
                        handlerRef: st.handlerRef,
                        pendingQueries: st.pendingQueries,
                        pendingOuts: st.pendingOuts,
                        pendingHandlers: st.pendingHandlers,
                        rendering: st.rendering,
                        fresh: st.fresh,
                        subscriptions: st.subscriptions,
                        forks: st.forks,
                        lifecycleHandlers: st.lifecycleHandlers
                    };
                })));
                if (v instanceof Halogen_Query_Input.Action) return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function(v1) {
                    return evalM(render)(ref)(v1["component"]["eval"](new Halogen_Query_HalogenQ.Action(v.value0, Data_Unit.unit)));
                });
                throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 52, column 20 - line 58, column 62): " + [
                    v.constructor.name
                ]);
            };
        };
    };
    exports["evalF"] = evalF;
    exports["evalQ"] = evalQ;
    exports["evalM"] = evalM;
    exports["handleLifecycle"] = handleLifecycle;
    exports["queueOrRun"] = queueOrRun;
    exports["handleAff"] = handleAff;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Halogen.Component"] = $PS["Halogen.Component"] || {
    };
    var exports = $PS["Halogen.Component"];
    var Control_Applicative = $PS["Control.Applicative"];
    var Data_Coyoneda = $PS["Data.Coyoneda"];
    var Data_Foldable = $PS["Data.Foldable"];
    var Data_Function = $PS["Data.Function"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Data_Unit = $PS["Data.Unit"];
    var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
    var Halogen_Query_HalogenQ = $PS["Halogen.Query.HalogenQ"];
    var Unsafe_Coerce = $PS["Unsafe.Coerce"];
    var ComponentSlot1 = function() {
        function ComponentSlot(value0) {
            this.value0 = value0;
        }
        ComponentSlot.create = function(value0) {
            return new ComponentSlot(value0);
        };
        return ComponentSlot;
    }();
    var ThunkSlot1 = function() {
        function ThunkSlot(value0) {
            this.value0 = value0;
        }
        ThunkSlot.create = function(value0) {
            return new ThunkSlot(value0);
        };
        return ThunkSlot;
    }();
    var unComponentSlot = Unsafe_Coerce.unsafeCoerce;
    var unComponent = Unsafe_Coerce.unsafeCoerce;
    var mkEval = function(args) {
        return function(v) {
            if (v instanceof Halogen_Query_HalogenQ.Initialize) return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(args.handleAction)(args.initialize))(v.value0);
            if (v instanceof Halogen_Query_HalogenQ.Finalize) return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(args.handleAction)(args.finalize))(v.value0);
            if (v instanceof Halogen_Query_HalogenQ.Receive) return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(args.handleAction)(args.receive(v.value0)))(v.value1);
            if (v instanceof Halogen_Query_HalogenQ.Action) return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(args.handleAction(v.value0))(v.value1);
            if (v instanceof Halogen_Query_HalogenQ.Query) return Data_Coyoneda.unCoyoneda(function(g) {
                var $25 = Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(Data_Maybe.maybe(v.value1(Data_Unit.unit))(g));
                return function($26) {
                    return $25(args.handleQuery($26));
                };
            })(v.value0);
            throw new Error("Failed pattern match at Halogen.Component (line 182, column 15 - line 192, column 70): " + [
                v.constructor.name
            ]);
        };
    };
    var mkComponent = Unsafe_Coerce.unsafeCoerce;
    var defaultEval = {
        handleAction: Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit)),
        handleQuery: Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.Nothing.value)),
        receive: Data_Function["const"](Data_Maybe.Nothing.value),
        initialize: Data_Maybe.Nothing.value,
        finalize: Data_Maybe.Nothing.value
    };
    exports["mkComponent"] = mkComponent;
    exports["unComponent"] = unComponent;
    exports["mkEval"] = mkEval;
    exports["defaultEval"] = defaultEval;
    exports["ComponentSlot"] = ComponentSlot1;
    exports["ThunkSlot"] = ThunkSlot1;
    exports["unComponentSlot"] = unComponentSlot;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Halogen.Aff.Driver"] = $PS["Halogen.Aff.Driver"] || {
    };
    var exports = $PS["Halogen.Aff.Driver"];
    var Control_Applicative = $PS["Control.Applicative"];
    var Control_Bind = $PS["Control.Bind"];
    var Control_Category = $PS["Control.Category"];
    var Control_Monad_Fork_Class = $PS["Control.Monad.Fork.Class"];
    var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
    var Control_Parallel = $PS["Control.Parallel"];
    var Data_Foldable = $PS["Data.Foldable"];
    var Data_Function = $PS["Data.Function"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_List = $PS["Data.List"];
    var Data_List_Types = $PS["Data.List.Types"];
    var Data_Map_Internal = $PS["Data.Map.Internal"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Data_Unit = $PS["Data.Unit"];
    var Effect = $PS["Effect"];
    var Effect_Aff = $PS["Effect.Aff"];
    var Effect_Class = $PS["Effect.Class"];
    var Effect_Console = $PS["Effect.Console"];
    var Effect_Exception = $PS["Effect.Exception"];
    var Effect_Ref = $PS["Effect.Ref"];
    var Halogen_Aff_Driver_Eval = $PS["Halogen.Aff.Driver.Eval"];
    var Halogen_Aff_Driver_State = $PS["Halogen.Aff.Driver.State"];
    var Halogen_Component = $PS["Halogen.Component"];
    var Halogen_Data_Slot = $PS["Halogen.Data.Slot"];
    var Halogen_Query_HalogenQ = $PS["Halogen.Query.HalogenQ"];
    var Halogen_Query_Input = $PS["Halogen.Query.Input"];
    var Halogen_Subscription = $PS["Halogen.Subscription"];
    var newLifecycleHandlers = Effect_Ref["new"]({
        initializers: Data_List_Types.Nil.value,
        finalizers: Data_List_Types.Nil.value
    });
    var handlePending = function(ref) {
        return function __do() {
            var queue = Effect_Ref.read(ref)();
            Effect_Ref.write(Data_Maybe.Nothing.value)(ref)();
            return Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(queue)(function() {
                var $28 = Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff));
                return function($29) {
                    return Halogen_Aff_Driver_Eval.handleAff($28(Data_List.reverse($29)));
                };
            }())();
        };
    };
    var cleanupSubscriptionsAndForks = function(v) {
        return function __do() {
            Control_Bind.bindFlipped(Effect.bindEffect)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Map_Internal.foldableMap)(Halogen_Subscription.unsubscribe)))(Effect_Ref.read(v.subscriptions))();
            Effect_Ref.write(Data_Maybe.Nothing.value)(v.subscriptions)();
            Control_Bind.bindFlipped(Effect.bindEffect)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Map_Internal.foldableMap)(function() {
                var $30 = Effect_Aff.killFiber(Effect_Exception.error("finalized"));
                return function($31) {
                    return Halogen_Aff_Driver_Eval.handleAff($30($31));
                };
            }()))(Effect_Ref.read(v.forks))();
            return Effect_Ref.write(Data_Map_Internal.empty)(v.forks)();
        };
    };
    var runUI = function(renderSpec) {
        return function(component) {
            return function(i) {
                var squashChildInitializers = function(lchs) {
                    return function(preInits) {
                        return Halogen_Aff_Driver_State.unDriverStateX(function(st) {
                            var parentInitializer = Halogen_Aff_Driver_Eval.evalM(render)(st.selfRef)(st["component"]["eval"](new Halogen_Query_HalogenQ.Initialize(Data_Unit.unit)));
                            return Effect_Ref.modify_(function(handlers) {
                                return {
                                    initializers: new Data_List_Types.Cons(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Parallel.parSequence_(Effect_Aff.parallelAff)(Data_List_Types.foldableList)(Data_List.reverse(handlers.initializers)))(function() {
                                        return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(parentInitializer)(function() {
                                            return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                                                handlePending(st.pendingQueries)();
                                                return handlePending(st.pendingOuts)();
                                            });
                                        });
                                    }), preInits),
                                    finalizers: handlers.finalizers
                                };
                            })(lchs);
                        });
                    };
                };
                var runComponent = function(lchs) {
                    return function(handler) {
                        return function(j) {
                            return Halogen_Component.unComponent(function(c) {
                                return function __do() {
                                    var lchs$prime = newLifecycleHandlers();
                                    var $$var = Halogen_Aff_Driver_State.initDriverState(c)(j)(handler)(lchs$prime)();
                                    var pre = Effect_Ref.read(lchs)();
                                    Effect_Ref.write({
                                        initializers: Data_List_Types.Nil.value,
                                        finalizers: pre.finalizers
                                    })(lchs)();
                                    Control_Bind.bindFlipped(Effect.bindEffect)(Halogen_Aff_Driver_State.unDriverStateX(function() {
                                        var $32 = render(lchs);
                                        return function($33) {
                                            return $32(function(v) {
                                                return v.selfRef;
                                            }($33));
                                        };
                                    }()))(Effect_Ref.read($$var))();
                                    Control_Bind.bindFlipped(Effect.bindEffect)(squashChildInitializers(lchs)(pre.initializers))(Effect_Ref.read($$var))();
                                    return $$var;
                                };
                            });
                        };
                    };
                };
                var renderChild = function(lchs) {
                    return function(handler) {
                        return function(childrenInRef) {
                            return function(childrenOutRef) {
                                return Halogen_Component.unComponentSlot(function(slot) {
                                    return function __do() {
                                        var childrenIn = Data_Functor.map(Effect.functorEffect)(slot.pop)(Effect_Ref.read(childrenInRef))();
                                        var $$var = function() {
                                            if (childrenIn instanceof Data_Maybe.Just) {
                                                Effect_Ref.write(childrenIn.value0.value1)(childrenInRef)();
                                                var dsx = Effect_Ref.read(childrenIn.value0.value0)();
                                                Halogen_Aff_Driver_State.unDriverStateX(function(st) {
                                                    return function __do() {
                                                        Data_Function.flip(Effect_Ref.write)(st.handlerRef)(function() {
                                                            var $34 = Data_Maybe.maybe(Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit))(handler);
                                                            return function($35) {
                                                                return $34(slot.output($35));
                                                            };
                                                        }())();
                                                        return Halogen_Aff_Driver_Eval.handleAff(Halogen_Aff_Driver_Eval.evalM(render)(st.selfRef)(st["component"]["eval"](new Halogen_Query_HalogenQ.Receive(slot.input, Data_Unit.unit))))();
                                                    };
                                                })(dsx)();
                                                return childrenIn.value0.value0;
                                            }
                                            if (childrenIn instanceof Data_Maybe.Nothing) return runComponent(lchs)(function() {
                                                var $36 = Data_Maybe.maybe(Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit))(handler);
                                                return function($37) {
                                                    return $36(slot.output($37));
                                                };
                                            }())(slot.input)(slot.component)();
                                            throw new Error("Failed pattern match at Halogen.Aff.Driver (line 211, column 14 - line 220, column 98): " + [
                                                childrenIn.constructor.name
                                            ]);
                                        }();
                                        var isDuplicate = Data_Functor.map(Effect.functorEffect)(function($38) {
                                            return Data_Maybe.isJust(slot.get($38));
                                        })(Effect_Ref.read(childrenOutRef))();
                                        Control_Applicative.when(Effect.applicativeEffect)(isDuplicate)(Effect_Console.warn("Halogen: Duplicate slot address was detected during rendering, unexpected results may occur"))();
                                        Effect_Ref.modify_(slot.set($$var))(childrenOutRef)();
                                        return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read($$var))(Halogen_Aff_Driver_State.renderStateX(Effect.functorEffect)(function(v) {
                                            if (v instanceof Data_Maybe.Nothing) return Effect_Exception["throw"]("Halogen internal error: child was not initialized in renderChild");
                                            if (v instanceof Data_Maybe.Just) return Control_Applicative.pure(Effect.applicativeEffect)(renderSpec.renderChild(v.value0));
                                            throw new Error("Failed pattern match at Halogen.Aff.Driver (line 225, column 37 - line 227, column 50): " + [
                                                v.constructor.name
                                            ]);
                                        }))();
                                    };
                                });
                            };
                        };
                    };
                };
                var render = function(lchs) {
                    return function($$var) {
                        return function __do() {
                            var v = Effect_Ref.read($$var)();
                            var shouldProcessHandlers = Data_Functor.map(Effect.functorEffect)(Data_Maybe.isNothing)(Effect_Ref.read(v.pendingHandlers))();
                            Control_Applicative.when(Effect.applicativeEffect)(shouldProcessHandlers)(Effect_Ref.write(new Data_Maybe.Just(Data_List_Types.Nil.value))(v.pendingHandlers))();
                            Effect_Ref.write(Halogen_Data_Slot.empty)(v.childrenOut)();
                            Effect_Ref.write(v.children)(v.childrenIn)();
                            var selfRef = Control_Category.identity(Control_Category.categoryFn)(v.selfRef);
                            var pendingQueries = Control_Category.identity(Control_Category.categoryFn)(v.pendingQueries);
                            var pendingHandlers = Control_Category.identity(Control_Category.categoryFn)(v.pendingHandlers);
                            var handler = function() {
                                var $39 = Halogen_Aff_Driver_Eval.queueOrRun(pendingHandlers);
                                var $40 = Data_Functor["void"](Effect_Aff.functorAff);
                                var $41 = Halogen_Aff_Driver_Eval.evalF(render)(selfRef);
                                return function($42) {
                                    return $39($40($41($42)));
                                };
                            }();
                            var childHandler = function() {
                                var $43 = Halogen_Aff_Driver_Eval.queueOrRun(pendingQueries);
                                return function($44) {
                                    return $43(handler(Halogen_Query_Input.Action.create($44)));
                                };
                            }();
                            var rendering = renderSpec.render(function($45) {
                                return Halogen_Aff_Driver_Eval.handleAff(handler($45));
                            })(renderChild(lchs)(childHandler)(v.childrenIn)(v.childrenOut))(v.component.render(v.state))(v.rendering)();
                            var children = Effect_Ref.read(v.childrenOut)();
                            var childrenIn = Effect_Ref.read(v.childrenIn)();
                            Halogen_Data_Slot.foreachSlot(Effect.applicativeEffect)(childrenIn)(function(v1) {
                                return function __do() {
                                    var childDS = Effect_Ref.read(v1)();
                                    Halogen_Aff_Driver_State.renderStateX_(Effect.applicativeEffect)(renderSpec.removeChild)(childDS)();
                                    return finalize(lchs)(childDS)();
                                };
                            })();
                            Data_Function.flip(Effect_Ref.modify_)(v.selfRef)(Halogen_Aff_Driver_State.mapDriverState(function(ds$prime) {
                                return {
                                    component: ds$prime.component,
                                    state: ds$prime.state,
                                    refs: ds$prime.refs,
                                    children: children,
                                    childrenIn: ds$prime.childrenIn,
                                    childrenOut: ds$prime.childrenOut,
                                    selfRef: ds$prime.selfRef,
                                    handlerRef: ds$prime.handlerRef,
                                    pendingQueries: ds$prime.pendingQueries,
                                    pendingOuts: ds$prime.pendingOuts,
                                    pendingHandlers: ds$prime.pendingHandlers,
                                    rendering: new Data_Maybe.Just(rendering),
                                    fresh: ds$prime.fresh,
                                    subscriptions: ds$prime.subscriptions,
                                    forks: ds$prime.forks,
                                    lifecycleHandlers: ds$prime.lifecycleHandlers
                                };
                            }))();
                            return Control_Applicative.when(Effect.applicativeEffect)(shouldProcessHandlers)(Data_Function.flip(Control_Monad_Rec_Class.tailRecM(Control_Monad_Rec_Class.monadRecEffect))(Data_Unit.unit)(function(v1) {
                                return function __do() {
                                    var handlers = Effect_Ref.read(pendingHandlers)();
                                    Effect_Ref.write(new Data_Maybe.Just(Data_List_Types.Nil.value))(pendingHandlers)();
                                    Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function() {
                                        var $46 = Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff));
                                        return function($47) {
                                            return Halogen_Aff_Driver_Eval.handleAff($46(Data_List.reverse($47)));
                                        };
                                    }())(handlers)();
                                    var mmore = Effect_Ref.read(pendingHandlers)();
                                    var $21 = Data_Maybe.maybe(false)(Data_List["null"])(mmore);
                                    if ($21) return Data_Functor.voidLeft(Effect.functorEffect)(Effect_Ref.write(Data_Maybe.Nothing.value)(pendingHandlers))(new Control_Monad_Rec_Class.Done(Data_Unit.unit))();
                                    return new Control_Monad_Rec_Class.Loop(Data_Unit.unit);
                                };
                            }))();
                        };
                    };
                };
                var finalize = function(lchs) {
                    return Halogen_Aff_Driver_State.unDriverStateX(function(st) {
                        return function __do() {
                            cleanupSubscriptionsAndForks(st)();
                            var f = Halogen_Aff_Driver_Eval.evalM(render)(st.selfRef)(st["component"]["eval"](new Halogen_Query_HalogenQ.Finalize(Data_Unit.unit)));
                            Effect_Ref.modify_(function(handlers) {
                                return {
                                    initializers: handlers.initializers,
                                    finalizers: new Data_List_Types.Cons(f, handlers.finalizers)
                                };
                            })(lchs)();
                            return Halogen_Data_Slot.foreachSlot(Effect.applicativeEffect)(st.children)(function(v) {
                                return function __do() {
                                    var dsx = Effect_Ref.read(v)();
                                    return finalize(lchs)(dsx)();
                                };
                            })();
                        };
                    });
                };
                var evalDriver = function(disposed) {
                    return function(ref) {
                        return function(q) {
                            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(disposed)))(function(v) {
                                if (v) return Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Maybe.Nothing.value);
                                return Halogen_Aff_Driver_Eval.evalQ(render)(ref)(q);
                            });
                        };
                    };
                };
                var dispose = function(disposed) {
                    return function(lchs) {
                        return function(dsx) {
                            return Halogen_Aff_Driver_Eval.handleLifecycle(lchs)(function __do() {
                                var v = Effect_Ref.read(disposed)();
                                if (v) return Data_Unit.unit;
                                Effect_Ref.write(true)(disposed)();
                                finalize(lchs)(dsx)();
                                return Halogen_Aff_Driver_State.unDriverStateX(function(v1) {
                                    return function __do() {
                                        var v2 = Effect_Class.liftEffect(Effect_Class.monadEffectEffect)(Effect_Ref.read(v1.selfRef))();
                                        return Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v2.rendering)(renderSpec.dispose)();
                                    };
                                })(dsx)();
                            });
                        };
                    };
                };
                return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(newLifecycleHandlers))(function(lchs) {
                    return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["new"](0)))(function(fresh) {
                        return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["new"](false)))(function(disposed) {
                            return Halogen_Aff_Driver_Eval.handleLifecycle(lchs)(function __do() {
                                var sio = Halogen_Subscription.create();
                                var dsx = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref.read)(runComponent(lchs)(function() {
                                    var $48 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
                                    var $49 = Halogen_Subscription.notify(sio.listener);
                                    return function($50) {
                                        return $48($49($50));
                                    };
                                }())(i)(component))();
                                return Halogen_Aff_Driver_State.unDriverStateX(function(st) {
                                    return Control_Applicative.pure(Effect.applicativeEffect)({
                                        query: evalDriver(disposed)(st.selfRef),
                                        messages: sio.emitter,
                                        dispose: dispose(disposed)(lchs)(dsx)
                                    });
                                })(dsx)();
                            });
                        });
                    });
                });
            };
        };
    };
    exports["runUI"] = runUI;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports._querySelector = function(selector) {
        return function(node) {
            return function() {
                return node.querySelector(selector);
            };
        };
    };
})($a63366291e3889d2$var$PS["Web.DOM.ParentNode"] = $a63366291e3889d2$var$PS["Web.DOM.ParentNode"] || {
});
(function($PS) {
    $PS["Web.DOM.ParentNode"] = $PS["Web.DOM.ParentNode"] || {
    };
    var exports = $PS["Web.DOM.ParentNode"];
    var $foreign = $PS["Web.DOM.ParentNode"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_Nullable = $PS["Data.Nullable"];
    var Effect = $PS["Effect"];
    var querySelector = function(qs) {
        var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
        var $1 = $foreign["_querySelector"](qs);
        return function($2) {
            return $0($1($2));
        };
    };
    exports["querySelector"] = querySelector;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports.window = function() {
        return window;
    };
})($a63366291e3889d2$var$PS["Web.HTML"] = $a63366291e3889d2$var$PS["Web.HTML"] || {
});
(function($PS) {
    $PS["Web.HTML"] = $PS["Web.HTML"] || {
    };
    var exports = $PS["Web.HTML"];
    var $foreign = $PS["Web.HTML"];
    exports["window"] = $foreign.window;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Web.HTML.Event.EventTypes"] = $PS["Web.HTML.Event.EventTypes"] || {
    };
    var exports = $PS["Web.HTML.Event.EventTypes"];
    var domcontentloaded = "DOMContentLoaded";
    var change = "change";
    exports["change"] = change;
    exports["domcontentloaded"] = domcontentloaded;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports._readyState = function(doc) {
        return function() {
            return doc.readyState;
        };
    };
})($a63366291e3889d2$var$PS["Web.HTML.HTMLDocument"] = $a63366291e3889d2$var$PS["Web.HTML.HTMLDocument"] || {
});
(function($PS) {
    $PS["Web.HTML.HTMLDocument.ReadyState"] = $PS["Web.HTML.HTMLDocument.ReadyState"] || {
    };
    var exports = $PS["Web.HTML.HTMLDocument.ReadyState"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Loading1 = function() {
        function Loading() {
        }
        Loading.value = new Loading();
        return Loading;
    }();
    var Interactive1 = function() {
        function Interactive() {
        }
        Interactive.value = new Interactive();
        return Interactive;
    }();
    var Complete1 = function() {
        function Complete() {
        }
        Complete.value = new Complete();
        return Complete;
    }();
    var parse = function(v) {
        if (v === "loading") return new Data_Maybe.Just(Loading1.value);
        if (v === "interactive") return new Data_Maybe.Just(Interactive1.value);
        if (v === "complete") return new Data_Maybe.Just(Complete1.value);
        return Data_Maybe.Nothing.value;
    };
    exports["Loading"] = Loading1;
    exports["parse"] = parse;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Web.HTML.HTMLDocument"] = $PS["Web.HTML.HTMLDocument"] || {
    };
    var exports = $PS["Web.HTML.HTMLDocument"];
    var $foreign = $PS["Web.HTML.HTMLDocument"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Effect = $PS["Effect"];
    var Unsafe_Coerce = $PS["Unsafe.Coerce"];
    var Web_HTML_HTMLDocument_ReadyState = $PS["Web.HTML.HTMLDocument.ReadyState"];
    var toParentNode = Unsafe_Coerce.unsafeCoerce;
    var toDocument = Unsafe_Coerce.unsafeCoerce;
    var readyState = function() {
        var $0 = Data_Functor.map(Effect.functorEffect)(function() {
            var $2 = Data_Maybe.fromMaybe(Web_HTML_HTMLDocument_ReadyState.Loading.value);
            return function($3) {
                return $2(Web_HTML_HTMLDocument_ReadyState.parse($3));
            };
        }());
        return function($1) {
            return $0($foreign["_readyState"]($1));
        };
    }();
    exports["toDocument"] = toDocument;
    exports["toParentNode"] = toParentNode;
    exports["readyState"] = readyState;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports._read = function(nothing, just, value) {
        var tag = Object.prototype.toString.call(value);
        if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) return just(value);
        else return nothing;
    };
})($a63366291e3889d2$var$PS["Web.HTML.HTMLElement"] = $a63366291e3889d2$var$PS["Web.HTML.HTMLElement"] || {
});
(function($PS) {
    $PS["Web.HTML.HTMLElement"] = $PS["Web.HTML.HTMLElement"] || {
    };
    var exports = $PS["Web.HTML.HTMLElement"];
    var $foreign = $PS["Web.HTML.HTMLElement"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Unsafe_Coerce = $PS["Unsafe.Coerce"];
    var toNode = Unsafe_Coerce.unsafeCoerce;
    var fromElement = function(x) {
        return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
    };
    exports["fromElement"] = fromElement;
    exports["toNode"] = toNode;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports.document = function(window) {
        return function() {
            return window.document;
        };
    };
})($a63366291e3889d2$var$PS["Web.HTML.Window"] = $a63366291e3889d2$var$PS["Web.HTML.Window"] || {
});
(function($PS) {
    $PS["Web.HTML.Window"] = $PS["Web.HTML.Window"] || {
    };
    var exports = $PS["Web.HTML.Window"];
    var $foreign = $PS["Web.HTML.Window"];
    var Unsafe_Coerce = $PS["Unsafe.Coerce"];
    var toEventTarget = Unsafe_Coerce.unsafeCoerce;
    exports["toEventTarget"] = toEventTarget;
    exports["document"] = $foreign.document;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Halogen.Aff.Util"] = $PS["Halogen.Aff.Util"] || {
    };
    var exports = $PS["Halogen.Aff.Util"];
    var Control_Applicative = $PS["Control.Applicative"];
    var Control_Bind = $PS["Control.Bind"];
    var Data_Either = $PS["Data.Either"];
    var Data_Function = $PS["Data.Function"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Data_Unit = $PS["Data.Unit"];
    var Effect = $PS["Effect"];
    var Effect_Aff = $PS["Effect.Aff"];
    var Effect_Class = $PS["Effect.Class"];
    var Effect_Exception = $PS["Effect.Exception"];
    var Web_DOM_ParentNode = $PS["Web.DOM.ParentNode"];
    var Web_Event_EventTarget = $PS["Web.Event.EventTarget"];
    var Web_HTML = $PS["Web.HTML"];
    var Web_HTML_Event_EventTypes = $PS["Web.HTML.Event.EventTypes"];
    var Web_HTML_HTMLDocument = $PS["Web.HTML.HTMLDocument"];
    var Web_HTML_HTMLDocument_ReadyState = $PS["Web.HTML.HTMLDocument.ReadyState"];
    var Web_HTML_HTMLElement = $PS["Web.HTML.HTMLElement"];
    var Web_HTML_Window = $PS["Web.HTML.Window"];
    var selectElement = function(query) {
        return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Control_Bind.bindFlipped(Effect.bindEffect)(Control_Bind.composeKleisliFlipped(Effect.bindEffect)(function() {
            var $2 = Web_DOM_ParentNode.querySelector(query);
            return function($3) {
                return $2(Web_HTML_HTMLDocument.toParentNode($3));
            };
        }())(Web_HTML_Window.document))(Web_HTML.window)))(function(mel) {
            return Control_Applicative.pure(Effect_Aff.applicativeAff)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Web_HTML_HTMLElement.fromElement)(mel));
        });
    };
    var runHalogenAff = Effect_Aff.runAff_(Data_Either.either(Effect_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))));
    var awaitLoad = Effect_Aff.makeAff(function(callback) {
        return function __do() {
            var rs = Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_HTMLDocument.readyState)(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.document)(Web_HTML.window))();
            if (rs instanceof Web_HTML_HTMLDocument_ReadyState.Loading) {
                var et = Data_Functor.map(Effect.functorEffect)(Web_HTML_Window.toEventTarget)(Web_HTML.window)();
                var listener = Web_Event_EventTarget.eventListener(function(v) {
                    return callback(new Data_Either.Right(Data_Unit.unit));
                })();
                Web_Event_EventTarget.addEventListener(Web_HTML_Event_EventTypes.domcontentloaded)(listener)(false)(et)();
                return Effect_Aff.effectCanceler(Web_Event_EventTarget.removeEventListener(Web_HTML_Event_EventTypes.domcontentloaded)(listener)(false)(et));
            }
            callback(new Data_Either.Right(Data_Unit.unit))();
            return Effect_Aff.nonCanceler;
        };
    });
    exports["awaitLoad"] = awaitLoad;
    exports["selectElement"] = selectElement;
    exports["runHalogenAff"] = runHalogenAff;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Halogen.HTML.Elements"] = $PS["Halogen.HTML.Elements"] || {
    };
    var exports = $PS["Halogen.HTML.Elements"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
    var element = Halogen_HTML_Core.element(Data_Maybe.Nothing.value);
    var header = element("header");
    var input = function(props) {
        return element("input")(props)([]);
    };
    var label = element("label");
    var span = element("span");
    var div = element("div");
    var div_ = div([]);
    var button = element("button");
    exports["button"] = button;
    exports["div"] = div;
    exports["div_"] = div_;
    exports["header"] = header;
    exports["input"] = input;
    exports["label"] = label;
    exports["span"] = span;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports._currentTarget = function(e) {
        return e.currentTarget;
    };
})($a63366291e3889d2$var$PS["Web.Event.Event"] = $a63366291e3889d2$var$PS["Web.Event.Event"] || {
});
(function($PS) {
    $PS["Web.Event.Event"] = $PS["Web.Event.Event"] || {
    };
    var exports = $PS["Web.Event.Event"];
    var $foreign = $PS["Web.Event.Event"];
    var Data_Nullable = $PS["Data.Nullable"];
    var currentTarget = function($5) {
        return Data_Nullable.toMaybe($foreign["_currentTarget"]($5));
    };
    exports["currentTarget"] = currentTarget;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Web.UIEvent.MouseEvent.EventTypes"] = $PS["Web.UIEvent.MouseEvent.EventTypes"] || {
    };
    var exports = $PS["Web.UIEvent.MouseEvent.EventTypes"];
    var click = "click";
    exports["click"] = click;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Halogen.HTML.Events"] = $PS["Halogen.HTML.Events"] || {
    };
    var exports = $PS["Halogen.HTML.Events"];
    var Control_Bind = $PS["Control.Bind"];
    var Control_Monad_Except = $PS["Control.Monad.Except"];
    var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
    var Data_Either = $PS["Data.Either"];
    var Data_Function = $PS["Data.Function"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_Identity = $PS["Data.Identity"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Foreign = $PS["Foreign"];
    var Foreign_Index = $PS["Foreign.Index"];
    var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
    var Halogen_Query_Input = $PS["Halogen.Query.Input"];
    var Unsafe_Coerce = $PS["Unsafe.Coerce"];
    var Web_Event_Event = $PS["Web.Event.Event"];
    var Web_HTML_Event_EventTypes = $PS["Web.HTML.Event.EventTypes"];
    var Web_UIEvent_MouseEvent_EventTypes = $PS["Web.UIEvent.MouseEvent.EventTypes"];
    var mouseHandler = Unsafe_Coerce.unsafeCoerce;
    var handler$prime = function(et) {
        return function(f) {
            return Halogen_HTML_Core.handler(et)(function(ev) {
                return Data_Functor.map(Data_Maybe.functorMaybe)(Halogen_Query_Input.Action.create)(f(ev));
            });
        };
    };
    var handler = function(et) {
        return function(f) {
            return Halogen_HTML_Core.handler(et)(function(ev) {
                return new Data_Maybe.Just(new Halogen_Query_Input.Action(f(ev)));
            });
        };
    };
    var onChange = handler(Web_HTML_Event_EventTypes.change);
    var onClick = function() {
        var $1 = handler(Web_UIEvent_MouseEvent_EventTypes.click);
        return function($2) {
            return $1(mouseHandler($2));
        };
    }();
    var addForeignPropHandler = function(key) {
        return function(prop) {
            return function(reader) {
                return function(f) {
                    var go = function(a) {
                        return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(reader)(Foreign_Index.readProp(Data_Identity.monadIdentity)(prop))(Foreign.unsafeToForeign(a));
                    };
                    return handler$prime(key)(Control_Bind.composeKleisli(Data_Maybe.bindMaybe)(Web_Event_Event.currentTarget)(function(e) {
                        return Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(function($71) {
                            return Data_Maybe.Just.create(f($71));
                        })(Control_Monad_Except.runExcept(go(e)));
                    }));
                };
            };
        };
    };
    var onValueChange = addForeignPropHandler(Web_HTML_Event_EventTypes.change)("value")(Foreign.readString(Data_Identity.monadIdentity));
    exports["onChange"] = onChange;
    exports["onClick"] = onClick;
    exports["onValueChange"] = onValueChange;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Halogen.Svg.Core"] = $PS["Halogen.Svg.Core"] || {
    };
    var exports = $PS["Halogen.Svg.Core"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Halogen_VDom_DOM_Prop = $PS["Halogen.VDom.DOM.Prop"];
    var Halogen_VDom_Types = $PS["Halogen.VDom.Types"];
    var ns = Data_Maybe.Just.create("http://www.w3.org/2000/svg");
    var element = function(name) {
        return function(props) {
            return function(children) {
                return new Halogen_VDom_Types.Elem(ns, name, props, children);
            };
        };
    };
    var attr = function(v) {
        return Halogen_VDom_DOM_Prop.Attribute.create(Data_Maybe.Nothing.value)(v);
    };
    exports["element"] = element;
    exports["attr"] = attr;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Halogen.Svg.Attributes"] = $PS["Halogen.Svg.Attributes"] || {
    };
    var exports = $PS["Halogen.Svg.Attributes"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Data_Show = $PS["Data.Show"];
    var Data_String_Common = $PS["Data.String.Common"];
    var Halogen_Svg_Core = $PS["Halogen.Svg.Core"];
    var Start2 = function() {
        function Start() {
        }
        Start.value = new Start();
        return Start;
    }();
    var AnchorMiddle1 = function() {
        function AnchorMiddle() {
        }
        AnchorMiddle.value = new AnchorMiddle();
        return AnchorMiddle;
    }();
    var End1 = function() {
        function End() {
        }
        End.value = new End();
        return End;
    }();
    var RGB1 = function() {
        function RGB(value0, value1, value2) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
        }
        RGB.create = function(value0) {
            return function(value1) {
                return function(value2) {
                    return new RGB(value0, value1, value2);
                };
            };
        };
        return RGB;
    }();
    var RGBA1 = function() {
        function RGBA(value0, value1, value2, value3) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
        }
        RGBA.create = function(value0) {
            return function(value1) {
                return function(value2) {
                    return function(value3) {
                        return new RGBA(value0, value1, value2, value3);
                    };
                };
            };
        };
        return RGBA;
    }();
    var Auto1 = function() {
        function Auto() {
        }
        Auto.value = new Auto();
        return Auto;
    }();
    var UseScript1 = function() {
        function UseScript() {
        }
        UseScript.value = new UseScript();
        return UseScript;
    }();
    var NoChange1 = function() {
        function NoChange() {
        }
        NoChange.value = new NoChange();
        return NoChange;
    }();
    var ResetSize1 = function() {
        function ResetSize() {
        }
        ResetSize.value = new ResetSize();
        return ResetSize;
    }();
    var Ideographic1 = function() {
        function Ideographic() {
        }
        Ideographic.value = new Ideographic();
        return Ideographic;
    }();
    var Alphabetic1 = function() {
        function Alphabetic() {
        }
        Alphabetic.value = new Alphabetic();
        return Alphabetic;
    }();
    var Hanging1 = function() {
        function Hanging() {
        }
        Hanging.value = new Hanging();
        return Hanging;
    }();
    var Mathematical1 = function() {
        function Mathematical() {
        }
        Mathematical.value = new Mathematical();
        return Mathematical;
    }();
    var Central1 = function() {
        function Central() {
        }
        Central.value = new Central();
        return Central;
    }();
    var BaselineMiddle1 = function() {
        function BaselineMiddle() {
        }
        BaselineMiddle.value = new BaselineMiddle();
        return BaselineMiddle;
    }();
    var TextAfterEdge1 = function() {
        function TextAfterEdge() {
        }
        TextAfterEdge.value = new TextAfterEdge();
        return TextAfterEdge;
    }();
    var TextBeforeEdge1 = function() {
        function TextBeforeEdge() {
        }
        TextBeforeEdge.value = new TextBeforeEdge();
        return TextBeforeEdge;
    }();
    var printTextAnchor = function(v1) {
        if (v1 instanceof Start2) return "start";
        if (v1 instanceof AnchorMiddle1) return "middle";
        if (v1 instanceof End1) return "end";
        throw new Error("Failed pattern match at Halogen.Svg.Attributes (line 189, column 19 - line 192, column 15): " + [
            v1.constructor.name
        ]);
    };
    var printColor = function(v1) {
        if (v1 instanceof Data_Maybe.Just && v1.value0 instanceof RGB1) return "rgb(" + (Data_String_Common.joinWith(",")(Data_Functor.map(Data_Functor.functorArray)(Data_Show.show(Data_Show.showInt))([
            v1.value0.value0,
            v1.value0.value1,
            v1.value0.value2
        ])) + ")");
        if (v1 instanceof Data_Maybe.Just && v1.value0 instanceof RGBA1) return "rgba(" + (Data_String_Common.joinWith(",")(Data_Functor.map(Data_Functor.functorArray)(Data_Show.show(Data_Show.showInt))([
            v1.value0.value0,
            v1.value0.value1,
            v1.value0.value2
        ])) + ("," + (Data_Show.show(Data_Show.showNumber)(v1.value0.value3) + ")")));
        if (v1 instanceof Data_Maybe.Nothing) return "None";
        throw new Error("Failed pattern match at Halogen.Svg.Attributes (line 88, column 14 - line 91, column 20): " + [
            v1.constructor.name
        ]);
    };
    var printBaseline = function(v1) {
        if (v1 instanceof Auto1) return "auto";
        if (v1 instanceof UseScript1) return "use-script";
        if (v1 instanceof NoChange1) return "no-change";
        if (v1 instanceof ResetSize1) return "reset-size";
        if (v1 instanceof Ideographic1) return "ideographic";
        if (v1 instanceof Alphabetic1) return "alphabetic";
        if (v1 instanceof Hanging1) return "hanging";
        if (v1 instanceof Mathematical1) return "mathematical";
        if (v1 instanceof Central1) return "central";
        if (v1 instanceof BaselineMiddle1) return "middle";
        if (v1 instanceof TextAfterEdge1) return "text-after-edge";
        if (v1 instanceof TextBeforeEdge1) return "text-before-edge";
        throw new Error("Failed pattern match at Halogen.Svg.Attributes (line 199, column 17 - line 211, column 39): " + [
            v1.constructor.name
        ]);
    };
    var attr = Halogen_Svg_Core.attr;
    var cx = function() {
        var $124 = attr("cx");
        var $125 = Data_Show.show(Data_Show.showNumber);
        return function($126) {
            return $124($125($126));
        };
    }();
    var cy = function() {
        var $127 = attr("cy");
        var $128 = Data_Show.show(Data_Show.showNumber);
        return function($129) {
            return $127($128($129));
        };
    }();
    var dominant_baseline = function() {
        var $133 = attr("dominant-baseline");
        return function($134) {
            return $133(printBaseline($134));
        };
    }();
    var fill = function() {
        var $137 = attr("fill");
        return function($138) {
            return $137(printColor($138));
        };
    }();
    var height = function() {
        var $144 = attr("height");
        var $145 = Data_Show.show(Data_Show.showNumber);
        return function($146) {
            return $144($145($146));
        };
    }();
    var r = function() {
        var $160 = attr("r");
        var $161 = Data_Show.show(Data_Show.showNumber);
        return function($162) {
            return $160($161($162));
        };
    }();
    var stroke = function() {
        var $178 = attr("stroke");
        return function($179) {
            return $178(printColor($179));
        };
    }();
    var strokeWidth = function() {
        var $180 = attr("stroke-width");
        var $181 = Data_Show.show(Data_Show.showNumber);
        return function($182) {
            return $180($181($182));
        };
    }();
    var text_anchor = function() {
        var $183 = attr("text-anchor");
        return function($184) {
            return $183(printTextAnchor($184));
        };
    }();
    var viewBox = function(x_) {
        return function(y_) {
            return function(w) {
                return function(h_) {
                    return attr("viewBox")(Data_String_Common.joinWith(" ")(Data_Functor.map(Data_Functor.functorArray)(Data_Show.show(Data_Show.showNumber))([
                        x_,
                        y_,
                        w,
                        h_
                    ])));
                };
            };
        };
    };
    var width = function() {
        var $189 = attr("width");
        var $190 = Data_Show.show(Data_Show.showNumber);
        return function($191) {
            return $189($190($191));
        };
    }();
    var x = function() {
        var $192 = attr("x");
        var $193 = Data_Show.show(Data_Show.showNumber);
        return function($194) {
            return $192($193($194));
        };
    }();
    var x1 = function() {
        var $195 = attr("x1");
        var $196 = Data_Show.show(Data_Show.showNumber);
        return function($197) {
            return $195($196($197));
        };
    }();
    var x2 = function() {
        var $198 = attr("x2");
        var $199 = Data_Show.show(Data_Show.showNumber);
        return function($200) {
            return $198($199($200));
        };
    }();
    var y = function() {
        var $201 = attr("y");
        var $202 = Data_Show.show(Data_Show.showNumber);
        return function($203) {
            return $201($202($203));
        };
    }();
    var y1 = function() {
        var $204 = attr("y1");
        var $205 = Data_Show.show(Data_Show.showNumber);
        return function($206) {
            return $204($205($206));
        };
    }();
    var y2 = function() {
        var $207 = attr("y2");
        var $208 = Data_Show.show(Data_Show.showNumber);
        return function($209) {
            return $207($208($209));
        };
    }();
    exports["RGB"] = RGB1;
    exports["AnchorMiddle"] = AnchorMiddle1;
    exports["BaselineMiddle"] = BaselineMiddle1;
    exports["attr"] = attr;
    exports["cx"] = cx;
    exports["cy"] = cy;
    exports["r"] = r;
    exports["viewBox"] = viewBox;
    exports["width"] = width;
    exports["height"] = height;
    exports["x"] = x;
    exports["y"] = y;
    exports["x1"] = x1;
    exports["y1"] = y1;
    exports["x2"] = x2;
    exports["y2"] = y2;
    exports["stroke"] = stroke;
    exports["fill"] = fill;
    exports["text_anchor"] = text_anchor;
    exports["dominant_baseline"] = dominant_baseline;
    exports["strokeWidth"] = strokeWidth;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Halogen.Svg.Elements"] = $PS["Halogen.Svg.Elements"] || {
    };
    var exports = $PS["Halogen.Svg.Elements"];
    var Halogen_Svg_Core = $PS["Halogen.Svg.Core"];
    var element = Halogen_Svg_Core.element;
    var g = element("g");
    var line = function(props) {
        return element("line")(props)([]);
    };
    var rect = function(props) {
        return element("rect")(props)([]);
    };
    var svg = element("svg");
    var text = element("text");
    var title = element("title");
    var circle = function(props) {
        return element("circle")(props)([]);
    };
    exports["element"] = element;
    exports["svg"] = svg;
    exports["g"] = g;
    exports["circle"] = circle;
    exports["rect"] = rect;
    exports["line"] = line;
    exports["text"] = text;
    exports["title"] = title;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Web.DOM.Element"] = $PS["Web.DOM.Element"] || {
    };
    var exports = $PS["Web.DOM.Element"];
    var Unsafe_Coerce = $PS["Unsafe.Coerce"];
    var toNode = Unsafe_Coerce.unsafeCoerce;
    exports["toNode"] = toNode;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Halogen.VDom.DOM"] = $PS["Halogen.VDom.DOM"] || {
    };
    var exports = $PS["Halogen.VDom.DOM"];
    var Data_Array = $PS["Data.Array"];
    var Data_Boolean = $PS["Data.Boolean"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Data_Nullable = $PS["Data.Nullable"];
    var Data_Tuple = $PS["Data.Tuple"];
    var Halogen_VDom_Machine = $PS["Halogen.VDom.Machine"];
    var Halogen_VDom_Types = $PS["Halogen.VDom.Types"];
    var Halogen_VDom_Util = $PS["Halogen.VDom.Util"];
    var Web_DOM_Element = $PS["Web.DOM.Element"];
    var haltWidget = function(v) {
        return Halogen_VDom_Machine.halt(v.widget);
    };
    var patchWidget = function(state, vdom) {
        if (vdom instanceof Halogen_VDom_Types.Grafted) return patchWidget(state, Halogen_VDom_Types.runGraft(vdom.value0));
        if (vdom instanceof Halogen_VDom_Types.Widget) {
            var res = Halogen_VDom_Machine.step(state.widget, vdom.value0);
            var res$prime = Halogen_VDom_Machine.unStep(function(v) {
                return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(v.value0, {
                    build: state.build,
                    widget: res
                }, patchWidget, haltWidget));
            })(res);
            return res$prime;
        }
        haltWidget(state);
        return state.build(vdom);
    };
    var haltText = function(v) {
        var parent = Halogen_VDom_Util.parentNode(v.node);
        return Halogen_VDom_Util.removeChild(v.node, parent);
    };
    var patchText = function(state, vdom) {
        if (vdom instanceof Halogen_VDom_Types.Grafted) return patchText(state, Halogen_VDom_Types.runGraft(vdom.value0));
        if (vdom instanceof Halogen_VDom_Types.Text) {
            if (state.value === vdom.value0) return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, state, patchText, haltText));
            if (Data_Boolean.otherwise) {
                var nextState = {
                    build: state.build,
                    node: state.node,
                    value: vdom.value0
                };
                Halogen_VDom_Util.setTextContent(vdom.value0, state.node);
                return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchText, haltText));
            }
        }
        haltText(state);
        return state.build(vdom);
    };
    var haltKeyed = function(v) {
        var parent = Halogen_VDom_Util.parentNode(v.node);
        Halogen_VDom_Util.removeChild(v.node, parent);
        Halogen_VDom_Util.forInE(v.children, function(v1, s) {
            return Halogen_VDom_Machine.halt(s);
        });
        return Halogen_VDom_Machine.halt(v.attrs);
    };
    var haltElem = function(v) {
        var parent = Halogen_VDom_Util.parentNode(v.node);
        Halogen_VDom_Util.removeChild(v.node, parent);
        Halogen_VDom_Util.forEachE(v.children, Halogen_VDom_Machine.halt);
        return Halogen_VDom_Machine.halt(v.attrs);
    };
    var eqElemSpec = function(ns1, v, ns2, v1) {
        var $56 = v === v1;
        if ($56) {
            if (ns1 instanceof Data_Maybe.Just && ns2 instanceof Data_Maybe.Just && ns1.value0 === ns2.value0) return true;
            if (ns1 instanceof Data_Maybe.Nothing && ns2 instanceof Data_Maybe.Nothing) return true;
            return false;
        }
        return false;
    };
    var patchElem = function(state, vdom) {
        if (vdom instanceof Halogen_VDom_Types.Grafted) return patchElem(state, Halogen_VDom_Types.runGraft(vdom.value0));
        if (vdom instanceof Halogen_VDom_Types.Elem && eqElemSpec(state.ns, state.name, vdom.value0, vdom.value1)) {
            var v = Data_Array.length(vdom.value3);
            var v1 = Data_Array.length(state.children);
            if (v1 === 0 && v === 0) {
                var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
                var nextState = {
                    build: state.build,
                    node: state.node,
                    attrs: attrs2,
                    ns: vdom.value0,
                    name: vdom.value1,
                    children: state.children
                };
                return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchElem, haltElem));
            }
            var onThis = function(ix, s) {
                return Halogen_VDom_Machine.halt(s);
            };
            var onThese = function(ix, s, v2) {
                var res = Halogen_VDom_Machine.step(s, v2);
                Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), state.node);
                return res;
            };
            var onThat = function(ix, v2) {
                var res = state.build(v2);
                Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), state.node);
                return res;
            };
            var children2 = Halogen_VDom_Util.diffWithIxE(state.children, vdom.value3, onThese, onThis, onThat);
            var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
            var nextState = {
                build: state.build,
                node: state.node,
                attrs: attrs2,
                ns: vdom.value0,
                name: vdom.value1,
                children: children2
            };
            return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchElem, haltElem));
        }
        haltElem(state);
        return state.build(vdom);
    };
    var patchKeyed = function(state, vdom) {
        if (vdom instanceof Halogen_VDom_Types.Grafted) return patchKeyed(state, Halogen_VDom_Types.runGraft(vdom.value0));
        if (vdom instanceof Halogen_VDom_Types.Keyed && eqElemSpec(state.ns, state.name, vdom.value0, vdom.value1)) {
            var v = Data_Array.length(vdom.value3);
            if (state.length === 0 && v === 0) {
                var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
                var nextState = {
                    build: state.build,
                    node: state.node,
                    attrs: attrs2,
                    ns: vdom.value0,
                    name: vdom.value1,
                    children: state.children,
                    length: 0
                };
                return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchKeyed, haltKeyed));
            }
            var onThis = function(v2, s) {
                return Halogen_VDom_Machine.halt(s);
            };
            var onThese = function(v2, ix$prime, s, v3) {
                var res = Halogen_VDom_Machine.step(s, v3.value1);
                Halogen_VDom_Util.insertChildIx(ix$prime, Halogen_VDom_Machine.extract(res), state.node);
                return res;
            };
            var onThat = function(v2, ix, v3) {
                var res = state.build(v3.value1);
                Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), state.node);
                return res;
            };
            var children2 = Halogen_VDom_Util.diffWithKeyAndIxE(state.children, vdom.value3, Data_Tuple.fst, onThese, onThis, onThat);
            var attrs2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
            var nextState = {
                build: state.build,
                node: state.node,
                attrs: attrs2,
                ns: vdom.value0,
                name: vdom.value1,
                children: children2,
                length: v
            };
            return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchKeyed, haltKeyed));
        }
        haltKeyed(state);
        return state.build(vdom);
    };
    var buildWidget = function(v, build, w) {
        var res = v.buildWidget(v)(w);
        var res$prime = Halogen_VDom_Machine.unStep(function(v1) {
            return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(v1.value0, {
                build: build,
                widget: res
            }, patchWidget, haltWidget));
        })(res);
        return res$prime;
    };
    var buildText = function(v, build, s) {
        var node = Halogen_VDom_Util.createTextNode(s, v.document);
        var state = {
            build: build,
            node: node,
            value: s
        };
        return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchText, haltText));
    };
    var buildKeyed = function(v, build, ns1, name1, as1, ch1) {
        var el = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(ns1), name1, v.document);
        var node = Web_DOM_Element.toNode(el);
        var onChild = function(k, ix, v1) {
            var res = build(v1.value1);
            Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), node);
            return res;
        };
        var children = Halogen_VDom_Util.strMapWithIxE(ch1, Data_Tuple.fst, onChild);
        var attrs = v.buildAttributes(el)(as1);
        var state = {
            build: build,
            node: node,
            attrs: attrs,
            ns: ns1,
            name: name1,
            children: children,
            length: Data_Array.length(ch1)
        };
        return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchKeyed, haltKeyed));
    };
    var buildElem = function(v, build, ns1, name1, as1, ch1) {
        var el = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(ns1), name1, v.document);
        var node = Web_DOM_Element.toNode(el);
        var onChild = function(ix, child) {
            var res = build(child);
            Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(res), node);
            return res;
        };
        var children = Halogen_VDom_Util.forE(ch1, onChild);
        var attrs = v.buildAttributes(el)(as1);
        var state = {
            build: build,
            node: node,
            attrs: attrs,
            ns: ns1,
            name: name1,
            children: children
        };
        return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchElem, haltElem));
    };
    var buildVDom = function(spec) {
        var build = function(v) {
            if (v instanceof Halogen_VDom_Types.Text) return buildText(spec, build, v.value0);
            if (v instanceof Halogen_VDom_Types.Elem) return buildElem(spec, build, v.value0, v.value1, v.value2, v.value3);
            if (v instanceof Halogen_VDom_Types.Keyed) return buildKeyed(spec, build, v.value0, v.value1, v.value2, v.value3);
            if (v instanceof Halogen_VDom_Types.Widget) return buildWidget(spec, build, v.value0);
            if (v instanceof Halogen_VDom_Types.Grafted) return build(Halogen_VDom_Types.runGraft(v.value0));
            throw new Error("Failed pattern match at Halogen.VDom.DOM (line 58, column 27 - line 63, column 52): " + [
                v.constructor.name
            ]);
        };
        return build;
    };
    exports["buildVDom"] = buildVDom;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Halogen.VDom.Thunk"] = $PS["Halogen.VDom.Thunk"] || {
    };
    var exports = $PS["Halogen.VDom.Thunk"];
    var Halogen_VDom_DOM = $PS["Halogen.VDom.DOM"];
    var Halogen_VDom_Machine = $PS["Halogen.VDom.Machine"];
    var Halogen_VDom_Util = $PS["Halogen.VDom.Util"];
    var Thunk1 = function() {
        function Thunk(value0, value1, value2, value3) {
            this.value0 = value0;
            this.value1 = value1;
            this.value2 = value2;
            this.value3 = value3;
        }
        Thunk.create = function(value0) {
            return function(value1) {
                return function(value2) {
                    return function(value3) {
                        return new Thunk(value0, value1, value2, value3);
                    };
                };
            };
        };
        return Thunk;
    }();
    var unsafeEqThunk = function(v, v1) {
        return Halogen_VDom_Util.refEq(v.value0, v1.value0) && Halogen_VDom_Util.refEq(v.value1, v1.value1) && v.value1(v.value3, v1.value3);
    };
    var thunk = function(tid, eqFn, f, a) {
        return new Thunk1(tid, eqFn, f, a);
    };
    var runThunk = function(v) {
        return v.value2(v.value3);
    };
    var buildThunk = function(toVDom) {
        var haltThunk = function(state) {
            return Halogen_VDom_Machine.halt(state.vdom);
        };
        var patchThunk = function(state, t2) {
            var $43 = unsafeEqThunk(state.thunk, t2);
            if ($43) return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(state.vdom), state, patchThunk, haltThunk));
            var vdom = Halogen_VDom_Machine.step(state.vdom, toVDom(runThunk(t2)));
            return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(vdom), {
                vdom: vdom,
                thunk: t2
            }, patchThunk, haltThunk));
        };
        var renderThunk = function(spec) {
            return function(t) {
                var vdom = Halogen_VDom_DOM.buildVDom(spec)(toVDom(runThunk(t)));
                return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(vdom), {
                    thunk: t,
                    vdom: vdom
                }, patchThunk, haltThunk));
            };
        };
        return renderThunk;
    };
    exports["buildThunk"] = buildThunk;
})($a63366291e3889d2$var$PS);
(function(exports) {
    var getEffProp = function(name) {
        return function(node) {
            return function() {
                return node[name];
            };
        };
    };
    exports._parentNode = getEffProp("parentNode");
    exports._nextSibling = getEffProp("nextSibling");
    exports.insertBefore = function(node1) {
        return function(node2) {
            return function(parent) {
                return function() {
                    parent.insertBefore(node1, node2);
                };
            };
        };
    };
    exports.appendChild = function(node) {
        return function(parent) {
            return function() {
                parent.appendChild(node);
            };
        };
    };
    exports.removeChild = function(node) {
        return function(parent) {
            return function() {
                parent.removeChild(node);
            };
        };
    };
})($a63366291e3889d2$var$PS["Web.DOM.Node"] = $a63366291e3889d2$var$PS["Web.DOM.Node"] || {
});
(function($PS) {
    $PS["Web.DOM.Node"] = $PS["Web.DOM.Node"] || {
    };
    var exports = $PS["Web.DOM.Node"];
    var $foreign = $PS["Web.DOM.Node"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_Nullable = $PS["Data.Nullable"];
    var Effect = $PS["Effect"];
    var parentNode = function() {
        var $3 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
        return function($4) {
            return $3($foreign["_parentNode"]($4));
        };
    }();
    var nextSibling = function() {
        var $14 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
        return function($15) {
            return $14($foreign["_nextSibling"]($15));
        };
    }();
    exports["parentNode"] = parentNode;
    exports["nextSibling"] = nextSibling;
    exports["insertBefore"] = $foreign.insertBefore;
    exports["appendChild"] = $foreign.appendChild;
    exports["removeChild"] = $foreign.removeChild;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Halogen.VDom.Driver"] = $PS["Halogen.VDom.Driver"] || {
    };
    var exports = $PS["Halogen.VDom.Driver"];
    var Control_Applicative = $PS["Control.Applicative"];
    var Control_Bind = $PS["Control.Bind"];
    var Control_Category = $PS["Control.Category"];
    var Data_Foldable = $PS["Data.Foldable"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Data_Newtype = $PS["Data.Newtype"];
    var Data_Unit = $PS["Data.Unit"];
    var Effect = $PS["Effect"];
    var Effect_Aff = $PS["Effect.Aff"];
    var Effect_Class = $PS["Effect.Class"];
    var Effect_Ref = $PS["Effect.Ref"];
    var Halogen_Aff_Driver = $PS["Halogen.Aff.Driver"];
    var Halogen_Aff_Driver_State = $PS["Halogen.Aff.Driver.State"];
    var Halogen_Component = $PS["Halogen.Component"];
    var Halogen_VDom_DOM = $PS["Halogen.VDom.DOM"];
    var Halogen_VDom_DOM_Prop = $PS["Halogen.VDom.DOM.Prop"];
    var Halogen_VDom_Machine = $PS["Halogen.VDom.Machine"];
    var Halogen_VDom_Thunk = $PS["Halogen.VDom.Thunk"];
    var Unsafe_Reference = $PS["Unsafe.Reference"];
    var Web_DOM_Node = $PS["Web.DOM.Node"];
    var Web_HTML = $PS["Web.HTML"];
    var Web_HTML_HTMLDocument = $PS["Web.HTML.HTMLDocument"];
    var Web_HTML_HTMLElement = $PS["Web.HTML.HTMLElement"];
    var Web_HTML_Window = $PS["Web.HTML.Window"];
    var substInParent = function(v) {
        return function(v1) {
            return function(v2) {
                if (v1 instanceof Data_Maybe.Just && v2 instanceof Data_Maybe.Just) return Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.insertBefore(v)(v1.value0)(v2.value0));
                if (v1 instanceof Data_Maybe.Nothing && v2 instanceof Data_Maybe.Just) return Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.appendChild(v)(v2.value0));
                return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
            };
        };
    };
    var removeChild = function(v) {
        return function __do() {
            var npn = Web_DOM_Node.parentNode(v.node)();
            return Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function(pn) {
                return Web_DOM_Node.removeChild(v.node)(pn);
            })(npn)();
        };
    };
    var mkSpec = function(handler) {
        return function(renderChildRef) {
            return function(document) {
                var getNode = Halogen_Aff_Driver_State.unRenderStateX(function(v) {
                    return v.node;
                });
                var done = function(st) {
                    if (st instanceof Data_Maybe.Just) return Halogen_VDom_Machine.halt(st.value0);
                    return Data_Unit.unit;
                };
                var buildWidget = function(spec) {
                    var buildThunk = Halogen_VDom_Thunk.buildThunk(Data_Newtype.unwrap())(spec);
                    var renderComponentSlot = function(cs) {
                        var renderChild = Effect_Ref.read(renderChildRef)();
                        var rsx = renderChild(cs)();
                        var node = getNode(rsx);
                        return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, Data_Maybe.Nothing.value, patch, done));
                    };
                    var render = function(slot) {
                        if (slot instanceof Halogen_Component.ComponentSlot) return renderComponentSlot(slot.value0);
                        if (slot instanceof Halogen_Component.ThunkSlot) {
                            var step = buildThunk(slot.value0);
                            return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(step), new Data_Maybe.Just(step), patch, done));
                        }
                        throw new Error("Failed pattern match at Halogen.VDom.Driver (line 85, column 7 - line 90, column 75): " + [
                            slot.constructor.name
                        ]);
                    };
                    var patch = function(st, slot) {
                        if (st instanceof Data_Maybe.Just) {
                            if (slot instanceof Halogen_Component.ComponentSlot) {
                                Halogen_VDom_Machine.halt(st.value0);
                                return renderComponentSlot(slot.value0);
                            }
                            if (slot instanceof Halogen_Component.ThunkSlot) {
                                var step$prime = Halogen_VDom_Machine.step(st.value0, slot.value0);
                                return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(step$prime), new Data_Maybe.Just(step$prime), patch, done));
                            }
                            throw new Error("Failed pattern match at Halogen.VDom.Driver (line 98, column 22 - line 104, column 79): " + [
                                slot.constructor.name
                            ]);
                        }
                        return render(slot);
                    };
                    return render;
                };
                var buildAttributes = Halogen_VDom_DOM_Prop.buildProp(handler);
                return {
                    buildWidget: buildWidget,
                    buildAttributes: buildAttributes,
                    document: document
                };
            };
        };
    };
    var renderSpec = function(document) {
        return function(container) {
            var render = function(handler) {
                return function(child) {
                    return function(v) {
                        return function(v1) {
                            if (v1 instanceof Data_Maybe.Nothing) return function __do() {
                                var renderChildRef = Effect_Ref["new"](child)();
                                var spec = mkSpec(handler)(renderChildRef)(document);
                                var machine = Halogen_VDom_DOM.buildVDom(spec)(v);
                                var node = Halogen_VDom_Machine.extract(machine);
                                Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.appendChild(node)(Web_HTML_HTMLElement.toNode(container)))();
                                return {
                                    machine: machine,
                                    node: node,
                                    renderChildRef: renderChildRef
                                };
                            };
                            if (v1 instanceof Data_Maybe.Just) return function __do() {
                                Effect_Ref.write(child)(v1.value0.renderChildRef)();
                                var parent = Web_DOM_Node.parentNode(v1.value0.node)();
                                var nextSib = Web_DOM_Node.nextSibling(v1.value0.node)();
                                var machine$prime = Halogen_VDom_Machine.step(v1.value0.machine, v);
                                var newNode = Halogen_VDom_Machine.extract(machine$prime);
                                Control_Applicative.when(Effect.applicativeEffect)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean)))(Unsafe_Reference.unsafeRefEq)(v1.value0.node)(newNode))(substInParent(newNode)(nextSib)(parent))();
                                return {
                                    machine: machine$prime,
                                    node: newNode,
                                    renderChildRef: v1.value0.renderChildRef
                                };
                            };
                            throw new Error("Failed pattern match at Halogen.VDom.Driver (line 159, column 5 - line 175, column 80): " + [
                                v1.constructor.name
                            ]);
                        };
                    };
                };
            };
            return {
                render: render,
                renderChild: Control_Category.identity(Control_Category.categoryFn),
                removeChild: removeChild,
                dispose: removeChild
            };
        };
    };
    var runUI = function(component) {
        return function(i) {
            return function(element) {
                return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Data_Functor.map(Effect.functorEffect)(Web_HTML_HTMLDocument.toDocument)(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.document)(Web_HTML.window))))(function(document) {
                    return Halogen_Aff_Driver.runUI(renderSpec(document)(element))(component)(i);
                });
            };
        };
    };
    exports["runUI"] = runUI;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["ProtoVoices.Common"] = $PS["ProtoVoices.Common"] || {
    };
    var exports = $PS["ProtoVoices.Common"];
    var Control_Applicative = $PS["Control.Applicative"];
    var Control_Bind = $PS["Control.Bind"];
    var Data_Boolean = $PS["Data.Boolean"];
    var Data_Char = $PS["Data.Char"];
    var Data_Either = $PS["Data.Either"];
    var Data_EuclideanRing = $PS["Data.EuclideanRing"];
    var Data_Foldable = $PS["Data.Foldable"];
    var Data_List_Types = $PS["Data.List.Types"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Data_Ord = $PS["Data.Ord"];
    var Data_Ratio = $PS["Data.Ratio"];
    var Data_String_Common = $PS["Data.String.Common"];
    var Text_Parsing_StringParser = $PS["Text.Parsing.StringParser"];
    var Text_Parsing_StringParser_CodePoints = $PS["Text.Parsing.StringParser.CodePoints"];
    var Text_Parsing_StringParser_Combinators = $PS["Text.Parsing.StringParser.Combinators"];
    var ascii0 = Data_Char.toCharCode("0");
    var digit = function(d) {
        return Data_Char.toCharCode(d) - ascii0 | 0;
    };
    var $$parseInt = Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_Combinators.option("+")(Text_Parsing_StringParser_CodePoints["char"]("-")))(function(signChar) {
        var sign = function() {
            var $7 = signChar === "-";
            if ($7) return -1;
            return 1;
        }();
        return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_Combinators.many1(Text_Parsing_StringParser_CodePoints.anyDigit))(function(dgts) {
            return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(sign * Data_Foldable.foldl(Data_List_Types.foldableNonEmptyList)(function(acc) {
                return function(d) {
                    return (10 * acc | 0) + digit(d) | 0;
                };
            })(0)(dgts) | 0);
        });
    });
    var parseFrac = Control_Bind.bind(Text_Parsing_StringParser.bindParser)($$parseInt)(function(num) {
        return Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_Combinators.option(1)(Control_Bind.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_CodePoints["char"]("/"))(function() {
            return $$parseInt;
        })))(function(denom) {
            return Control_Applicative.pure(Text_Parsing_StringParser.applicativeParser)(Data_Ratio.reduce(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt)(num)(denom));
        });
    });
    var parseMBS = function(str) {
        var v = function(v1) {
            if (Data_Boolean.otherwise) return Data_Maybe.Nothing.value;
            throw new Error("Failed pattern match at ProtoVoices.Common (line 54, column 1 - line 54, column 32): " + [
                str.constructor.name
            ]);
        };
        var $10 = Data_String_Common.split(".")(str);
        if ($10.length === 3) return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Either.hush(Text_Parsing_StringParser.runParser($$parseInt)($10[0])))(function(m) {
            return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Either.hush(Text_Parsing_StringParser.runParser($$parseInt)($10[1])))(function(b) {
                return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Either.hush(Text_Parsing_StringParser.runParser(parseFrac)($10[2])))(function(s) {
                    return Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
                        m: m,
                        b: b,
                        s: s
                    });
                });
            });
        });
        return v(true);
    };
    var parseTime = function(str) {
        return Data_Maybe.maybe(new Data_Either.Left(str))(Data_Either.Right.create)(parseMBS(str));
    };
    exports["parseTime"] = parseTime;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["ProtoVoices.JSONTransport"] = $PS["ProtoVoices.JSONTransport"] || {
    };
    var exports = $PS["ProtoVoices.JSONTransport"];
    var Control_Applicative = $PS["Control.Applicative"];
    var Control_Bind = $PS["Control.Bind"];
    var Data_Either = $PS["Data.Either"];
    var Data_Foldable = $PS["Data.Foldable"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_Map_Internal = $PS["Data.Map.Internal"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Data_Ord = $PS["Data.Ord"];
    var Data_Pitches_Class = $PS["Data.Pitches.Class"];
    var Data_Pitches_Spelled = $PS["Data.Pitches.Spelled"];
    var Data_Set = $PS["Data.Set"];
    var Data_Traversable = $PS["Data.Traversable"];
    var Data_Tuple = $PS["Data.Tuple"];
    var Data_Variant = $PS["Data.Variant"];
    var ProtoVoices_Common = $PS["ProtoVoices.Common"];
    var ProtoVoices_Folding = $PS["ProtoVoices.Folding"];
    var ProtoVoices_Leftmost = $PS["ProtoVoices.Leftmost"];
    var ProtoVoices_Model = $PS["ProtoVoices.Model"];
    var Type_Proxy = $PS["Type.Proxy"];
    var splitFromJSON = function(v) {
        var wrap = function(read) {
            return function(v1) {
                var children$prime = Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Data_Functor.map(Data_Functor.functorArray)(function(v2) {
                    return Data_Functor.map(Data_Either.functorEither)(function(v3) {
                        return {
                            child: v2.child,
                            orn: v3
                        };
                    })(read(v2.orn));
                })(v1.children));
                return Data_Functor.map(Data_Either.functorEither)(Data_Tuple.Tuple.create(v1.parent))(children$prime);
            };
        };
        var readRightOrnament = function(v1) {
            if (v1 instanceof Data_Maybe.Just && v1.value0 === "RightNeighbor") return Data_Either.Right.create(new Data_Maybe.Just(ProtoVoices_Model.RightNeighbor.value));
            if (v1 instanceof Data_Maybe.Just && v1.value0 === "RightRepeat") return Data_Either.Right.create(new Data_Maybe.Just(ProtoVoices_Model.RightRepeat.value));
            if (v1 instanceof Data_Maybe.Just) return Data_Either.Left.create("Expected right ornament type but got " + v1.value0);
            if (v1 instanceof Data_Maybe.Nothing) return new Data_Either.Right(Data_Maybe.Nothing.value);
            throw new Error("Failed pattern match at ProtoVoices.JSONTransport (line 247, column 23 - line 251, column 29): " + [
                v1.constructor.name
            ]);
        };
        var readPassingOrnament = function(v1) {
            if (v1 instanceof Data_Maybe.Just && v1.value0 === "PassingMid") return Data_Either.Right.create(new Data_Maybe.Just(ProtoVoices_Model.PassingMid.value));
            if (v1 instanceof Data_Maybe.Just && v1.value0 === "PassingLeft") return Data_Either.Right.create(new Data_Maybe.Just(ProtoVoices_Model.PassingLeft.value));
            if (v1 instanceof Data_Maybe.Just && v1.value0 === "PassingRight") return Data_Either.Right.create(new Data_Maybe.Just(ProtoVoices_Model.PassingRight.value));
            if (v1 instanceof Data_Maybe.Just) return Data_Either.Left.create("Expected passing ornament type but got " + v1.value0);
            if (v1 instanceof Data_Maybe.Nothing) return new Data_Either.Right(Data_Maybe.Nothing.value);
            throw new Error("Failed pattern match at ProtoVoices.JSONTransport (line 240, column 25 - line 245, column 29): " + [
                v1.constructor.name
            ]);
        };
        var readLeftOrnament = function(v1) {
            if (v1 instanceof Data_Maybe.Just && v1.value0 === "LeftNeighbor") return Data_Either.Right.create(new Data_Maybe.Just(ProtoVoices_Model.LeftNeighbor.value));
            if (v1 instanceof Data_Maybe.Just && v1.value0 === "LeftRepeat") return Data_Either.Right.create(new Data_Maybe.Just(ProtoVoices_Model.LeftRepeat.value));
            if (v1 instanceof Data_Maybe.Just) return Data_Either.Left.create("Expected left ornament type but got " + v1.value0);
            if (v1 instanceof Data_Maybe.Nothing) return new Data_Either.Right(Data_Maybe.Nothing.value);
            throw new Error("Failed pattern match at ProtoVoices.JSONTransport (line 253, column 22 - line 257, column 29): " + [
                v1.constructor.name
            ]);
        };
        var readDoubleOrnament = function(v1) {
            if (v1 instanceof Data_Maybe.Just && v1.value0 === "RootNote") return Data_Either.Right.create(new Data_Either.Left(ProtoVoices_Leftmost.RootNote.value));
            if (v1 instanceof Data_Maybe.Just && v1.value0 === "FullRepeat") return Data_Either.Right.create(Data_Either.Right.create(new Data_Maybe.Just(ProtoVoices_Model.FullRepeat.value)));
            if (v1 instanceof Data_Maybe.Just && v1.value0 === "FullNeighbor") return Data_Either.Right.create(Data_Either.Right.create(new Data_Maybe.Just(ProtoVoices_Model.FullNeighbor.value)));
            if (v1 instanceof Data_Maybe.Just && v1.value0 === "LeftRepeatOfRight") return Data_Either.Right.create(Data_Either.Right.create(new Data_Maybe.Just(ProtoVoices_Model.LeftRepeatOfRight.value)));
            if (v1 instanceof Data_Maybe.Just && v1.value0 === "RightRepeatOfLeft") return Data_Either.Right.create(Data_Either.Right.create(new Data_Maybe.Just(ProtoVoices_Model.RightRepeatOfLeft.value)));
            if (v1 instanceof Data_Maybe.Just) return Data_Either.Left.create("Expected double ornament type but got " + v1.value0);
            if (v1 instanceof Data_Maybe.Nothing) return Data_Either.Right.create(new Data_Either.Right(Data_Maybe.Nothing.value));
            throw new Error("Failed pattern match at ProtoVoices.JSONTransport (line 231, column 24 - line 238, column 37): " + [
                v1.constructor.name
            ]);
        };
        return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.map(Data_Either.functorEither)(Data_Map_Internal.fromFoldable(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
            reflectSymbol: function() {
                return "right";
            }
        })(ProtoVoices_Model.ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
            reflectSymbol: function() {
                return "pitch";
            }
        })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
            reflectSymbol: function() {
                return "id";
            }
        })(Data_Ord.ordString)))))()({
            reflectSymbol: function() {
                return "left";
            }
        })(ProtoVoices_Model.ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
            reflectSymbol: function() {
                return "pitch";
            }
        })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
            reflectSymbol: function() {
                return "id";
            }
        })(Data_Ord.ordString))))))(Data_Foldable.foldableArray))(Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Data_Functor.map(Data_Functor.functorArray)(wrap(readDoubleOrnament))(v.regular))))(function(regular) {
            return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.map(Data_Either.functorEither)(Data_Map_Internal.fromFoldable(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                reflectSymbol: function() {
                    return "right";
                }
            })(ProtoVoices_Model.ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                reflectSymbol: function() {
                    return "pitch";
                }
            })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                reflectSymbol: function() {
                    return "id";
                }
            })(Data_Ord.ordString)))))()({
                reflectSymbol: function() {
                    return "left";
                }
            })(ProtoVoices_Model.ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                reflectSymbol: function() {
                    return "pitch";
                }
            })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                reflectSymbol: function() {
                    return "id";
                }
            })(Data_Ord.ordString))))))(Data_Foldable.foldableArray))(Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Data_Functor.map(Data_Functor.functorArray)(wrap(readPassingOrnament))(v.passing))))(function(passing) {
                return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.map(Data_Either.functorEither)(Data_Map_Internal.fromFoldable(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                    reflectSymbol: function() {
                        return "pitch";
                    }
                })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                    reflectSymbol: function() {
                        return "id";
                    }
                })(Data_Ord.ordString)))(Data_Foldable.foldableArray))(Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Data_Functor.map(Data_Functor.functorArray)(wrap(readRightOrnament))(v.fromLeft))))(function(fromLeft) {
                    return Control_Bind.bind(Data_Either.bindEither)(Data_Functor.map(Data_Either.functorEither)(Data_Map_Internal.fromFoldable(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Data_Ord.ordString)))(Data_Foldable.foldableArray))(Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Data_Functor.map(Data_Functor.functorArray)(wrap(readLeftOrnament))(v.fromRight))))(function(fromRight) {
                        return Control_Applicative.pure(Data_Either.applicativeEither)({
                            regular: regular,
                            passing: passing,
                            fromLeft: fromLeft,
                            fromRight: fromRight,
                            unexplained: v.unexplained,
                            keepLeft: v.keepLeft,
                            keepRight: v.keepRight,
                            passLeft: v.passLeft,
                            passRight: v.passRight,
                            ids: v.ids
                        });
                    });
                });
            });
        });
    };
    var horiFromJSON = function(v) {
        var getDist = Data_Variant.on()({
            reflectSymbol: function() {
                return "tooManyChildren";
            }
        })(Type_Proxy["Proxy"].value)(ProtoVoices_Leftmost.TooManyChildren.create)(Data_Variant.on()({
            reflectSymbol: function() {
                return "bothChildren";
            }
        })(Type_Proxy["Proxy"].value)(ProtoVoices_Leftmost.BothChildren.create)(Data_Variant.on()({
            reflectSymbol: function() {
                return "rightChild";
            }
        })(Type_Proxy["Proxy"].value)(ProtoVoices_Leftmost.RightChild.create)(Data_Variant.on()({
            reflectSymbol: function() {
                return "leftChild";
            }
        })(Type_Proxy["Proxy"].value)(ProtoVoices_Leftmost.LeftChild.create)(Data_Variant.case_))));
        var childFromJSON = function(v1) {
            return new Data_Tuple.Tuple(v1.parent, getDist(v1.child));
        };
        return Data_Either.Right.create({
            midEdges: {
                regular: Data_Set.fromFoldable(Data_Foldable.foldableArray)(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                    reflectSymbol: function() {
                        return "right";
                    }
                })(ProtoVoices_Model.ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                    reflectSymbol: function() {
                        return "pitch";
                    }
                })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                    reflectSymbol: function() {
                        return "id";
                    }
                })(Data_Ord.ordString)))))()({
                    reflectSymbol: function() {
                        return "left";
                    }
                })(ProtoVoices_Model.ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                    reflectSymbol: function() {
                        return "pitch";
                    }
                })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                    reflectSymbol: function() {
                        return "id";
                    }
                })(Data_Ord.ordString))))))(v.midEdges.regular),
                passing: v.midEdges.passing
            },
            children: Data_Map_Internal.fromFoldable(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                reflectSymbol: function() {
                    return "pitch";
                }
            })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                reflectSymbol: function() {
                    return "id";
                }
            })(Data_Ord.ordString)))(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(childFromJSON)(v.children)),
            ids: v.ids,
            unexplained: v.unexplained
        });
    };
    var freezeFromJSON = function(v) {
        return Data_Either.Right.create({
            ties: v.ties,
            prevTime: ProtoVoices_Common.parseTime(v.prevTime)
        });
    };
    var leftmostFromJSON = Data_Variant.on()({
        reflectSymbol: function() {
            return "hori";
        }
    })(Type_Proxy["Proxy"].value)(function() {
        var $144 = Data_Functor.map(Data_Either.functorEither)(ProtoVoices_Leftmost.LMHorizontalize.create);
        return function($145) {
            return $144(horiFromJSON($145));
        };
    }())(Data_Variant.on()({
        reflectSymbol: function() {
            return "splitRight";
        }
    })(Type_Proxy["Proxy"].value)(function() {
        var $146 = Data_Functor.map(Data_Either.functorEither)(ProtoVoices_Leftmost.LMSplitRight.create);
        return function($147) {
            return $146(splitFromJSON($147));
        };
    }())(Data_Variant.on()({
        reflectSymbol: function() {
            return "splitOnly";
        }
    })(Type_Proxy["Proxy"].value)(function() {
        var $148 = Data_Functor.map(Data_Either.functorEither)(ProtoVoices_Leftmost.LMSplitOnly.create);
        return function($149) {
            return $148(splitFromJSON($149));
        };
    }())(Data_Variant.on()({
        reflectSymbol: function() {
            return "splitLeft";
        }
    })(Type_Proxy["Proxy"].value)(function() {
        var $150 = Data_Functor.map(Data_Either.functorEither)(ProtoVoices_Leftmost.LMSplitLeft.create);
        return function($151) {
            return $150(splitFromJSON($151));
        };
    }())(Data_Variant.on()({
        reflectSymbol: function() {
            return "freezeOnly";
        }
    })(Type_Proxy["Proxy"].value)(function() {
        var $152 = Data_Functor.map(Data_Either.functorEither)(ProtoVoices_Leftmost.LMFreezeOnly.create);
        return function($153) {
            return $152(freezeFromJSON($153));
        };
    }())(Data_Variant.on()({
        reflectSymbol: function() {
            return "freezeLeft";
        }
    })(Type_Proxy["Proxy"].value)(function() {
        var $154 = Data_Functor.map(Data_Either.functorEither)(ProtoVoices_Leftmost.LMFreezeLeft.create);
        return function($155) {
            return $154(freezeFromJSON($155));
        };
    }())(Data_Variant.case_))))));
    var modelFromJSON = function(v) {
        return Control_Bind.bind(Data_Either.bindEither)(Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Data_Functor.map(Data_Functor.functorArray)(leftmostFromJSON)(v.derivation)))(function(deriv) {
            return ProtoVoices_Folding.leftmostToReduction(v.topSegments)(deriv);
        });
    };
    exports["modelFromJSON"] = modelFromJSON;
})($a63366291e3889d2$var$PS);
(function(exports) {
    exports.exp = Math.exp;
})($a63366291e3889d2$var$PS["Math"] = $a63366291e3889d2$var$PS["Math"] || {
});
(function($PS) {
    $PS["Math"] = $PS["Math"] || {
    };
    var exports = $PS["Math"];
    var $foreign = $PS["Math"];
    exports["exp"] = $foreign.exp;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Render"] = $PS["Render"] || {
    };
    var exports = $PS["Render"];
    var Common = $PS["Common"];
    var Control_Applicative = $PS["Control.Applicative"];
    var Control_Bind = $PS["Control.Bind"];
    var Data_Array = $PS["Data.Array"];
    var Data_Boolean = $PS["Data.Boolean"];
    var Data_Either = $PS["Data.Either"];
    var Data_Eq = $PS["Data.Eq"];
    var Data_EuclideanRing = $PS["Data.EuclideanRing"];
    var Data_Foldable = $PS["Data.Foldable"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_Int = $PS["Data.Int"];
    var Data_List = $PS["Data.List"];
    var Data_List_Types = $PS["Data.List.Types"];
    var Data_Map_Internal = $PS["Data.Map.Internal"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Data_Ord = $PS["Data.Ord"];
    var Data_Pitches_Class = $PS["Data.Pitches.Class"];
    var Data_Pitches_Spelled = $PS["Data.Pitches.Spelled"];
    var Data_Ratio = $PS["Data.Ratio"];
    var Data_Semigroup = $PS["Data.Semigroup"];
    var Data_Set = $PS["Data.Set"];
    var Data_Show = $PS["Data.Show"];
    var Data_Tuple = $PS["Data.Tuple"];
    var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
    var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
    var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
    var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
    var Halogen_Query_Input = $PS["Halogen.Query.Input"];
    var Halogen_Svg_Attributes = $PS["Halogen.Svg.Attributes"];
    var Halogen_Svg_Elements = $PS["Halogen.Svg.Elements"];
    var $$Math = $PS["Math"];
    var ProtoVoices_Model = $PS["ProtoVoices.Model"];
    var NotSelected1 = function() {
        function NotSelected() {
        }
        NotSelected.value = new NotSelected();
        return NotSelected;
    }();
    var Selected1 = function() {
        function Selected() {
        }
        Selected.value = new Selected();
        return Selected;
    }();
    var Related1 = function() {
        function Related() {
        }
        Related.value = new Related();
        return Related;
    }();
    var white = Data_Maybe.Just.create(new Halogen_Svg_Attributes.RGB(255, 255, 255));
    var selColorOuter$prime = Data_Maybe.Just.create(new Halogen_Svg_Attributes.RGB(135, 206, 250));
    var selColorOuter = Data_Maybe.Just.create(new Halogen_Svg_Attributes.RGB(30, 144, 255));
    var selColorInner$prime = selColorOuter$prime;
    var selColorInner = selColorOuter;
    var scoreScale = 0.9;
    var scoreHeight = 150;
    var scaley = function(v) {
        return function(y) {
            return y * 100 * $$Math.exp(v.yscale);
        };
    };
    var scalex = function(v) {
        return function(x) {
            return x * 70 * $$Math.exp(v.xscale);
        };
    };
    var offset = function(i) {
        return Data_Int.toNumber(i) * 20;
    };
    var noteSize = 29;
    var noteSelectionStatus = function(sel) {
        return function(note) {
            var selected = Common.noteIsSelected(sel)(new ProtoVoices_Model.Inner(note));
            var parentSelected = function() {
                if (sel instanceof Data_Maybe.Just) return ProtoVoices_Model.explHasParent(note.id)(sel.value0.expl);
                if (sel instanceof Data_Maybe.Nothing) return false;
                throw new Error("Failed pattern match at Render (line 118, column 20 - line 120, column 21): " + [
                    sel.constructor.name
                ]);
            }();
            if (selected) return Selected1.value;
            if (parentSelected) return Related1.value;
            return NotSelected1.value;
        };
    };
    var lightgray = Data_Maybe.Just.create(new Halogen_Svg_Attributes.RGB(211, 211, 211));
    var innerFactor = 1.6;
    var findPitchIndex = function(v) {
        return function(v1) {
            if (v instanceof ProtoVoices_Model.Inner && v1 instanceof ProtoVoices_Model.Inner) return Data_Maybe.fromMaybe(-1)(Data_Array.findIndex(function(n) {
                return Data_Eq.eq(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                    reflectSymbol: function() {
                        return "pitch";
                    }
                })(Data_Pitches_Class.eqPitch(Data_Pitches_Spelled.eqSInterval)))()({
                    reflectSymbol: function() {
                        return "id";
                    }
                })(Data_Eq.eqString)))(n.note)(v.value0);
            })(v1.value0));
            return 0;
        };
    };
    var eqSelectionStatus = {
        eq: function(x) {
            return function(y) {
                if (x instanceof NotSelected1 && y instanceof NotSelected1) return true;
                if (x instanceof Selected1 && y instanceof Selected1) return true;
                if (x instanceof Related1 && y instanceof Related1) return true;
                return false;
            };
        }
    };
    var cursor = Halogen_Svg_Attributes.attr("cursor");
    var black = Data_Maybe.Just.create(new Halogen_Svg_Attributes.RGB(0, 0, 0));
    var renderHori = function(sett) {
        return function(selection) {
            return function(slices) {
                return function(v) {
                    var explToHori = function(note) {
                        if (note.expl instanceof ProtoVoices_Model.HoriExpl) return new Data_Maybe.Just({
                            childNote: note.note,
                            parentNote: note.expl.value0
                        });
                        return Data_Maybe.Nothing.value;
                    };
                    return Data_Maybe.fromMaybe(Halogen_HTML_Core.text(""))(Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Map_Internal.lookup(ProtoVoices_Model.ordSliceId)(v.child)(slices))(function(v1) {
                        return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Map_Internal.lookup(ProtoVoices_Model.ordSliceId)(v.parent)(slices))(function(v2) {
                            var mkedge = function(v3) {
                                var offp = findPitchIndex(new ProtoVoices_Model.Inner(v3.parentNote))(v2.slice.notes);
                                var offc = findPitchIndex(new ProtoVoices_Model.Inner(v3.childNote))(v1.slice.notes);
                                var edgeSelected = Common.noteIsSelected(selection)(new ProtoVoices_Model.Inner(v3.parentNote)) || Common.noteIsSelected(selection)(new ProtoVoices_Model.Inner(v3.childNote));
                                return Halogen_Svg_Elements.line([
                                    Halogen_Svg_Attributes.x1(scalex(sett)(v2.slice.x)),
                                    Halogen_Svg_Attributes.y1(scaley(sett)(v2.depth) + offset(offp)),
                                    Halogen_Svg_Attributes.x2(scalex(sett)(v1.slice.x)),
                                    Halogen_Svg_Attributes.y2(scaley(sett)(v1.depth) + offset(offc)),
                                    Halogen_Svg_Attributes.stroke(function() {
                                        if (edgeSelected) return selColorInner;
                                        return black;
                                    }()),
                                    Halogen_Svg_Attributes.strokeWidth(1)
                                ]);
                            };
                            var edges = Data_Functor.map(Data_Functor.functorArray)(mkedge)(Data_Array.catMaybes(Data_Functor.map(Data_Functor.functorArray)(explToHori)(ProtoVoices_Model.getInnerNotes(v1.slice))));
                            var bar = [
                                Halogen_Svg_Elements.line([
                                    Halogen_Svg_Attributes.x1(scalex(sett)(v2.slice.x)),
                                    Halogen_Svg_Attributes.y1(scaley(sett)(v2.depth)),
                                    Halogen_Svg_Attributes.x2(scalex(sett)(v1.slice.x)),
                                    Halogen_Svg_Attributes.y2(scaley(sett)(v1.depth)),
                                    Halogen_Svg_Attributes.stroke(lightgray),
                                    Halogen_Svg_Attributes.strokeWidth(5),
                                    Halogen_Svg_Attributes.attr("stroke-dasharray")("10,5")
                                ])
                            ];
                            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Halogen_Svg_Elements.g([])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(bar)(edges)));
                        });
                    }));
                };
            };
        };
    };
    var renderInner = function(sett) {
        return function(sel) {
            return function(v) {
                return function(graph) {
                    var width = scalex(sett)(graph.maxx + 2);
                    var surfaceEdges = Data_Set.fromFoldable(Data_Foldable.foldableArray)(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ProtoVoices_Model.ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Data_Ord.ordString)))))()({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ProtoVoices_Model.ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Data_Ord.ordString))))))(Control_Bind.bind(Control_Bind.bindArray)(v.transs)(function(trans) {
                        return Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Array.fromFoldable(Data_Set.foldableSet)(trans.regular))(trans.passing);
                    }));
                    var selIsRoot = function() {
                        if (sel instanceof Data_Maybe.Just) return Data_Eq.eq(ProtoVoices_Model.eqNoteExplanation)(sel.value0.expl)(ProtoVoices_Model.RootExpl.value);
                        if (sel instanceof Data_Maybe.Nothing) return false;
                        throw new Error("Failed pattern match at Render (line 316, column 15 - line 318, column 21): " + [
                            sel.constructor.name
                        ]);
                    }();
                    var mkNode = function(v1) {
                        return function(label) {
                            return function(title) {
                                return function(selected) {
                                    return function(selAttr) {
                                        return Halogen_Svg_Elements.g([])([
                                            Halogen_Svg_Elements.circle(Data_Semigroup.append(Data_Semigroup.semigroupArray)([
                                                Halogen_Svg_Attributes.cx(v1.x),
                                                Halogen_Svg_Attributes.cy(v1.y),
                                                Halogen_Svg_Attributes.r(15),
                                                Halogen_Svg_Attributes.stroke(black),
                                                Halogen_Svg_Attributes.fill(function() {
                                                    if (selected instanceof NotSelected1) return white;
                                                    if (selected instanceof Selected1) return selColorInner;
                                                    if (selected instanceof Related1) return selColorInner$prime;
                                                    throw new Error("Failed pattern match at Render (line 341, column 23 - line 344, column 42): " + [
                                                        selected.constructor.name
                                                    ]);
                                                }()),
                                                cursor("pointer")
                                            ])(selAttr)),
                                            Halogen_Svg_Elements.element("text")([
                                                Halogen_Svg_Attributes.x(v1.x),
                                                Halogen_Svg_Attributes.y(v1.y),
                                                Halogen_Svg_Attributes.text_anchor(Halogen_Svg_Attributes.AnchorMiddle.value),
                                                Halogen_Svg_Attributes.dominant_baseline(Halogen_Svg_Attributes.BaselineMiddle.value),
                                                Halogen_HTML_Properties.style("pointer-events: none;"),
                                                Halogen_Svg_Attributes.fill(function() {
                                                    var $81 = Data_Eq.eq(eqSelectionStatus)(selected)(NotSelected1.value);
                                                    if ($81) return black;
                                                    return white;
                                                }())
                                            ])([
                                                Halogen_HTML_Core.text(label)
                                            ]),
                                            Halogen_Svg_Elements.title([])([
                                                Halogen_HTML_Core.text(title)
                                            ])
                                        ]);
                                    };
                                };
                            };
                        };
                    };
                    var extractNotes = function(slice) {
                        return Data_Map_Internal.fromFoldable(Data_Ord.ordString)(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(function(n) {
                            return new Data_Tuple.Tuple(n.note.id, {
                                note: n,
                                x: slice.x
                            });
                        })(ProtoVoices_Model.getInnerNotes(slice)));
                    };
                    var notes = Data_Map_Internal.unions(Data_Ord.ordString)(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(extractNotes)(v.slices));
                    var maxy = Data_Maybe.fromMaybe(0)(Data_Foldable.maximum(Data_Ord.ordInt)(Data_List_Types.foldableList)(Data_Functor.map(Data_List_Types.functorList)(function() {
                        var $177 = Data_Pitches_Spelled.diasteps(Data_Pitches_Spelled.spelledPitch(Data_Pitches_Spelled.spelledSInterval)(Data_Pitches_Spelled.hasintervalclassSInterval)(Data_Pitches_Spelled.spelledSIC));
                        return function($178) {
                            return $177(function(v1) {
                                return v1.note.note.pitch;
                            }($178));
                        };
                    }())(Data_Map_Internal.values(notes))));
                    var miny = Data_Maybe.fromMaybe(0)(Data_Foldable.minimum(Data_Ord.ordInt)(Data_List_Types.foldableList)(Data_Functor.map(Data_List_Types.functorList)(function() {
                        var $179 = Data_Pitches_Spelled.diasteps(Data_Pitches_Spelled.spelledPitch(Data_Pitches_Spelled.spelledSInterval)(Data_Pitches_Spelled.hasintervalclassSInterval)(Data_Pitches_Spelled.spelledSIC));
                        return function($180) {
                            return $179(function(v1) {
                                return v1.note.note.pitch;
                            }($180));
                        };
                    }())(Data_Map_Internal.values(notes))));
                    var height = innerFactor * offset((maxy - miny | 0) + 2 | 0);
                    var notePosition = function(v1) {
                        if (v1 instanceof ProtoVoices_Model.Inner) return {
                            x: scalex(sett)(Data_Maybe.fromMaybe(0)(Data_Functor.map(Data_Maybe.functorMaybe)(function(v2) {
                                return v2.x;
                            })(Data_Map_Internal.lookup(Data_Ord.ordString)(v1.value0.id)(notes)))),
                            y: innerFactor * offset(maxy - Data_Pitches_Spelled.diasteps(Data_Pitches_Spelled.spelledPitch(Data_Pitches_Spelled.spelledSInterval)(Data_Pitches_Spelled.hasintervalclassSInterval)(Data_Pitches_Spelled.spelledSIC))(v1.value0.pitch) | 0)
                        };
                        if (v1 instanceof ProtoVoices_Model.Start) return {
                            x: 0,
                            y: offset(maxy - miny | 0) * innerFactor / 2
                        };
                        if (v1 instanceof ProtoVoices_Model.Stop) return {
                            x: scalex(sett)(graph.maxx),
                            y: offset(maxy - miny | 0) * innerFactor / 2
                        };
                        throw new Error("Failed pattern match at Render (line 321, column 18 - line 327, column 89): " + [
                            v1.constructor.name
                        ]);
                    };
                    var mkNote = function(v1) {
                        var selected = noteSelectionStatus(sel)(v1.note.note);
                        var selAttr = [
                            Halogen_HTML_Events.onClick(function(ev) {
                                return new Common.Select(function() {
                                    var $87 = Data_Eq.eq(eqSelectionStatus)(selected)(Selected1.value);
                                    if ($87) return Data_Maybe.Nothing.value;
                                    return new Data_Maybe.Just({
                                        note: v1.note.note,
                                        expl: v1.note.expl
                                    });
                                }());
                            })
                        ];
                        return mkNode(notePosition(new ProtoVoices_Model.Inner(v1.note.note)))(Data_Show.show(Data_Pitches_Class.showPitchInst(Data_Pitches_Spelled.showpitchSInterval))(v1.note.note.pitch))(Common.showExplanation(v1.note.expl))(selected)(selAttr);
                    };
                    var mkStartStop = function(s) {
                        return mkNode(notePosition(s))(Data_Show.show(ProtoVoices_Model.showStartStop(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
                            reflectSymbol: function() {
                                return "id";
                            }
                        })(Data_Show.showRecordFieldsCons({
                            reflectSymbol: function() {
                                return "pitch";
                            }
                        })(Data_Show.showRecordFieldsNil)(Data_Pitches_Class.showPitchInst(Data_Pitches_Spelled.showpitchSInterval)))(Data_Show.showString))))(s))(Data_Show.show(ProtoVoices_Model.showStartStop(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
                            reflectSymbol: function() {
                                return "id";
                            }
                        })(Data_Show.showRecordFieldsCons({
                            reflectSymbol: function() {
                                return "pitch";
                            }
                        })(Data_Show.showRecordFieldsNil)(Data_Pitches_Class.showPitchInst(Data_Pitches_Spelled.showpitchSInterval)))(Data_Show.showString))))(s))(function() {
                            if (selIsRoot) return Related1.value;
                            return NotSelected1.value;
                        }())([]);
                    };
                    var surfaceNote = function(v1) {
                        if (v1 instanceof ProtoVoices_Model.Inner) return Data_Map_Internal.member(Data_Ord.ordString)(v1.value0.id)(notes);
                        return true;
                    };
                    var mkEdge = function(isRegular) {
                        return function(v1) {
                            if (surfaceNote(v1.left) && surfaceNote(v1.right)) {
                                var v2 = notePosition(v1.left);
                                var v3 = notePosition(v1.right);
                                var edgeSelected = Common.noteIsSelected(sel)(v1.left) || Common.noteIsSelected(sel)(v1.right);
                                return Halogen_Svg_Elements.line(Data_Semigroup.append(Data_Semigroup.semigroupArray)([
                                    Halogen_Svg_Attributes.x1(v2.x),
                                    Halogen_Svg_Attributes.x2(v3.x),
                                    Halogen_Svg_Attributes.y1(v2.y),
                                    Halogen_Svg_Attributes.y2(v3.y),
                                    Halogen_Svg_Attributes.stroke(function() {
                                        if (edgeSelected) return selColorInner;
                                        var $100 = Data_Set.member(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                                            reflectSymbol: function() {
                                                return "right";
                                            }
                                        })(ProtoVoices_Model.ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                                            reflectSymbol: function() {
                                                return "pitch";
                                            }
                                        })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                                            reflectSymbol: function() {
                                                return "id";
                                            }
                                        })(Data_Ord.ordString)))))()({
                                            reflectSymbol: function() {
                                                return "left";
                                            }
                                        })(ProtoVoices_Model.ordStartStop(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
                                            reflectSymbol: function() {
                                                return "pitch";
                                            }
                                        })(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval)))()({
                                            reflectSymbol: function() {
                                                return "id";
                                            }
                                        })(Data_Ord.ordString))))))({
                                            left: v1.left,
                                            right: v1.right
                                        })(surfaceEdges);
                                        if ($100) return black;
                                        return lightgray;
                                    }())
                                ])(function() {
                                    if (isRegular) return [];
                                    return [
                                        Halogen_Svg_Attributes.attr("stroke-dasharray")("6,3")
                                    ];
                                }()));
                            }
                            if (Data_Boolean.otherwise) return Halogen_HTML_Core.text("");
                            throw new Error("Failed pattern match at Render (line 371, column 3 - line 390, column 29): " + [
                                isRegular.constructor.name,
                                v1.constructor.name
                            ]);
                        };
                    };
                    var svgArrows = Control_Bind.bind(Control_Bind.bindArray)(Data_Array.fromFoldable(Data_List_Types.foldableList)(Data_Map_Internal.values(graph.transitions)))(function(trans) {
                        return Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Functor.map(Data_Functor.functorArray)(mkEdge(true))(Data_Array.fromFoldable(Data_Set.foldableSet)(trans.edges.regular)))(Data_Functor.map(Data_Functor.functorArray)(mkEdge(false))(trans.edges.passing));
                    });
                    var svgNotes = Data_Array.fromFoldable(Data_List_Types.foldableList)(Data_Functor.map(Data_List_Types.functorList)(mkNote)(Data_Map_Internal.values(notes)));
                    var svg = Halogen_HTML_Elements.div_([
                        Halogen_Svg_Elements.svg([
                            Halogen_Svg_Attributes.width(width),
                            Halogen_Svg_Attributes.height(height),
                            Halogen_Svg_Attributes.viewBox(-scalex(sett)(1))(-(innerFactor * offset(1)))(width)(height)
                        ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(svgArrows)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(svgNotes)([
                            mkStartStop(ProtoVoices_Model.Start.value),
                            mkStartStop(ProtoVoices_Model.Stop.value)
                        ])))
                    ]);
                    return svg;
                };
            };
        };
    };
    var renderSlice = function(sett) {
        return function(selection) {
            return function(v) {
                var svgx = scalex(sett)(v.slice.x) - noteSize / 2;
                var selIsRoot = function() {
                    if (selection instanceof Data_Maybe.Just) return Data_Eq.eq(ProtoVoices_Model.eqNoteExplanation)(selection.value0.expl)(ProtoVoices_Model.RootExpl.value);
                    if (selection instanceof Data_Maybe.Nothing) return false;
                    throw new Error("Failed pattern match at Render (line 141, column 15 - line 143, column 21): " + [
                        selection.constructor.name
                    ]);
                }();
                var mknode = function(text) {
                    return function(title) {
                        return function(xcoord) {
                            return function(ycoord) {
                                return function(selStatus) {
                                    return function(attr) {
                                        var label = Halogen_Svg_Elements.element("text")([
                                            Halogen_Svg_Attributes.x(xcoord),
                                            Halogen_Svg_Attributes.y(ycoord),
                                            Halogen_Svg_Attributes.text_anchor(Halogen_Svg_Attributes.AnchorMiddle.value),
                                            Halogen_Svg_Attributes.dominant_baseline(Halogen_Svg_Attributes.BaselineMiddle.value),
                                            Halogen_HTML_Properties.style("pointer-events: none;"),
                                            Halogen_Svg_Attributes.fill(function() {
                                                var $116 = Data_Eq.eq(eqSelectionStatus)(selStatus)(NotSelected1.value);
                                                if ($116) return black;
                                                return white;
                                            }())
                                        ])([
                                            Halogen_HTML_Core.text(text)
                                        ]);
                                        var bg = Halogen_Svg_Elements.rect([
                                            Halogen_Svg_Attributes.x(xcoord - noteSize / 2),
                                            Halogen_Svg_Attributes.y(ycoord - offset(1) / 2),
                                            Halogen_Svg_Attributes.width(noteSize),
                                            Halogen_Svg_Attributes.height(offset(1)),
                                            Halogen_Svg_Attributes.fill(function() {
                                                if (selStatus instanceof NotSelected1) return white;
                                                if (selStatus instanceof Selected1) return selColorInner;
                                                if (selStatus instanceof Related1) return selColorInner$prime;
                                                throw new Error("Failed pattern match at Render (line 158, column 15 - line 161, column 42): " + [
                                                    selStatus.constructor.name
                                                ]);
                                            }())
                                        ]);
                                        return Halogen_Svg_Elements.g(attr)([
                                            bg,
                                            label,
                                            Halogen_Svg_Elements.title([])([
                                                Halogen_HTML_Core.text(title)
                                            ])
                                        ]);
                                    };
                                };
                            };
                        };
                    };
                };
                var mknote = function(i) {
                    return function(v1) {
                        var nselectable = v.depth !== 0;
                        var nodeselected = noteSelectionStatus(selection)(v1.note);
                        var attrsSel = [
                            cursor("pointer"),
                            Halogen_HTML_Events.onClick(function(ev) {
                                if (nselectable) return new Common.Select(function() {
                                    var $121 = Data_Eq.eq(eqSelectionStatus)(nodeselected)(Selected1.value);
                                    if ($121) return Data_Maybe.Nothing.value;
                                    return new Data_Maybe.Just({
                                        note: v1.note,
                                        expl: v1.expl
                                    });
                                }());
                                return Common.NoOp.value;
                            })
                        ];
                        return mknode(Data_Show.show(Data_Pitches_Class.showPitchInst(Data_Pitches_Spelled.showpitchSInterval))(v1.note.pitch))(Common.showExplanation(v1.expl))(scalex(sett)(v.slice.x))(scaley(sett)(v.depth) + offset(i))(nodeselected)(function() {
                            if (nselectable) return attrsSel;
                            return [];
                        }());
                    };
                };
                var isTopLevel = v.depth === 0;
                if (v.slice.notes instanceof ProtoVoices_Model.Inner) return Halogen_Svg_Elements.g([])([
                    Halogen_Svg_Elements.g([])(Data_Semigroup.append(Data_Semigroup.semigroupArray)([
                        Halogen_Svg_Elements.rect([
                            Halogen_Svg_Attributes.x(svgx),
                            Halogen_Svg_Attributes.y(scaley(sett)(v.depth) - noteSize / 2),
                            Halogen_Svg_Attributes.width(noteSize),
                            Halogen_Svg_Attributes.height(offset(Data_Array.length(v.slice.notes.value0) - 1 | 0) + noteSize),
                            Halogen_Svg_Attributes.fill(white)
                        ])
                    ])(Data_Array.mapWithIndex(mknote)(v.slice.notes.value0)))
                ]);
                return mknode(Data_Show.show(ProtoVoices_Model.showStartStop(Data_Show.showArray(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
                    reflectSymbol: function() {
                        return "expl";
                    }
                })(Data_Show.showRecordFieldsCons({
                    reflectSymbol: function() {
                        return "note";
                    }
                })(Data_Show.showRecordFieldsNil)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
                    reflectSymbol: function() {
                        return "id";
                    }
                })(Data_Show.showRecordFieldsCons({
                    reflectSymbol: function() {
                        return "pitch";
                    }
                })(Data_Show.showRecordFieldsNil)(Data_Pitches_Class.showPitchInst(Data_Pitches_Spelled.showpitchSInterval)))(Data_Show.showString))))(ProtoVoices_Model.showNoteExplanation)))))(v.slice.notes))(Data_Show.show(ProtoVoices_Model.showStartStop(Data_Show.showArray(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
                    reflectSymbol: function() {
                        return "expl";
                    }
                })(Data_Show.showRecordFieldsCons({
                    reflectSymbol: function() {
                        return "note";
                    }
                })(Data_Show.showRecordFieldsNil)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
                    reflectSymbol: function() {
                        return "id";
                    }
                })(Data_Show.showRecordFieldsCons({
                    reflectSymbol: function() {
                        return "pitch";
                    }
                })(Data_Show.showRecordFieldsNil)(Data_Pitches_Class.showPitchInst(Data_Pitches_Spelled.showpitchSInterval)))(Data_Show.showString))))(ProtoVoices_Model.showNoteExplanation)))))(v.slice.notes))(scalex(sett)(v.slice.x))(scaley(sett)(v.depth))(function() {
                    if (selIsRoot) return Related1.value;
                    return NotSelected1.value;
                }())([]);
            };
        };
    };
    var renderTrans = function(sett) {
        return function(selection) {
            return function(slices) {
                return function(v) {
                    return Data_Maybe.fromMaybe(Halogen_HTML_Core.text(""))(Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Map_Internal.lookup(ProtoVoices_Model.ordSliceId)(v.left)(slices))(function(v1) {
                        return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Map_Internal.lookup(ProtoVoices_Model.ordSliceId)(v.right)(slices))(function(v2) {
                            var selectable = v1.depth === 0 && v2.depth === 0;
                            var mkedge = function(isPassing) {
                                return function(v3) {
                                    var offr = findPitchIndex(v3.right)(v2.slice.notes);
                                    var offl = findPitchIndex(v3.left)(v1.slice.notes);
                                    var edgeSelected = Common.noteIsSelected(selection)(v3.left) || Common.noteIsSelected(selection)(v3.right);
                                    return Halogen_Svg_Elements.line([
                                        Halogen_Svg_Attributes.x1(scalex(sett)(v1.slice.x)),
                                        Halogen_Svg_Attributes.y1(scaley(sett)(v1.depth) + offset(offl)),
                                        Halogen_Svg_Attributes.x2(scalex(sett)(v2.slice.x)),
                                        Halogen_Svg_Attributes.y2(scaley(sett)(v2.depth) + offset(offr)),
                                        Halogen_Svg_Attributes.stroke(function() {
                                            if (edgeSelected) return selColorInner;
                                            return black;
                                        }()),
                                        Halogen_Svg_Attributes.strokeWidth(1),
                                        Halogen_Svg_Attributes.attr("stroke-dasharray")(function() {
                                            if (isPassing) return "6,3";
                                            return "";
                                        }())
                                    ]);
                                };
                            };
                            var edgeLines = Data_Semigroup.append(Data_Semigroup.semigroupArray)(Data_Functor.map(Data_Functor.functorArray)(mkedge(false))(Data_Array.fromFoldable(Data_Set.foldableSet)(v.edges.regular)))(Data_Functor.map(Data_Functor.functorArray)(mkedge(true))(Data_Array.fromFoldable(Data_Foldable.foldableArray)(v.edges.passing)));
                            var bar = [
                                Halogen_Svg_Elements.line([
                                    Halogen_Svg_Attributes.x1(scalex(sett)(v1.slice.x)),
                                    Halogen_Svg_Attributes.y1(scaley(sett)(v1.depth)),
                                    Halogen_Svg_Attributes.x2(scalex(sett)(v2.slice.x)),
                                    Halogen_Svg_Attributes.y2(scaley(sett)(v2.depth)),
                                    Halogen_Svg_Attributes.stroke(lightgray),
                                    Halogen_Svg_Attributes.strokeWidth(function() {
                                        if (selectable) return noteSize / 2;
                                        return 5;
                                    }())
                                ])
                            ];
                            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Halogen_Svg_Elements.g([])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(bar)(edgeLines)));
                        });
                    }));
                };
            };
        };
    };
    var renderReduction = function(sett) {
        return function(piece) {
            return function(graph) {
                return function(surface) {
                    return function(selection) {
                        var width = scalex(sett)(graph.maxx + 2);
                        var svgTranss = Data_Functor.map(Data_Functor.functorArray)(renderTrans(sett)(selection)(graph.slices))(Data_Array.fromFoldable(Data_List_Types.foldableList)(Data_Map_Internal.values(graph.transitions)));
                        var svgSlices = Data_Functor.map(Data_Functor.functorArray)(renderSlice(sett)(selection))(Data_Array.fromFoldable(Data_List_Types.foldableList)(Data_Map_Internal.values(graph.slices)));
                        var svgHoris = Data_Functor.map(Data_Functor.functorArray)(renderHori(sett)(selection)(graph.slices))(Data_Array.fromFoldable(Data_List_Types.foldableList)(graph.horis));
                        var deepestSize = Data_Maybe.fromMaybe(1)(Data_Foldable.maximum(Data_Ord.ordInt)(Data_List_Types.foldableList)(Data_Functor.map(Data_List_Types.functorList)(function($181) {
                            return (function(ns) {
                                return Data_Ord.max(Data_Ord.ordInt)(Data_Array.length(ns))(1);
                            })(ProtoVoices_Model.getInnerNotes(function(v) {
                                return v.slice;
                            }($181)));
                        })(Data_List.filter(function(s) {
                            return s.depth === graph.maxd;
                        })(Data_Map_Internal.values(graph.slices)))));
                        var height = scaley(sett)(graph.maxd) + offset(deepestSize + 1 | 0);
                        return Halogen_HTML_Elements.div_([
                            Halogen_Svg_Elements.svg([
                                Halogen_Svg_Attributes.width(width),
                                Halogen_Svg_Attributes.height(height),
                                Halogen_Svg_Attributes.viewBox(-scalex(sett)(1))(-offset(1))(width)(height)
                            ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(svgTranss)(Data_Semigroup.append(Data_Semigroup.semigroupArray)(svgHoris)(svgSlices)))
                        ]);
                    };
                };
            };
        };
    };
    var axisHeight = offset(2);
    var renderTime = function(sett) {
        return function(yoff) {
            return function(i) {
                return function(v) {
                    var label = function() {
                        if (v.time instanceof Data_Either.Right) {
                            var $170 = Data_Eq.eq(Data_Ratio.eqRatio(Data_Eq.eqInt))(v.time.value0.s)(Data_Ratio.reduce(Data_Ord.ordInt)(Data_EuclideanRing.euclideanRingInt)(0)(1));
                            if ($170) return Data_Show.show(Data_Show.showInt)(v.time.value0.m) + ("." + Data_Show.show(Data_Show.showInt)(v.time.value0.b));
                            return "";
                        }
                        if (v.time instanceof Data_Either.Left) return v.time.value0;
                        throw new Error("Failed pattern match at Render (line 418, column 11 - line 420, column 20): " + [
                            v.time.constructor.name
                        ]);
                    }();
                    return Halogen_Svg_Elements.text([
                        Halogen_Svg_Attributes.x(scalex(sett)(Data_Int.toNumber(i + 1 | 0))),
                        Halogen_Svg_Attributes.y(axisHeight - offset(1) + yoff),
                        Halogen_Svg_Attributes.text_anchor(Halogen_Svg_Attributes.AnchorMiddle.value),
                        Halogen_Svg_Attributes.dominant_baseline(Halogen_Svg_Attributes.BaselineMiddle.value)
                    ])([
                        Halogen_HTML_Core.text(label)
                    ]);
                };
            };
        };
    };
    var renderScoreSVG = function(sett) {
        return function(piece) {
            return function(maxx) {
                var width = scalex(sett)(maxx + 2);
                var height = scoreHeight + axisHeight;
                return Halogen_HTML_Elements.div_([
                    Halogen_Svg_Elements.svg([
                        Halogen_Svg_Attributes.width(width),
                        Halogen_Svg_Attributes.height(height),
                        Halogen_Svg_Attributes.viewBox(-scalex(sett)(1))(0)(width)(height)
                    ])(Data_Semigroup.append(Data_Semigroup.semigroupArray)([
                        Halogen_Svg_Elements.element("svg")([
                            Halogen_HTML_Properties.style("overflow: visible;"),
                            Halogen_HTML_Properties.ref(Halogen_Query_Input.RefLabel("scoreStaff")),
                            Halogen_HTML_Properties.IProp(Halogen_HTML_Core.ref(Data_Functor.map(Data_Maybe.functorMaybe)(function($182) {
                                return Halogen_Query_Input.Action.create(Common.RegisterScoreElt.create($182));
                            })))
                        ])([])
                    ])(Data_Array.mapWithIndex(renderTime(sett)(scoreHeight))(piece)))
                ]);
            };
        };
    };
    exports["scalex"] = scalex;
    exports["noteSize"] = noteSize;
    exports["scoreScale"] = scoreScale;
    exports["renderInner"] = renderInner;
    exports["renderScoreSVG"] = renderScoreSVG;
    exports["renderReduction"] = renderReduction;
})($a63366291e3889d2$var$PS);

(function(exports) {
    const Vex = $crsDQ$vexflow;
    const VF = Vex.default.Flow;
    function addAcc(i, chord, n) {
        if (n > 0) chord.addAccidental(i, new VF.Accidental("#".repeat(n)));
        if (n < 0) chord.addAccidental(i, new VF.Accidental("b".repeat(-n)));
    }
    function noteToVex(n) {
        return n.name + "/" + n.oct;
    }
    function drawNotes(notes) {
        var div = document.createElement("div");
        var renderer = new VF.Renderer(div, VF.Renderer.Backends.SVG);
        //renderer.resize(500, 500);
        var ctx = renderer.getContext();
        var notesT = notes.filter((n)=>n.oct >= 4
        );
        var chordT = new VF.StaveNote({
            clef: "treble",
            keys: notesT.map(noteToVex),
            duration: "q"
        });
        chordT.setStemStyle({
            strokeStyle: "#00000000"
        });
        notesT.forEach((n, i)=>addAcc(i, chordT, n.accs)
        );
        var voiceT = new VF.Voice({
            num_beats: 1,
            beat_value: 4
        });
        voiceT.addTickables([
            chordT
        ]);
        var notesB = notes.filter((n)=>n.oct < 4
        );
        var chordB = new VF.StaveNote({
            clef: "bass",
            keys: notesB.map(noteToVex),
            duration: "q"
        });
        chordB.setStemStyle({
            strokeStyle: "#00000000"
        });
        notesB.forEach((n, i)=>addAcc(i, chordB, n.accs)
        );
        var voiceB = new VF.Voice({
            num_beats: 1,
            beat_value: 4
        });
        voiceB.addTickables([
            chordB
        ]);
        var formatter = new VF.Formatter();
        formatter.joinVoices([
            voiceT
        ]);
        formatter.joinVoices([
            voiceB
        ]);
        formatter.format([
            voiceT,
            voiceB
        ]);
        var width = formatter.getMinTotalWidth() + 50;
        var staveT = new VF.Stave(0, 0, width);
        var staveB = new VF.Stave(0, 70, width);
        //staveT.setContext(ctx).draw();
        //staveB.setContext(ctx).draw();
        if (notesT.length > 0) voiceT.draw(ctx, staveT);
        if (notesB.length > 0) voiceB.draw(ctx, staveB);
        return div.children[0];
    }
    function drawStaff(width) {
        var div = document.createElement("div");
        var renderer = new VF.Renderer(div, VF.Renderer.Backends.SVG);
        renderer.resize(width, 160);
        var ctx = renderer.getContext();
        var staveT = new VF.Stave(0, 0, width).addClef("treble");
        var staveB = new VF.Stave(0, 70, width).addClef("bass");
        staveT.setContext(ctx).draw();
        staveB.setContext(ctx).draw();
        return div.children[0];
    }
    exports.drawScore = (slices)=>(totalWidth)=>(scale)=>{
                var container = document.createElementNS("http://www.w3.org/2000/svg", "g");
                // draw staff
                var staffG = document.createElementNS("http://www.w3.org/2000/svg", "g");
                staffG.setAttribute("transform", "scale(" + scale + "," + scale + ")");
                staffG.appendChild(drawStaff(totalWidth));
                container.appendChild(staffG);
                // draw slices
                slices.forEach((slice)=>{
                    if (slice.notes.length === 0) return;
                    var sliceElt = document.createElementNS("http://www.w3.org/2000/svg", "svg");
                    sliceElt.setAttribute("x", slice.x);
                    sliceElt.setAttribute("y", 0);
                    var sliceG = document.createElementNS("http://www.w3.org/2000/svg", "g");
                    sliceG.setAttribute("transform", "scale(" + scale + "," + scale + ")");
                    sliceG.appendChild(drawNotes(slice.notes));
                    sliceElt.appendChild(sliceG);
                    container.appendChild(sliceElt);
                });
                return container;
            }
    ;
    exports.insertScore = (el)=>(score)=>()=>el.replaceChildren(score)
    ;
})($a63366291e3889d2$var$PS["Utils"] = $a63366291e3889d2$var$PS["Utils"] || {
});
(function($PS) {
    $PS["Utils"] = $PS["Utils"] || {
    };
    var exports = $PS["Utils"];
    var $foreign = $PS["Utils"];
    var Data_Array = $PS["Data.Array"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_Pitches_Class = $PS["Data.Pitches.Class"];
    var Data_Pitches_Spelled = $PS["Data.Pitches.Spelled"];
    var renderScore = function(slices) {
        var pitchToVex = function(p) {
            return {
                name: Data_Pitches_Spelled.letter(Data_Pitches_Spelled.spelledPitch(Data_Pitches_Spelled.spelledSInterval)(Data_Pitches_Spelled.hasintervalclassSInterval)(Data_Pitches_Spelled.spelledSIC))(p),
                oct: Data_Pitches_Spelled.octaves(Data_Pitches_Spelled.spelledPitch(Data_Pitches_Spelled.spelledSInterval)(Data_Pitches_Spelled.hasintervalclassSInterval)(Data_Pitches_Spelled.spelledSIC))(p),
                accs: Data_Pitches_Spelled.alteration(Data_Pitches_Spelled.spelledPitch(Data_Pitches_Spelled.spelledSInterval)(Data_Pitches_Spelled.hasintervalclassSInterval)(Data_Pitches_Spelled.spelledSIC))(p)
            };
        };
        var mkSlice = function(s) {
            return {
                notes: Data_Functor.map(Data_Functor.functorArray)(pitchToVex)(Data_Array.sort(Data_Pitches_Class.ordPitch(Data_Pitches_Spelled.ordSInterval))(Data_Functor.map(Data_Functor.functorArray)(function(v1) {
                    return v1.pitch;
                })(s.notes))),
                x: s.x
            };
        };
        return $foreign.drawScore(Data_Functor.map(Data_Functor.functorArray)(mkSlice)(slices));
    };
    exports["renderScore"] = renderScore;
    exports["insertScore"] = $foreign.insertScore;
})($a63366291e3889d2$var$PS);
(function($PS) {
    $PS["Main"] = $PS["Main"] || {
    };
    var exports = $PS["Main"];
    var Common = $PS["Common"];
    var Control_Applicative = $PS["Control.Applicative"];
    var Control_Bind = $PS["Control.Bind"];
    var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
    var DOM_HTML_Indexed_InputType = $PS["DOM.HTML.Indexed.InputType"];
    var DOM_HTML_Indexed_StepValue = $PS["DOM.HTML.Indexed.StepValue"];
    var Data_Array = $PS["Data.Array"];
    var Data_Either = $PS["Data.Either"];
    var Data_Foldable = $PS["Data.Foldable"];
    var Data_Function = $PS["Data.Function"];
    var Data_Functor = $PS["Data.Functor"];
    var Data_Int = $PS["Data.Int"];
    var Data_Maybe = $PS["Data.Maybe"];
    var Data_Number = $PS["Data.Number"];
    var Data_Ord = $PS["Data.Ord"];
    var Data_Pitches_Class = $PS["Data.Pitches.Class"];
    var Data_Pitches_Spelled = $PS["Data.Pitches.Spelled"];
    var Data_Show = $PS["Data.Show"];
    var Data_Unit = $PS["Data.Unit"];
    var Effect = $PS["Effect"];
    var Effect_Aff = $PS["Effect.Aff"];
    var Effect_Aff_Class = $PS["Effect.Aff.Class"];
    var Effect_Class = $PS["Effect.Class"];
    var Effect_Class_Console = $PS["Effect.Class.Console"];
    var Effect_Random = $PS["Effect.Random"];
    var Effect_Uncurried = $PS["Effect.Uncurried"];
    var Halogen_Aff_Util = $PS["Halogen.Aff.Util"];
    var Halogen_Component = $PS["Halogen.Component"];
    var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
    var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
    var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
    var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
    var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
    var Halogen_VDom_Driver = $PS["Halogen.VDom.Driver"];
    var ProtoVoices_JSONTransport = $PS["ProtoVoices.JSONTransport"];
    var ProtoVoices_Model = $PS["ProtoVoices.Model"];
    var Pruning = $PS["Pruning"];
    var Render = $PS["Render"];
    var Simple_JSON = $PS["Simple.JSON"];
    var Utils = $PS["Utils"];
    var updateStepModel = function(step) {
        return function(max) {
            return function(model) {
                return function(cache) {
                    return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Either.hush(Common.cacheGetPruned(model)(step)(cache)))(function(modelPruned) {
                        var surface = Common.cacheGetSurface(modelPruned)(step)(cache);
                        var graph = Common.cacheGetGraph(modelPruned)(step)(cache);
                        return Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
                            model: model,
                            step: step,
                            max: max,
                            modelPruned: modelPruned,
                            graph: graph,
                            surface: surface
                        });
                    });
                };
            };
        };
    };
    var redrawScore = function(dictMonadEffect) {
        return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function(st) {
            var update = Control_Bind.bind(Data_Maybe.bindMaybe)(st.model)(function(v) {
                return Control_Bind.bind(Data_Maybe.bindMaybe)(st.scoreElt)(function(scoreElt) {
                    var totalWidth = 1 / Render.scoreScale * Render.scalex(st.settings)(Data_Int.toNumber(Data_Array.length(v.model.piece) + 1 | 0));
                    var mkSlice = function(slice) {
                        return {
                            x: Render.scalex(st.settings)(slice.x) - Render.noteSize / 2,
                            notes: Data_Functor.map(Data_Functor.functorArray)(function(v1) {
                                return v1.note;
                            })(ProtoVoices_Model.getInnerNotes(slice))
                        };
                    };
                    return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadEffect))(Utils.insertScore(scoreElt)(Utils.renderScore(Data_Functor.map(Data_Functor.functorArray)(mkSlice)(v.surface.slices))(totalWidth)(Render.scoreScale))));
                });
            });
            return Data_Maybe.fromMaybe(Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit))(update);
        });
    };
    var viewerComponent = function(dictMonadEffect) {
        return function(dictMonadAff) {
            return function(prefix) {
                var setStep = function(f) {
                    return function(st) {
                        return Data_Maybe.fromMaybe(st)(Control_Bind.bind(Data_Maybe.bindMaybe)(st.model)(function(v) {
                            var step$prime = Data_Ord.max(Data_Ord.ordInt)(0)(Data_Ord.min(Data_Ord.ordInt)(v.max)(f(v.step)));
                            return Control_Bind.bind(Data_Maybe.bindMaybe)(updateStepModel(step$prime)(v.max)(v.model)(st.cache))(function(model$prime) {
                                return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(function() {
                                    var $36 = {
                                    };
                                    for(var $37 in st)if (({
                                    }).hasOwnProperty.call(st, $37)) $36[$37] = st[$37];
                                    $36.model = new Data_Maybe.Just(model$prime);
                                    return $36;
                                }());
                            });
                        }));
                    };
                };
                var render = function(st) {
                    if (st.model instanceof Data_Maybe.Nothing) return Halogen_HTML_Elements.div([
                        Common.class_("pv-content")
                    ])([
                        Halogen_HTML_Core.text("No analysis loaded.")
                    ]);
                    if (st.model instanceof Data_Maybe.Just) return Halogen_HTML_Elements.div([
                        Common.class_("pv-widget")
                    ])([
                        Halogen_HTML_Elements.header([
                            Common.class_("pv-content pv-controls")
                        ])([
                            Halogen_HTML_Elements.div([
                                Common.class_("pv-toolbar")
                            ])([
                                Halogen_HTML_Elements.button([
                                    Common.class_("pv-button pure-button"),
                                    Halogen_HTML_Events.onClick(function(v) {
                                        return Common.ToFirst.value;
                                    }),
                                    Halogen_HTML_Properties.disabled(st.model.value0.step <= 0),
                                    Halogen_HTML_Properties.title("Move to first step")
                                ])([
                                    Halogen_HTML_Core.text("<< First")
                                ]),
                                Halogen_HTML_Elements.button([
                                    Common.class_("pv-button pure-button"),
                                    Halogen_HTML_Events.onClick(function(v) {
                                        return Common.Backward.value;
                                    }),
                                    Halogen_HTML_Properties.disabled(st.model.value0.step <= 0),
                                    Halogen_HTML_Properties.title("Move one step back")
                                ])([
                                    Halogen_HTML_Core.text("< Previous")
                                ]),
                                Halogen_HTML_Elements.button([
                                    Common.class_("pv-button pure-button"),
                                    Halogen_HTML_Events.onClick(function(v) {
                                        return Common.Forward.value;
                                    }),
                                    Halogen_HTML_Properties.disabled(st.model.value0.step >= st.model.value0.max),
                                    Halogen_HTML_Properties.title("Move one step forward")
                                ])([
                                    Halogen_HTML_Core.text("Next >")
                                ]),
                                Halogen_HTML_Elements.button([
                                    Common.class_("pv-button pure-button"),
                                    Halogen_HTML_Events.onClick(function(v) {
                                        return Common.ToLast.value;
                                    }),
                                    Halogen_HTML_Properties.disabled(st.model.value0.step >= st.model.value0.max),
                                    Halogen_HTML_Properties.title("Move to last step")
                                ])([
                                    Halogen_HTML_Core.text("Last >>")
                                ]),
                                Halogen_HTML_Elements.span([
                                    Common.class_("pv-step")
                                ])([
                                    Halogen_HTML_Core.text(" Step " + (Data_Show.show(Data_Show.showInt)(st.model.value0.step) + (" of " + (Data_Show.show(Data_Show.showInt)(st.model.value0.max) + "."))))
                                ]),
                                Halogen_HTML_Elements.span([
                                    Common.class_("pv-step")
                                ])([
                                    function() {
                                        if (st.selected instanceof Data_Maybe.Just) return Halogen_HTML_Core.text("Note selected: " + (Data_Show.show(Data_Pitches_Class.showPitchInst(Data_Pitches_Spelled.showpitchSInterval))(st.selected.value0.note.pitch) + (", " + (Common.showExplanation(st.selected.value0.expl) + "."))));
                                        if (st.selected instanceof Data_Maybe.Nothing) return Halogen_HTML_Core.text("No note selected.");
                                        throw new Error("Failed pattern match at Main (line 138, column 23 - line 140, column 63): " + [
                                            st.selected.constructor.name
                                        ]);
                                    }()
                                ]),
                                Halogen_HTML_Elements.div([
                                    Common.class_("pv-spacer")
                                ])([]),
                                Halogen_HTML_Elements.button([
                                    Common.class_("pv-button pure-button" + function() {
                                        if (st.settings.showSettings) return " pv-button-pressed pure-button-active";
                                        return "";
                                    }()),
                                    Halogen_HTML_Events.onClick(function(v) {
                                        return Common.ToggleSettings.value;
                                    }),
                                    Halogen_HTML_Properties.title("Show or hide settings")
                                ])([
                                    Halogen_HTML_Core.text("Settings")
                                ])
                            ]),
                            function() {
                                if (st.settings.showSettings) return Halogen_HTML_Elements.div_([
                                    Halogen_HTML_Elements.div([
                                        Common.class_("pv-control-box")
                                    ])([
                                        Halogen_HTML_Elements.label([
                                            Common.class_("pv-control-label"),
                                            Halogen_HTML_Properties["for"]("xscale")
                                        ])([
                                            Halogen_HTML_Core.text("horizontal zoom: " + Data_Show.show(Data_Show.showNumber)(st.settings.xscale))
                                        ]),
                                        Halogen_HTML_Elements.input([
                                            Common.class_("pv-control-range"),
                                            Halogen_HTML_Properties.type_(Halogen_HTML_Core.isPropInputType)(DOM_HTML_Indexed_InputType.InputRange.value),
                                            Halogen_HTML_Properties.min(-5),
                                            Halogen_HTML_Properties.max(0),
                                            Halogen_HTML_Properties.step(new DOM_HTML_Indexed_StepValue.Step(0.01)),
                                            Halogen_HTML_Properties.value(Data_Show.show(Data_Show.showNumber)(st.settings.xscale)),
                                            Halogen_HTML_Events.onValueChange(Common.SetXScale.create),
                                            Halogen_HTML_Properties.name("xscale")
                                        ])
                                    ]),
                                    Halogen_HTML_Elements.div([
                                        Common.class_("pv-control-box")
                                    ])([
                                        Halogen_HTML_Elements.label([
                                            Common.class_("pv-control-label"),
                                            Halogen_HTML_Properties["for"]("yscale")
                                        ])([
                                            Halogen_HTML_Core.text("vertical zoom: " + Data_Show.show(Data_Show.showNumber)(st.settings.yscale))
                                        ]),
                                        Halogen_HTML_Elements.input([
                                            Common.class_("pv-control-range"),
                                            Halogen_HTML_Properties.type_(Halogen_HTML_Core.isPropInputType)(DOM_HTML_Indexed_InputType.InputRange.value),
                                            Halogen_HTML_Properties.min(-2),
                                            Halogen_HTML_Properties.max(2),
                                            Halogen_HTML_Properties.step(new DOM_HTML_Indexed_StepValue.Step(0.01)),
                                            Halogen_HTML_Properties.value(Data_Show.show(Data_Show.showNumber)(st.settings.yscale)),
                                            Halogen_HTML_Events.onValueChange(Common.SetYScale.create),
                                            Halogen_HTML_Properties.name("yscale")
                                        ])
                                    ]),
                                    Halogen_HTML_Elements.div([
                                        Common.class_("pv-control-box")
                                    ])([
                                        Halogen_HTML_Elements.input([
                                            Halogen_HTML_Properties.type_(Halogen_HTML_Core.isPropInputType)(DOM_HTML_Indexed_InputType.InputCheckbox.value),
                                            Halogen_HTML_Properties.checked(st.settings.showInner),
                                            Halogen_HTML_Events.onChange(function(v) {
                                                return Common.ToggleInner.value;
                                            }),
                                            Halogen_HTML_Properties.id(prefix + "showInnerGraph")
                                        ]),
                                        Halogen_HTML_Elements.label([
                                            Halogen_HTML_Properties["for"](prefix + "showInnerGraph")
                                        ])([
                                            Halogen_HTML_Core.text("show inner graph")
                                        ])
                                    ]),
                                    Halogen_HTML_Elements.div([
                                        Common.class_("pv-control-box")
                                    ])([
                                        Halogen_HTML_Elements.input([
                                            Halogen_HTML_Properties.type_(Halogen_HTML_Core.isPropInputType)(DOM_HTML_Indexed_InputType.InputCheckbox.value),
                                            Halogen_HTML_Properties.checked(st.settings.showScore),
                                            Halogen_HTML_Events.onChange(function(v) {
                                                return Common.ToggleScore.value;
                                            }),
                                            Halogen_HTML_Properties.id(prefix + "showScore")
                                        ]),
                                        Halogen_HTML_Elements.label([
                                            Halogen_HTML_Properties["for"](prefix + "showScore")
                                        ])([
                                            Halogen_HTML_Core.text("show score")
                                        ])
                                    ]),
                                    Halogen_HTML_Elements.div([
                                        Common.class_("pv-control-box")
                                    ])([
                                        Halogen_HTML_Elements.input([
                                            Halogen_HTML_Properties.type_(Halogen_HTML_Core.isPropInputType)(DOM_HTML_Indexed_InputType.InputCheckbox.value),
                                            Halogen_HTML_Properties.checked(st.settings.showOuter),
                                            Halogen_HTML_Events.onChange(function(v) {
                                                return Common.ToggleOuter.value;
                                            }),
                                            Halogen_HTML_Properties.id(prefix + "showOuterGraph")
                                        ]),
                                        Halogen_HTML_Elements.label([
                                            Halogen_HTML_Properties["for"](prefix + "showOuterGraph")
                                        ])([
                                            Halogen_HTML_Core.text("show outer graph")
                                        ])
                                    ])
                                ]);
                                return Halogen_HTML_Core.text("");
                            }()
                        ]),
                        Halogen_HTML_Elements.div([
                            Common.class_("pv-wide")
                        ])([
                            Halogen_HTML_Elements.div([
                                Common.class_("pv-graph")
                            ])([
                                function() {
                                    if (st.settings.showInner) return Render.renderInner(st.settings)(st.selected)(st.model.value0.surface)(st.model.value0.graph);
                                    return Halogen_HTML_Core.text("");
                                }(),
                                function() {
                                    if (st.settings.showScore) return Render.renderScoreSVG(st.settings)(st.model.value0.modelPruned.piece)(st.model.value0.graph.maxx);
                                    return Halogen_HTML_Core.text("");
                                }(),
                                function() {
                                    if (st.settings.showOuter) return Render.renderReduction(st.settings)(st.model.value0.modelPruned.piece)(st.model.value0.graph)(st.model.value0.surface)(st.selected);
                                    return Halogen_HTML_Core.text("");
                                }()
                            ])
                        ])
                    ]);
                    throw new Error("Failed pattern match at Main (line 100, column 15 - line 226, column 10): " + [
                        st.model.constructor.name
                    ]);
                };
                var initialState = function(v) {
                    var model = Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Either.hush(Simple_JSON.readJSON(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "derivation";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readForeignVariant()(Simple_JSON.readVariantCons({
                        reflectSymbol: function() {
                            return "freezeLeft";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "prevTime";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "ties";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsNil)()())()()))()(Simple_JSON.readVariantCons({
                        reflectSymbol: function() {
                            return "freezeOnly";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "prevTime";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "ties";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsNil)()())()()))()(Simple_JSON.readVariantCons({
                        reflectSymbol: function() {
                            return "hori";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "children";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "child";
                        }
                    })(Simple_JSON.readForeignVariant()(Simple_JSON.readVariantCons({
                        reflectSymbol: function() {
                            return "bothChildren";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()()))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()()))(Simple_JSON.readFieldsNil)()())()()))()(Simple_JSON.readVariantCons({
                        reflectSymbol: function() {
                            return "leftChild";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()()))()(Simple_JSON.readVariantCons({
                        reflectSymbol: function() {
                            return "rightChild";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()()))()(Simple_JSON.readVariantCons({
                        reflectSymbol: function() {
                            return "tooManyChildren";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsNil)()())()()))()(Simple_JSON.readVariantNil))))))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "parent";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()()))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "ids";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ProtoVoices_Model.readForeignTransId)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "lslice";
                        }
                    })(ProtoVoices_Model.readForeignSliceId)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "mid";
                        }
                    })(ProtoVoices_Model.readForeignTransId)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ProtoVoices_Model.readForeignTransId)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "rslice";
                        }
                    })(ProtoVoices_Model.readForeignSliceId)(Simple_JSON.readFieldsNil)()())()())()())()())()()))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "midEdges";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "passing";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "regular";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsNil)()())()()))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "unexplained";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsNil)()())()()))(Simple_JSON.readFieldsNil)()())()())()())()()))()(Simple_JSON.readVariantCons({
                        reflectSymbol: function() {
                            return "splitLeft";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "fromLeft";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "children";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "child";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()()))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "orn";
                        }
                    })(Simple_JSON.readMaybe(Simple_JSON.readString))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "parent";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()()))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "fromRight";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "children";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "child";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()()))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "orn";
                        }
                    })(Simple_JSON.readMaybe(Simple_JSON.readString))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "parent";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()()))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "ids";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ProtoVoices_Model.readForeignTransId)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ProtoVoices_Model.readForeignTransId)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "slice";
                        }
                    })(ProtoVoices_Model.readForeignSliceId)(Simple_JSON.readFieldsNil)()())()())()()))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "keepLeft";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "keepRight";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "passLeft";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "passRight";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "passing";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "children";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "child";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()()))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "orn";
                        }
                    })(Simple_JSON.readMaybe(Simple_JSON.readString))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "parent";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsNil)()())()()))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "regular";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "children";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "child";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()()))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "orn";
                        }
                    })(Simple_JSON.readMaybe(Simple_JSON.readString))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "parent";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsNil)()())()()))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "unexplained";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsNil)()())()())()())()())()())()())()())()())()())()()))()(Simple_JSON.readVariantCons({
                        reflectSymbol: function() {
                            return "splitOnly";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "fromLeft";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "children";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "child";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()()))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "orn";
                        }
                    })(Simple_JSON.readMaybe(Simple_JSON.readString))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "parent";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()()))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "fromRight";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "children";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "child";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()()))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "orn";
                        }
                    })(Simple_JSON.readMaybe(Simple_JSON.readString))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "parent";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()()))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "ids";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ProtoVoices_Model.readForeignTransId)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ProtoVoices_Model.readForeignTransId)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "slice";
                        }
                    })(ProtoVoices_Model.readForeignSliceId)(Simple_JSON.readFieldsNil)()())()())()()))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "keepLeft";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "keepRight";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "passLeft";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "passRight";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "passing";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "children";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "child";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()()))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "orn";
                        }
                    })(Simple_JSON.readMaybe(Simple_JSON.readString))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "parent";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsNil)()())()()))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "regular";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "children";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "child";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()()))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "orn";
                        }
                    })(Simple_JSON.readMaybe(Simple_JSON.readString))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "parent";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsNil)()())()()))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "unexplained";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsNil)()())()())()())()())()())()())()())()())()())()()))()(Simple_JSON.readVariantCons({
                        reflectSymbol: function() {
                            return "splitRight";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "fromLeft";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "children";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "child";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()()))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "orn";
                        }
                    })(Simple_JSON.readMaybe(Simple_JSON.readString))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "parent";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()()))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "fromRight";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "children";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "child";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()()))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "orn";
                        }
                    })(Simple_JSON.readMaybe(Simple_JSON.readString))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "parent";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()()))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "ids";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ProtoVoices_Model.readForeignTransId)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ProtoVoices_Model.readForeignTransId)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "slice";
                        }
                    })(ProtoVoices_Model.readForeignSliceId)(Simple_JSON.readFieldsNil)()())()())()()))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "keepLeft";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "keepRight";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "passLeft";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "passRight";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "passing";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "children";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "child";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()()))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "orn";
                        }
                    })(Simple_JSON.readMaybe(Simple_JSON.readString))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "parent";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsNil)()())()()))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "regular";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "children";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "child";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()()))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "orn";
                        }
                    })(Simple_JSON.readMaybe(Simple_JSON.readString))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "parent";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsNil)()())()()))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "unexplained";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsNil)()())()())()())()())()())()())()())()())()())()()))()(Simple_JSON.readVariantNil)))))))))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "start";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(ProtoVoices_Model.readForeignSliceId)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "notes";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()()))))(Simple_JSON.readFieldsNil)()())()()))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "topSegments";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "rslice";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(ProtoVoices_Model.readForeignSliceId)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "notes";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()()))))(Simple_JSON.readFieldsNil)()())()()))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "trans";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "edges";
                        }
                    })(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "passing";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "regular";
                        }
                    })(Simple_JSON.readArray(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "left";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "right";
                        }
                    })(ProtoVoices_Model.readForeignStartStop(Simple_JSON.readRecord()(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(Simple_JSON.readString)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "pitch";
                        }
                    })(Data_Pitches_Class.readForeignPitch(Data_Pitches_Spelled.readForeignSPitch))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsNil)()())()()))(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "id";
                        }
                    })(ProtoVoices_Model.readForeignTransId)(Simple_JSON.readFieldsCons({
                        reflectSymbol: function() {
                            return "is2nd";
                        }
                    })(Simple_JSON.readBoolean)(Simple_JSON.readFieldsNil)()())()())()()))(Simple_JSON.readFieldsNil)()())()())))(Simple_JSON.readFieldsNil)()())()())()()))(v.json)))(function(v1) {
                        return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Either.hush(ProtoVoices_JSONTransport.modelFromJSON(v1)))(function(m) {
                            var max = Pruning.countSteps(m.reduction);
                            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
                                model: m,
                                modelPruned: m,
                                step: max,
                                max: max
                            });
                        });
                    });
                    var cache = function() {
                        if (model instanceof Data_Maybe.Just) return Common.fillCache(model.value0.model)(model.value0.step)(Common.emptyCache);
                        if (model instanceof Data_Maybe.Nothing) return Common.emptyCache;
                        throw new Error("Failed pattern match at Main (line 96, column 13 - line 98, column 28): " + [
                            model.constructor.name
                        ]);
                    }();
                    return {
                        model: (function() {
                            if (model instanceof Data_Maybe.Just) return updateStepModel(model.value0.step)(model.value0.max)(model.value0.model)(cache);
                            if (model instanceof Data_Maybe.Nothing) return Data_Maybe.Nothing.value;
                            throw new Error("Failed pattern match at Main (line 80, column 9 - line 82, column 29): " + [
                                model.constructor.name
                            ]);
                        })(),
                        cache: cache,
                        settings: v.settings,
                        selected: Data_Maybe.Nothing.value,
                        scoreElt: Data_Maybe.Nothing.value
                    };
                };
                var handleAction = function(v) {
                    if (v instanceof Common.NoOp) return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                    if (v instanceof Common.Init) return Effect_Class_Console.log(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))("initializing.");
                    if (v instanceof Common.Select) return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function(st) {
                        var $66 = {
                        };
                        for(var $67 in st)if (({
                        }).hasOwnProperty.call(st, $67)) $66[$67] = st[$67];
                        $66.selected = v.value0;
                        return $66;
                    });
                    if (v instanceof Common.Forward) return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(setStep(function(v1) {
                        return v1 + 1 | 0;
                    })))(function() {
                        return redrawScore(dictMonadAff.MonadEffect0());
                    });
                    if (v instanceof Common.Backward) return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(setStep(function(v1) {
                        return v1 - 1 | 0;
                    })))(function() {
                        return redrawScore(dictMonadAff.MonadEffect0());
                    });
                    if (v instanceof Common.ToFirst) return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(setStep(Data_Function["const"](0))))(function() {
                        return redrawScore(dictMonadAff.MonadEffect0());
                    });
                    if (v instanceof Common.ToLast) return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function(st) {
                        if (st.model instanceof Data_Maybe.Just) return setStep(Data_Function["const"](st.model.value0.max))(st);
                        if (st.model instanceof Data_Maybe.Nothing) return st;
                        throw new Error("Failed pattern match at Main (line 250, column 24 - line 252, column 22): " + [
                            st.model.constructor.name
                        ]);
                    }))(function() {
                        return redrawScore(dictMonadAff.MonadEffect0());
                    });
                    if (v instanceof Common.RegisterScoreElt) return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function(st) {
                        var $73 = {
                        };
                        for(var $74 in st)if (({
                        }).hasOwnProperty.call(st, $74)) $73[$74] = st[$74];
                        $73.scoreElt = new Data_Maybe.Just(v.value0);
                        return $73;
                    }))(function() {
                        return redrawScore(dictMonadAff.MonadEffect0());
                    });
                    if (v instanceof Common.ToggleSettings) return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function(st) {
                        var $80 = {
                        };
                        for(var $81 in st)if (({
                        }).hasOwnProperty.call(st, $81)) $80[$81] = st[$81];
                        $80.settings = (function() {
                            var $77 = {
                            };
                            for(var $78 in st.settings)if (({
                            }).hasOwnProperty.call(st.settings, $78)) $77[$78] = st["settings"][$78];
                            $77.showSettings = !st.settings.showSettings;
                            return $77;
                        })();
                        return $80;
                    });
                    if (v instanceof Common.ToggleInner) return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function(st) {
                        var $86 = {
                        };
                        for(var $87 in st)if (({
                        }).hasOwnProperty.call(st, $87)) $86[$87] = st[$87];
                        $86.settings = (function() {
                            var $83 = {
                            };
                            for(var $84 in st.settings)if (({
                            }).hasOwnProperty.call(st.settings, $84)) $83[$84] = st["settings"][$84];
                            $83.showInner = !st.settings.showInner;
                            return $83;
                        })();
                        return $86;
                    });
                    if (v instanceof Common.ToggleOuter) return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function(st) {
                        var $92 = {
                        };
                        for(var $93 in st)if (({
                        }).hasOwnProperty.call(st, $93)) $92[$93] = st[$93];
                        $92.settings = (function() {
                            var $89 = {
                            };
                            for(var $90 in st.settings)if (({
                            }).hasOwnProperty.call(st.settings, $90)) $89[$90] = st["settings"][$90];
                            $89.showOuter = !st.settings.showOuter;
                            return $89;
                        })();
                        return $92;
                    });
                    if (v instanceof Common.ToggleScore) return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function(st) {
                        var $98 = {
                        };
                        for(var $99 in st)if (({
                        }).hasOwnProperty.call(st, $99)) $98[$99] = st[$99];
                        $98.settings = (function() {
                            var $95 = {
                            };
                            for(var $96 in st.settings)if (({
                            }).hasOwnProperty.call(st.settings, $96)) $95[$96] = st["settings"][$96];
                            $95.showScore = !st.settings.showScore;
                            return $95;
                        })();
                        return $98;
                    });
                    if (v instanceof Common.SetXScale) {
                        var v11 = Data_Number.fromString(v.value0);
                        if (v11 instanceof Data_Maybe.Nothing) return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                        if (v11 instanceof Data_Maybe.Just) return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function(st) {
                            var $105 = {
                            };
                            for(var $106 in st)if (({
                            }).hasOwnProperty.call(st, $106)) $105[$106] = st[$106];
                            $105.settings = (function() {
                                var $102 = {
                                };
                                for(var $103 in st.settings)if (({
                                }).hasOwnProperty.call(st.settings, $103)) $102[$103] = st["settings"][$103];
                                $102.xscale = v11.value0;
                                return $102;
                            })();
                            return $105;
                        }))(function() {
                            return redrawScore(dictMonadAff.MonadEffect0());
                        });
                        throw new Error("Failed pattern match at Main (line 261, column 20 - line 265, column 20): " + [
                            v11.constructor.name
                        ]);
                    }
                    if (v instanceof Common.SetYScale) {
                        var v11 = Data_Number.fromString(v.value0);
                        if (v11 instanceof Data_Maybe.Nothing) return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                        if (v11 instanceof Data_Maybe.Just) return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function(st) {
                            var $114 = {
                            };
                            for(var $115 in st)if (({
                            }).hasOwnProperty.call(st, $115)) $114[$115] = st[$115];
                            $114.settings = (function() {
                                var $111 = {
                                };
                                for(var $112 in st.settings)if (({
                                }).hasOwnProperty.call(st.settings, $112)) $111[$112] = st["settings"][$112];
                                $111.yscale = v11.value0;
                                return $111;
                            })();
                            return $114;
                        }))(function() {
                            return redrawScore(dictMonadAff.MonadEffect0());
                        });
                        throw new Error("Failed pattern match at Main (line 266, column 20 - line 270, column 20): " + [
                            v11.constructor.name
                        ]);
                    }
                    throw new Error("Failed pattern match at Main (line 236, column 18 - line 270, column 20): " + [
                        v.constructor.name
                    ]);
                };
                return Halogen_Component.mkComponent({
                    initialState: initialState,
                    render: render,
                    "eval": Halogen_Component.mkEval({
                        handleAction: handleAction,
                        handleQuery: Halogen_Component.defaultEval.handleQuery,
                        receive: Halogen_Component.defaultEval.receive,
                        initialize: new Data_Maybe.Just(Common.Init.value),
                        finalize: Halogen_Component.defaultEval.finalize
                    })
                });
            };
        };
    };
    var createViewer$prime = function(eltSelector) {
        return function(json) {
            return function(opts) {
                return function __do() {
                    var pfx = Data_Functor.map(Effect.functorEffect)(Data_Show.show(Data_Show.showNumber))(Effect_Random.random)();
                    var settings = Common.readOptions(opts);
                    return Halogen_Aff_Util.runHalogenAff(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Halogen_Aff_Util.awaitLoad)(function() {
                        return Control_Bind.bind(Effect_Aff.bindAff)(Halogen_Aff_Util.selectElement(eltSelector))(function(elt) {
                            return Data_Foldable.for_(Effect_Aff.applicativeAff)(Data_Foldable.foldableMaybe)(elt)(Halogen_VDom_Driver.runUI(viewerComponent(Effect_Aff.monadEffectAff)(Effect_Aff_Class.monadAffAff)(pfx))({
                                json: json,
                                settings: settings
                            }));
                        });
                    }))();
                };
            };
        };
    };
    var createViewer = Effect_Uncurried.mkEffectFn3(createViewer$prime);
    exports["createViewer"] = createViewer;
    exports["createViewer'"] = createViewer$prime;
    exports["updateStepModel"] = updateStepModel;
    exports["viewerComponent"] = viewerComponent;
    exports["redrawScore"] = redrawScore;
})($a63366291e3889d2$var$PS);
$a63366291e3889d2$exports = $a63366291e3889d2$var$PS["Main"];


export {$a63366291e3889d2$exports as default};
//# sourceMappingURL=module.js.map
